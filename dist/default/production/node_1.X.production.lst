

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 20 00:00:18 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1825
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1825 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000E                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     010E                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     011A                     	;# 
   122     011B                     	;# 
   123     011D                     	;# 
   124     011E                     	;# 
   125     018C                     	;# 
   126     018E                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0194                     	;# 
   134     0195                     	;# 
   135     0196                     	;# 
   136     0199                     	;# 
   137     019A                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019C                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019F                     	;# 
   144     020C                     	;# 
   145     020E                     	;# 
   146     0211                     	;# 
   147     0211                     	;# 
   148     0212                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0213                     	;# 
   152     0214                     	;# 
   153     0214                     	;# 
   154     0215                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0216                     	;# 
   158     0216                     	;# 
   159     0217                     	;# 
   160     0217                     	;# 
   161     0291                     	;# 
   162     0291                     	;# 
   163     0292                     	;# 
   164     0293                     	;# 
   165     0294                     	;# 
   166     0295                     	;# 
   167     0295                     	;# 
   168     0296                     	;# 
   169     0298                     	;# 
   170     0298                     	;# 
   171     0299                     	;# 
   172     029A                     	;# 
   173     029B                     	;# 
   174     029C                     	;# 
   175     029D                     	;# 
   176     029E                     	;# 
   177     0311                     	;# 
   178     0311                     	;# 
   179     0312                     	;# 
   180     0313                     	;# 
   181     0318                     	;# 
   182     0318                     	;# 
   183     0319                     	;# 
   184     031A                     	;# 
   185     038C                     	;# 
   186     038E                     	;# 
   187     0391                     	;# 
   188     0392                     	;# 
   189     0393                     	;# 
   190     039A                     	;# 
   191     039C                     	;# 
   192     039D                     	;# 
   193     039E                     	;# 
   194     039F                     	;# 
   195     0415                     	;# 
   196     0416                     	;# 
   197     0417                     	;# 
   198     041C                     	;# 
   199     041D                     	;# 
   200     041E                     	;# 
   201     0FE4                     	;# 
   202     0FE5                     	;# 
   203     0FE6                     	;# 
   204     0FE7                     	;# 
   205     0FE8                     	;# 
   206     0FE9                     	;# 
   207     0FEA                     	;# 
   208     0FEB                     	;# 
   209     0FED                     	;# 
   210     0FEE                     	;# 
   211     0FEF                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000E                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0015                     	;# 
   230     0016                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001C                     	;# 
   238     001E                     	;# 
   239     001F                     	;# 
   240     008C                     	;# 
   241     008E                     	;# 
   242     0091                     	;# 
   243     0092                     	;# 
   244     0093                     	;# 
   245     0095                     	;# 
   246     0096                     	;# 
   247     0097                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009A                     	;# 
   251     009B                     	;# 
   252     009B                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     010C                     	;# 
   257     010E                     	;# 
   258     0111                     	;# 
   259     0112                     	;# 
   260     0113                     	;# 
   261     0114                     	;# 
   262     0115                     	;# 
   263     0116                     	;# 
   264     0117                     	;# 
   265     0118                     	;# 
   266     0119                     	;# 
   267     011A                     	;# 
   268     011B                     	;# 
   269     011D                     	;# 
   270     011E                     	;# 
   271     018C                     	;# 
   272     018E                     	;# 
   273     0191                     	;# 
   274     0191                     	;# 
   275     0192                     	;# 
   276     0193                     	;# 
   277     0193                     	;# 
   278     0193                     	;# 
   279     0194                     	;# 
   280     0195                     	;# 
   281     0196                     	;# 
   282     0199                     	;# 
   283     019A                     	;# 
   284     019B                     	;# 
   285     019B                     	;# 
   286     019C                     	;# 
   287     019D                     	;# 
   288     019E                     	;# 
   289     019F                     	;# 
   290     020C                     	;# 
   291     020E                     	;# 
   292     0211                     	;# 
   293     0211                     	;# 
   294     0212                     	;# 
   295     0212                     	;# 
   296     0213                     	;# 
   297     0213                     	;# 
   298     0214                     	;# 
   299     0214                     	;# 
   300     0215                     	;# 
   301     0215                     	;# 
   302     0215                     	;# 
   303     0216                     	;# 
   304     0216                     	;# 
   305     0217                     	;# 
   306     0217                     	;# 
   307     0291                     	;# 
   308     0291                     	;# 
   309     0292                     	;# 
   310     0293                     	;# 
   311     0294                     	;# 
   312     0295                     	;# 
   313     0295                     	;# 
   314     0296                     	;# 
   315     0298                     	;# 
   316     0298                     	;# 
   317     0299                     	;# 
   318     029A                     	;# 
   319     029B                     	;# 
   320     029C                     	;# 
   321     029D                     	;# 
   322     029E                     	;# 
   323     0311                     	;# 
   324     0311                     	;# 
   325     0312                     	;# 
   326     0313                     	;# 
   327     0318                     	;# 
   328     0318                     	;# 
   329     0319                     	;# 
   330     031A                     	;# 
   331     038C                     	;# 
   332     038E                     	;# 
   333     0391                     	;# 
   334     0392                     	;# 
   335     0393                     	;# 
   336     039A                     	;# 
   337     039C                     	;# 
   338     039D                     	;# 
   339     039E                     	;# 
   340     039F                     	;# 
   341     0415                     	;# 
   342     0416                     	;# 
   343     0417                     	;# 
   344     041C                     	;# 
   345     041D                     	;# 
   346     041E                     	;# 
   347     0FE4                     	;# 
   348     0FE5                     	;# 
   349     0FE6                     	;# 
   350     0FE7                     	;# 
   351     0FE8                     	;# 
   352     0FE9                     	;# 
   353     0FEA                     	;# 
   354     0FEB                     	;# 
   355     0FED                     	;# 
   356     0FEE                     	;# 
   357     0FEF                     	;# 
   358     0000                     	;# 
   359     0001                     	;# 
   360     0002                     	;# 
   361     0003                     	;# 
   362     0004                     	;# 
   363     0005                     	;# 
   364     0006                     	;# 
   365     0007                     	;# 
   366     0008                     	;# 
   367     0009                     	;# 
   368     000A                     	;# 
   369     000B                     	;# 
   370     000C                     	;# 
   371     000E                     	;# 
   372     0011                     	;# 
   373     0012                     	;# 
   374     0013                     	;# 
   375     0015                     	;# 
   376     0016                     	;# 
   377     0016                     	;# 
   378     0017                     	;# 
   379     0018                     	;# 
   380     0019                     	;# 
   381     001A                     	;# 
   382     001B                     	;# 
   383     001C                     	;# 
   384     001E                     	;# 
   385     001F                     	;# 
   386     008C                     	;# 
   387     008E                     	;# 
   388     0091                     	;# 
   389     0092                     	;# 
   390     0093                     	;# 
   391     0095                     	;# 
   392     0096                     	;# 
   393     0097                     	;# 
   394     0098                     	;# 
   395     0099                     	;# 
   396     009A                     	;# 
   397     009B                     	;# 
   398     009B                     	;# 
   399     009C                     	;# 
   400     009D                     	;# 
   401     009E                     	;# 
   402     010C                     	;# 
   403     010E                     	;# 
   404     0111                     	;# 
   405     0112                     	;# 
   406     0113                     	;# 
   407     0114                     	;# 
   408     0115                     	;# 
   409     0116                     	;# 
   410     0117                     	;# 
   411     0118                     	;# 
   412     0119                     	;# 
   413     011A                     	;# 
   414     011B                     	;# 
   415     011D                     	;# 
   416     011E                     	;# 
   417     018C                     	;# 
   418     018E                     	;# 
   419     0191                     	;# 
   420     0191                     	;# 
   421     0192                     	;# 
   422     0193                     	;# 
   423     0193                     	;# 
   424     0193                     	;# 
   425     0194                     	;# 
   426     0195                     	;# 
   427     0196                     	;# 
   428     0199                     	;# 
   429     019A                     	;# 
   430     019B                     	;# 
   431     019B                     	;# 
   432     019C                     	;# 
   433     019D                     	;# 
   434     019E                     	;# 
   435     019F                     	;# 
   436     020C                     	;# 
   437     020E                     	;# 
   438     0211                     	;# 
   439     0211                     	;# 
   440     0212                     	;# 
   441     0212                     	;# 
   442     0213                     	;# 
   443     0213                     	;# 
   444     0214                     	;# 
   445     0214                     	;# 
   446     0215                     	;# 
   447     0215                     	;# 
   448     0215                     	;# 
   449     0216                     	;# 
   450     0216                     	;# 
   451     0217                     	;# 
   452     0217                     	;# 
   453     0291                     	;# 
   454     0291                     	;# 
   455     0292                     	;# 
   456     0293                     	;# 
   457     0294                     	;# 
   458     0295                     	;# 
   459     0295                     	;# 
   460     0296                     	;# 
   461     0298                     	;# 
   462     0298                     	;# 
   463     0299                     	;# 
   464     029A                     	;# 
   465     029B                     	;# 
   466     029C                     	;# 
   467     029D                     	;# 
   468     029E                     	;# 
   469     0311                     	;# 
   470     0311                     	;# 
   471     0312                     	;# 
   472     0313                     	;# 
   473     0318                     	;# 
   474     0318                     	;# 
   475     0319                     	;# 
   476     031A                     	;# 
   477     038C                     	;# 
   478     038E                     	;# 
   479     0391                     	;# 
   480     0392                     	;# 
   481     0393                     	;# 
   482     039A                     	;# 
   483     039C                     	;# 
   484     039D                     	;# 
   485     039E                     	;# 
   486     039F                     	;# 
   487     0415                     	;# 
   488     0416                     	;# 
   489     0417                     	;# 
   490     041C                     	;# 
   491     041D                     	;# 
   492     041E                     	;# 
   493     0FE4                     	;# 
   494     0FE5                     	;# 
   495     0FE6                     	;# 
   496     0FE7                     	;# 
   497     0FE8                     	;# 
   498     0FE9                     	;# 
   499     0FEA                     	;# 
   500     0FEB                     	;# 
   501     0FED                     	;# 
   502     0FEE                     	;# 
   503     0FEF                     	;# 
   504     0000                     	;# 
   505     0001                     	;# 
   506     0002                     	;# 
   507     0003                     	;# 
   508     0004                     	;# 
   509     0005                     	;# 
   510     0006                     	;# 
   511     0007                     	;# 
   512     0008                     	;# 
   513     0009                     	;# 
   514     000A                     	;# 
   515     000B                     	;# 
   516     000C                     	;# 
   517     000E                     	;# 
   518     0011                     	;# 
   519     0012                     	;# 
   520     0013                     	;# 
   521     0015                     	;# 
   522     0016                     	;# 
   523     0016                     	;# 
   524     0017                     	;# 
   525     0018                     	;# 
   526     0019                     	;# 
   527     001A                     	;# 
   528     001B                     	;# 
   529     001C                     	;# 
   530     001E                     	;# 
   531     001F                     	;# 
   532     008C                     	;# 
   533     008E                     	;# 
   534     0091                     	;# 
   535     0092                     	;# 
   536     0093                     	;# 
   537     0095                     	;# 
   538     0096                     	;# 
   539     0097                     	;# 
   540     0098                     	;# 
   541     0099                     	;# 
   542     009A                     	;# 
   543     009B                     	;# 
   544     009B                     	;# 
   545     009C                     	;# 
   546     009D                     	;# 
   547     009E                     	;# 
   548     010C                     	;# 
   549     010E                     	;# 
   550     0111                     	;# 
   551     0112                     	;# 
   552     0113                     	;# 
   553     0114                     	;# 
   554     0115                     	;# 
   555     0116                     	;# 
   556     0117                     	;# 
   557     0118                     	;# 
   558     0119                     	;# 
   559     011A                     	;# 
   560     011B                     	;# 
   561     011D                     	;# 
   562     011E                     	;# 
   563     018C                     	;# 
   564     018E                     	;# 
   565     0191                     	;# 
   566     0191                     	;# 
   567     0192                     	;# 
   568     0193                     	;# 
   569     0193                     	;# 
   570     0193                     	;# 
   571     0194                     	;# 
   572     0195                     	;# 
   573     0196                     	;# 
   574     0199                     	;# 
   575     019A                     	;# 
   576     019B                     	;# 
   577     019B                     	;# 
   578     019C                     	;# 
   579     019D                     	;# 
   580     019E                     	;# 
   581     019F                     	;# 
   582     020C                     	;# 
   583     020E                     	;# 
   584     0211                     	;# 
   585     0211                     	;# 
   586     0212                     	;# 
   587     0212                     	;# 
   588     0213                     	;# 
   589     0213                     	;# 
   590     0214                     	;# 
   591     0214                     	;# 
   592     0215                     	;# 
   593     0215                     	;# 
   594     0215                     	;# 
   595     0216                     	;# 
   596     0216                     	;# 
   597     0217                     	;# 
   598     0217                     	;# 
   599     0291                     	;# 
   600     0291                     	;# 
   601     0292                     	;# 
   602     0293                     	;# 
   603     0294                     	;# 
   604     0295                     	;# 
   605     0295                     	;# 
   606     0296                     	;# 
   607     0298                     	;# 
   608     0298                     	;# 
   609     0299                     	;# 
   610     029A                     	;# 
   611     029B                     	;# 
   612     029C                     	;# 
   613     029D                     	;# 
   614     029E                     	;# 
   615     0311                     	;# 
   616     0311                     	;# 
   617     0312                     	;# 
   618     0313                     	;# 
   619     0318                     	;# 
   620     0318                     	;# 
   621     0319                     	;# 
   622     031A                     	;# 
   623     038C                     	;# 
   624     038E                     	;# 
   625     0391                     	;# 
   626     0392                     	;# 
   627     0393                     	;# 
   628     039A                     	;# 
   629     039C                     	;# 
   630     039D                     	;# 
   631     039E                     	;# 
   632     039F                     	;# 
   633     0415                     	;# 
   634     0416                     	;# 
   635     0417                     	;# 
   636     041C                     	;# 
   637     041D                     	;# 
   638     041E                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     000E                     	;# 
   664     0011                     	;# 
   665     0012                     	;# 
   666     0013                     	;# 
   667     0015                     	;# 
   668     0016                     	;# 
   669     0016                     	;# 
   670     0017                     	;# 
   671     0018                     	;# 
   672     0019                     	;# 
   673     001A                     	;# 
   674     001B                     	;# 
   675     001C                     	;# 
   676     001E                     	;# 
   677     001F                     	;# 
   678     008C                     	;# 
   679     008E                     	;# 
   680     0091                     	;# 
   681     0092                     	;# 
   682     0093                     	;# 
   683     0095                     	;# 
   684     0096                     	;# 
   685     0097                     	;# 
   686     0098                     	;# 
   687     0099                     	;# 
   688     009A                     	;# 
   689     009B                     	;# 
   690     009B                     	;# 
   691     009C                     	;# 
   692     009D                     	;# 
   693     009E                     	;# 
   694     010C                     	;# 
   695     010E                     	;# 
   696     0111                     	;# 
   697     0112                     	;# 
   698     0113                     	;# 
   699     0114                     	;# 
   700     0115                     	;# 
   701     0116                     	;# 
   702     0117                     	;# 
   703     0118                     	;# 
   704     0119                     	;# 
   705     011A                     	;# 
   706     011B                     	;# 
   707     011D                     	;# 
   708     011E                     	;# 
   709     018C                     	;# 
   710     018E                     	;# 
   711     0191                     	;# 
   712     0191                     	;# 
   713     0192                     	;# 
   714     0193                     	;# 
   715     0193                     	;# 
   716     0193                     	;# 
   717     0194                     	;# 
   718     0195                     	;# 
   719     0196                     	;# 
   720     0199                     	;# 
   721     019A                     	;# 
   722     019B                     	;# 
   723     019B                     	;# 
   724     019C                     	;# 
   725     019D                     	;# 
   726     019E                     	;# 
   727     019F                     	;# 
   728     020C                     	;# 
   729     020E                     	;# 
   730     0211                     	;# 
   731     0211                     	;# 
   732     0212                     	;# 
   733     0212                     	;# 
   734     0213                     	;# 
   735     0213                     	;# 
   736     0214                     	;# 
   737     0214                     	;# 
   738     0215                     	;# 
   739     0215                     	;# 
   740     0215                     	;# 
   741     0216                     	;# 
   742     0216                     	;# 
   743     0217                     	;# 
   744     0217                     	;# 
   745     0291                     	;# 
   746     0291                     	;# 
   747     0292                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0295                     	;# 
   752     0296                     	;# 
   753     0298                     	;# 
   754     0298                     	;# 
   755     0299                     	;# 
   756     029A                     	;# 
   757     029B                     	;# 
   758     029C                     	;# 
   759     029D                     	;# 
   760     029E                     	;# 
   761     0311                     	;# 
   762     0311                     	;# 
   763     0312                     	;# 
   764     0313                     	;# 
   765     0318                     	;# 
   766     0318                     	;# 
   767     0319                     	;# 
   768     031A                     	;# 
   769     038C                     	;# 
   770     038E                     	;# 
   771     0391                     	;# 
   772     0392                     	;# 
   773     0393                     	;# 
   774     039A                     	;# 
   775     039C                     	;# 
   776     039D                     	;# 
   777     039E                     	;# 
   778     039F                     	;# 
   779     0415                     	;# 
   780     0416                     	;# 
   781     0417                     	;# 
   782     041C                     	;# 
   783     041D                     	;# 
   784     041E                     	;# 
   785     0FE4                     	;# 
   786     0FE5                     	;# 
   787     0FE6                     	;# 
   788     0FE7                     	;# 
   789     0FE8                     	;# 
   790     0FE9                     	;# 
   791     0FEA                     	;# 
   792     0FEB                     	;# 
   793     0FED                     	;# 
   794     0FEE                     	;# 
   795     0FEF                     	;# 
   796     0000                     	;# 
   797     0001                     	;# 
   798     0002                     	;# 
   799     0003                     	;# 
   800     0004                     	;# 
   801     0005                     	;# 
   802     0006                     	;# 
   803     0007                     	;# 
   804     0008                     	;# 
   805     0009                     	;# 
   806     000A                     	;# 
   807     000B                     	;# 
   808     000C                     	;# 
   809     000E                     	;# 
   810     0011                     	;# 
   811     0012                     	;# 
   812     0013                     	;# 
   813     0015                     	;# 
   814     0016                     	;# 
   815     0016                     	;# 
   816     0017                     	;# 
   817     0018                     	;# 
   818     0019                     	;# 
   819     001A                     	;# 
   820     001B                     	;# 
   821     001C                     	;# 
   822     001E                     	;# 
   823     001F                     	;# 
   824     008C                     	;# 
   825     008E                     	;# 
   826     0091                     	;# 
   827     0092                     	;# 
   828     0093                     	;# 
   829     0095                     	;# 
   830     0096                     	;# 
   831     0097                     	;# 
   832     0098                     	;# 
   833     0099                     	;# 
   834     009A                     	;# 
   835     009B                     	;# 
   836     009B                     	;# 
   837     009C                     	;# 
   838     009D                     	;# 
   839     009E                     	;# 
   840     010C                     	;# 
   841     010E                     	;# 
   842     0111                     	;# 
   843     0112                     	;# 
   844     0113                     	;# 
   845     0114                     	;# 
   846     0115                     	;# 
   847     0116                     	;# 
   848     0117                     	;# 
   849     0118                     	;# 
   850     0119                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011D                     	;# 
   854     011E                     	;# 
   855     018C                     	;# 
   856     018E                     	;# 
   857     0191                     	;# 
   858     0191                     	;# 
   859     0192                     	;# 
   860     0193                     	;# 
   861     0193                     	;# 
   862     0193                     	;# 
   863     0194                     	;# 
   864     0195                     	;# 
   865     0196                     	;# 
   866     0199                     	;# 
   867     019A                     	;# 
   868     019B                     	;# 
   869     019B                     	;# 
   870     019C                     	;# 
   871     019D                     	;# 
   872     019E                     	;# 
   873     019F                     	;# 
   874     020C                     	;# 
   875     020E                     	;# 
   876     0211                     	;# 
   877     0211                     	;# 
   878     0212                     	;# 
   879     0212                     	;# 
   880     0213                     	;# 
   881     0213                     	;# 
   882     0214                     	;# 
   883     0214                     	;# 
   884     0215                     	;# 
   885     0215                     	;# 
   886     0215                     	;# 
   887     0216                     	;# 
   888     0216                     	;# 
   889     0217                     	;# 
   890     0217                     	;# 
   891     0291                     	;# 
   892     0291                     	;# 
   893     0292                     	;# 
   894     0293                     	;# 
   895     0294                     	;# 
   896     0295                     	;# 
   897     0295                     	;# 
   898     0296                     	;# 
   899     0298                     	;# 
   900     0298                     	;# 
   901     0299                     	;# 
   902     029A                     	;# 
   903     029B                     	;# 
   904     029C                     	;# 
   905     029D                     	;# 
   906     029E                     	;# 
   907     0311                     	;# 
   908     0311                     	;# 
   909     0312                     	;# 
   910     0313                     	;# 
   911     0318                     	;# 
   912     0318                     	;# 
   913     0319                     	;# 
   914     031A                     	;# 
   915     038C                     	;# 
   916     038E                     	;# 
   917     0391                     	;# 
   918     0392                     	;# 
   919     0393                     	;# 
   920     039A                     	;# 
   921     039C                     	;# 
   922     039D                     	;# 
   923     039E                     	;# 
   924     039F                     	;# 
   925     0415                     	;# 
   926     0416                     	;# 
   927     0417                     	;# 
   928     041C                     	;# 
   929     041D                     	;# 
   930     041E                     	;# 
   931     0FE4                     	;# 
   932     0FE5                     	;# 
   933     0FE6                     	;# 
   934     0FE7                     	;# 
   935     0FE8                     	;# 
   936     0FE9                     	;# 
   937     0FEA                     	;# 
   938     0FEB                     	;# 
   939     0FED                     	;# 
   940     0FEE                     	;# 
   941     0FEF                     	;# 
   942                           
   943                           	psect	idataBANK0
   944     04F7                     __pidataBANK0:
   945                           
   946                           ;initializer for _LCD_BACKLIGHT
   947     04F7  3408               	retlw	8
   948                           
   949                           	psect	nvBANK0
   950     005E                     __pnvBANK0:
   951     005E                     _mp2:
   952     005E                     	ds	2
   953     0011                     _PIR1bits	set	17
   954     000B                     _INTCONbits	set	11
   955     000E                     _PORTCbits	set	14
   956     008C                     _TXIF	set	140
   957     009B                     _ADRES	set	155
   958     0091                     _PIE1bits	set	145
   959     009D                     _ADCON0bits	set	157
   960     009D                     _ADCON0	set	157
   961     009E                     _ADCON1	set	158
   962     008E                     _TRISCbits	set	142
   963     008C                     _TRISAbits	set	140
   964     0099                     _OSCCON	set	153
   965     0475                     _TRISC5	set	1141
   966     0474                     _TRISC4	set	1140
   967     0471                     _TRISC1	set	1137
   968     0472                     _TRISC2	set	1138
   969     010E                     _LATCbits	set	270
   970     010C                     _LATAbits	set	268
   971     0871                     _LATC1	set	2161
   972     0872                     _LATC2	set	2162
   973     019B                     _SPBRG	set	411
   974     0199                     _RCREG	set	409
   975     019A                     _TXREG	set	410
   976     019D                     _RCSTA	set	413
   977     019E                     _TXSTA	set	414
   978     018E                     _ANSELCbits	set	398
   979     0CF2                     _BRGH	set	3314
   980     0CFB                     _BRG16	set	3323
   981                           
   982                           	psect	cinit
   983     0047                     start_initialization:	
   984                           ; #config settings
   985                           
   986     0047                     __initialization:
   987                           
   988                           ; Initialize objects allocated to BANK0
   989     0047  3184  24F7  3180   	fcall	__pidataBANK0	;fetch initializer
   990     004A  00E0               	movwf	__pdataBANK0& (0+127)
   991                           
   992                           ; Clear objects allocated to BITCOMMON
   993     004B  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   994                           
   995                           ; Clear objects allocated to BANK0
   996     004C  3020               	movlw	low __pbssBANK0
   997     004D  0084               	movwf	4
   998     004E  3000               	movlw	high __pbssBANK0
   999     004F  0085               	movwf	5
  1000     0050  3024               	movlw	36
  1001     0051  3184  24F1  3180   	fcall	clear_ram0
  1002     0054                     end_of_initialization:	
  1003                           ;End of C runtime variable initialization code
  1004                           
  1005     0054                     __end_of__initialization:
  1006     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1007     0055  0020               	movlb	0
  1008     0056  3180  2858         	ljmp	_main	;jump to C main() function
  1009                           
  1010                           	psect	bitbssCOMMON
  1011     03E0                     __pbitbssCOMMON:
  1012     03E0                     _ena_send:
  1013     03E0                     	ds	1
  1014     03E1                     _ena_rx:
  1015     03E1                     	ds	1
  1016                           
  1017                           	psect	bssBANK0
  1018     0020                     __pbssBANK0:
  1019     0020                     _temp:
  1020     0020                     	ds	4
  1021     0024                     _temp_glo:
  1022     0024                     	ds	4
  1023     0028                     _bf_rx:
  1024     0028                     	ds	3
  1025     002B                     _mq2:
  1026     002B                     	ds	2
  1027     002D                     _rx_index:
  1028     002D                     	ds	1
  1029     002E                     _byte_rx:
  1030     002E                     	ds	1
  1031     002F                     _printf_mode:
  1032     002F                     	ds	1
  1033     0030                     _bf_tx:
  1034     0030                     	ds	20
  1035                           
  1036                           	psect	dataBANK0
  1037     0060                     __pdataBANK0:
  1038     0060                     _LCD_BACKLIGHT:
  1039     0060                     	ds	1
  1040                           
  1041                           	psect	clrtext
  1042     04F1                     clear_ram0:	
  1043                           ;	Called with FSR0 containing the base address, and
  1044                           ;	WREG with the size to clear
  1045                           
  1046     04F1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1047     04F2                     clrloop0:
  1048     04F2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1049     04F3  3101               	addfsr 0,1
  1050     04F4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1051     04F5  2CF2               	goto	clrloop0	;have we reached the end yet?
  1052     04F6  3400               	retlw	0	;all done for this memory range, return
  1053                           
  1054                           	psect	cstackCOMMON
  1055     0070                     __pcstackCOMMON:
  1056     0070                     ?_USART_TransmitChar:
  1057     0070                     ?_i2c_start:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060     0070                     ?_i2c_write:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063     0070                     ?_i2c_read:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     ?_i2c_stop:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     ?_USART_Init:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     ?_Cmd_Aht10:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ?_USART_TransmitString:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078     0070                     ?_USART_ReceiveChar:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081     0070                     ??_USART_ReceiveChar:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084     0070                     ?_main:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087     0070                     ?_ngat_uart:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090     0070                     ??_ngat_uart:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x0
  1095     0070                     	ds	1
  1096     0071                     ??_USART_TransmitChar:
  1097     0071                     ??_i2c_start:	
  1098                           ; 1 bytes @ 0x1
  1099                           
  1100     0071                     ??_i2c_write:	
  1101                           ; 1 bytes @ 0x1
  1102                           
  1103     0071                     ??_i2c_read:	
  1104                           ; 1 bytes @ 0x1
  1105                           
  1106     0071                     ??_i2c_stop:	
  1107                           ; 1 bytes @ 0x1
  1108                           
  1109     0071                     ??_USART_Init:	
  1110                           ; 1 bytes @ 0x1
  1111                           
  1112     0071                     ?___lwdiv:	
  1113                           ; 1 bytes @ 0x1
  1114                           
  1115     0071                     ?___lldiv:	
  1116                           ; 2 bytes @ 0x1
  1117                           
  1118     0071                     USART_TransmitChar@out:	
  1119                           ; 4 bytes @ 0x1
  1120                           
  1121     0071                     ___lwdiv@divisor:	
  1122                           ; 1 bytes @ 0x1
  1123                           
  1124     0071                     ___lldiv@divisor:	
  1125                           ; 2 bytes @ 0x1
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x1
  1129     0071                     	ds	1
  1130     0072                     ??_USART_TransmitString:
  1131     0072                     i2c_read@ACK:	
  1132                           ; 1 bytes @ 0x2
  1133                           
  1134                           
  1135                           ; 1 bytes @ 0x2
  1136     0072                     	ds	1
  1137     0073                     i2c_write@DATA:
  1138     0073                     i2c_read@i:	
  1139                           ; 1 bytes @ 0x3
  1140                           
  1141     0073                     USART_TransmitString@out:	
  1142                           ; 1 bytes @ 0x3
  1143                           
  1144     0073                     ___lwdiv@dividend:	
  1145                           ; 1 bytes @ 0x3
  1146                           
  1147                           
  1148                           ; 2 bytes @ 0x3
  1149     0073                     	ds	1
  1150     0074                     i2c_write@i:
  1151     0074                     i2c_read@DATA:	
  1152                           ; 1 bytes @ 0x4
  1153                           
  1154     0074                     USART_TransmitString@i:	
  1155                           ; 1 bytes @ 0x4
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x4
  1159     0074                     	ds	1
  1160     0075                     ??_Cmd_Aht10:
  1161     0075                     ??___lwdiv:	
  1162                           ; 1 bytes @ 0x5
  1163                           
  1164     0075                     ?_read_temp:	
  1165                           ; 1 bytes @ 0x5
  1166                           
  1167     0075                     ___lldiv@dividend:	
  1168                           ; 4 bytes @ 0x5
  1169                           
  1170                           
  1171                           ; 4 bytes @ 0x5
  1172     0075                     	ds	1
  1173     0076                     ___lwdiv@quotient:
  1174                           
  1175                           ; 2 bytes @ 0x6
  1176     0076                     	ds	2
  1177     0078                     ___lwdiv@counter:
  1178                           
  1179                           ; 1 bytes @ 0x8
  1180     0078                     	ds	1
  1181     0079                     ??___lldiv:
  1182     0079                     ??___lwmod:	
  1183                           ; 1 bytes @ 0x9
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x9
  1187     0079                     	ds	1
  1188     007A                     ??___llmod:
  1189     007A                     ___lwmod@counter:	
  1190                           ; 1 bytes @ 0xA
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0xA
  1194     007A                     	ds	1
  1195     007B                     ___llmod@counter:
  1196                           
  1197                           ; 1 bytes @ 0xB
  1198     007B                     	ds	1
  1199                           
  1200                           	psect	cstackBANK0
  1201     0044                     __pcstackBANK0:
  1202     0044                     ??_read_temp:
  1203     0044                     ?___lwmod:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206     0044                     ___lwmod@divisor:	
  1207                           ; 2 bytes @ 0x0
  1208                           
  1209     0044                     ___lldiv@quotient:	
  1210                           ; 2 bytes @ 0x0
  1211                           
  1212                           
  1213                           ; 4 bytes @ 0x0
  1214     0044                     	ds	2
  1215     0046                     ___lwmod@dividend:
  1216                           
  1217                           ; 2 bytes @ 0x2
  1218     0046                     	ds	2
  1219     0048                     ___lldiv@counter:
  1220                           
  1221                           ; 1 bytes @ 0x4
  1222     0048                     	ds	1
  1223     0049                     ?___llmod:
  1224     0049                     ___llmod@divisor:	
  1225                           ; 4 bytes @ 0x5
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0x5
  1229     0049                     	ds	3
  1230     004C                     read_temp@dt1:
  1231                           
  1232                           ; 4 bytes @ 0x8
  1233     004C                     	ds	1
  1234     004D                     ___llmod@dividend:
  1235                           
  1236                           ; 4 bytes @ 0x9
  1237     004D                     	ds	3
  1238     0050                     read_temp@dt2:
  1239                           
  1240                           ; 4 bytes @ 0xC
  1241     0050                     	ds	4
  1242     0054                     read_temp@dt3:
  1243                           
  1244                           ; 4 bytes @ 0x10
  1245     0054                     	ds	4
  1246     0058                     read_temp@temp:
  1247                           
  1248                           ; 4 bytes @ 0x14
  1249     0058                     	ds	4
  1250     005C                     ??_main:
  1251                           
  1252                           ; 1 bytes @ 0x18
  1253     005C                     	ds	2
  1254                           
  1255                           	psect	maintext
  1256     0058                     __pmaintext:	
  1257 ;;
  1258 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1259 ;;
  1260 ;; *************** function _main *****************
  1261 ;; Defined at:
  1262 ;;		line 47 in file "main.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : B1F/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;Total ram usage:        2 bytes
  1281 ;; Hardware stack levels required when called: 4
  1282 ;; This function calls:
  1283 ;;		_Cmd_Aht10
  1284 ;;		_USART_Init
  1285 ;;		_USART_TransmitString
  1286 ;;		___lldiv
  1287 ;;		___llmod
  1288 ;;		___lwdiv
  1289 ;;		___lwmod
  1290 ;;		_read_temp
  1291 ;; This function is called by:
  1292 ;;		Startup code after reset
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296     0058                     _main:	
  1297                           ;psect for function _main
  1298                           
  1299     0058                     l1769:	
  1300                           ;incstack = 0
  1301                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1302                           
  1303                           
  1304                           ;main.c: 48:     OSCCON = 0X7f;
  1305     0058  307F               	movlw	127
  1306     0059  0021               	movlb	1	; select bank1
  1307     005A  0099               	movwf	25	;volatile
  1308     005B                     l1771:
  1309                           
  1310                           ;main.c: 50:     TRISAbits.TRISA4 = 0;
  1311     005B  120C               	bcf	12,4	;volatile
  1312     005C                     l1773:
  1313                           
  1314                           ;main.c: 51:     LATAbits.LATA4 = 0;
  1315     005C  0022               	movlb	2	; select bank2
  1316     005D  120C               	bcf	12,4	;volatile
  1317     005E                     l1775:
  1318                           
  1319                           ;main.c: 53:     TRISCbits.TRISC3 = 0;
  1320     005E  0021               	movlb	1	; select bank1
  1321     005F  118E               	bcf	14,3	;volatile
  1322     0060                     l1777:
  1323                           
  1324                           ;main.c: 54:     LATCbits.LATC3 = 0;
  1325     0060  0022               	movlb	2	; select bank2
  1326     0061  118E               	bcf	14,3	;volatile
  1327     0062                     l1779:
  1328                           
  1329                           ;main.c: 56:     ANSELCbits.ANSC2 = 0;
  1330     0062  0023               	movlb	3	; select bank3
  1331     0063  110E               	bcf	14,2	;volatile
  1332     0064                     l1781:
  1333                           
  1334                           ;main.c: 64:     USART_Init();
  1335     0064  3184  24AB  3180   	fcall	_USART_Init
  1336     0067                     l1783:
  1337                           
  1338                           ;main.c: 66:     ADCON1 = 0X80;
  1339     0067  3080               	movlw	128
  1340     0068  0021               	movlb	1	; select bank1
  1341     0069  009E               	movwf	30	;volatile
  1342     006A                     l1785:
  1343                           
  1344                           ;main.c: 68:     printf_mode = 0;
  1345     006A  0020               	movlb	0	; select bank0
  1346     006B  01AF               	clrf	_printf_mode
  1347     006C                     l1787:
  1348                           
  1349                           ;main.c: 69:     bf_tx[0] = 'S';
  1350     006C  3053               	movlw	83
  1351     006D  00B0               	movwf	_bf_tx
  1352     006E                     l1789:
  1353                           
  1354                           ;main.c: 70:     bf_tx[1] = 1;
  1355     006E  01B1               	clrf	_bf_tx+1
  1356     006F  0AB1               	incf	_bf_tx+1,f
  1357     0070                     l1791:
  1358                           
  1359                           ;main.c: 71:     bf_tx[16] = 'P';
  1360     0070  3050               	movlw	80
  1361     0071  00C0               	movwf	_bf_tx+16
  1362     0072                     l1793:
  1363                           
  1364                           ;main.c: 72:     mp2 = 1111;
  1365     0072  3057               	movlw	87
  1366     0073  00DE               	movwf	_mp2
  1367     0074  3004               	movlw	4
  1368     0075  00DF               	movwf	_mp2+1
  1369     0076                     l1795:
  1370                           
  1371                           ;main.c: 73:     bf_tx[12] = (unsigned char) (mp2 / 1000 % 10 + 48);
  1372     0076  300A               	movlw	10
  1373     0077  00C4               	movwf	___lwmod@divisor
  1374     0078  3000               	movlw	0
  1375     0079  00C5               	movwf	___lwmod@divisor+1
  1376     007A  30E8               	movlw	232
  1377     007B  00F1               	movwf	___lwdiv@divisor
  1378     007C  3003               	movlw	3
  1379     007D  00F2               	movwf	___lwdiv@divisor+1
  1380     007E  3057               	movlw	87
  1381     007F  00F3               	movwf	___lwdiv@dividend
  1382     0080  3004               	movlw	4
  1383     0081  00F4               	movwf	___lwdiv@dividend+1
  1384     0082  3183  23C8  3180   	fcall	___lwdiv
  1385     0085  0872               	movf	?___lwdiv+1,w
  1386     0086  0020               	movlb	0	; select bank0
  1387     0087  00C7               	movwf	___lwmod@dividend+1
  1388     0088  0871               	movf	?___lwdiv,w
  1389     0089  00C6               	movwf	___lwmod@dividend
  1390     008A  3184  2404  3180   	fcall	___lwmod
  1391     008D  0020               	movlb	0	; select bank0
  1392     008E  0844               	movf	?___lwmod,w
  1393     008F  3E30               	addlw	48
  1394     0090  00BC               	movwf	_bf_tx+12
  1395     0091                     l1797:
  1396                           
  1397                           ;main.c: 74:     bf_tx[13] = (unsigned char) (mp2 / 100 % 10 + 48);
  1398     0091  300A               	movlw	10
  1399     0092  00C4               	movwf	___lwmod@divisor
  1400     0093  3000               	movlw	0
  1401     0094  00C5               	movwf	___lwmod@divisor+1
  1402     0095  3064               	movlw	100
  1403     0096  00F1               	movwf	___lwdiv@divisor
  1404     0097  3000               	movlw	0
  1405     0098  00F2               	movwf	___lwdiv@divisor+1
  1406     0099  3057               	movlw	87
  1407     009A  00F3               	movwf	___lwdiv@dividend
  1408     009B  3004               	movlw	4
  1409     009C  00F4               	movwf	___lwdiv@dividend+1
  1410     009D  3183  23C8  3180   	fcall	___lwdiv
  1411     00A0  0872               	movf	?___lwdiv+1,w
  1412     00A1  0020               	movlb	0	; select bank0
  1413     00A2  00C7               	movwf	___lwmod@dividend+1
  1414     00A3  0871               	movf	?___lwdiv,w
  1415     00A4  00C6               	movwf	___lwmod@dividend
  1416     00A5  3184  2404  3180   	fcall	___lwmod
  1417     00A8  0020               	movlb	0	; select bank0
  1418     00A9  0844               	movf	?___lwmod,w
  1419     00AA  3E30               	addlw	48
  1420     00AB  00BD               	movwf	_bf_tx+13
  1421     00AC                     l1799:
  1422                           
  1423                           ;main.c: 75:     bf_tx[14] = (unsigned char) (mp2 / 10 % 10 + 48);
  1424     00AC  300A               	movlw	10
  1425     00AD  00C4               	movwf	___lwmod@divisor
  1426     00AE  3000               	movlw	0
  1427     00AF  00C5               	movwf	___lwmod@divisor+1
  1428     00B0  300A               	movlw	10
  1429     00B1  00F1               	movwf	___lwdiv@divisor
  1430     00B2  3000               	movlw	0
  1431     00B3  00F2               	movwf	___lwdiv@divisor+1
  1432     00B4  3057               	movlw	87
  1433     00B5  00F3               	movwf	___lwdiv@dividend
  1434     00B6  3004               	movlw	4
  1435     00B7  00F4               	movwf	___lwdiv@dividend+1
  1436     00B8  3183  23C8  3180   	fcall	___lwdiv
  1437     00BB  0872               	movf	?___lwdiv+1,w
  1438     00BC  0020               	movlb	0	; select bank0
  1439     00BD  00C7               	movwf	___lwmod@dividend+1
  1440     00BE  0871               	movf	?___lwdiv,w
  1441     00BF  00C6               	movwf	___lwmod@dividend
  1442     00C0  3184  2404  3180   	fcall	___lwmod
  1443     00C3  0020               	movlb	0	; select bank0
  1444     00C4  0844               	movf	?___lwmod,w
  1445     00C5  3E30               	addlw	48
  1446     00C6  00BE               	movwf	_bf_tx+14
  1447     00C7                     l1801:
  1448                           
  1449                           ;main.c: 76:     bf_tx[15] = (unsigned char) (mp2 / 1 % 10 + 48);
  1450     00C7  300A               	movlw	10
  1451     00C8  00C4               	movwf	___lwmod@divisor
  1452     00C9  3000               	movlw	0
  1453     00CA  00C5               	movwf	___lwmod@divisor+1
  1454     00CB  3057               	movlw	87
  1455     00CC  00C6               	movwf	___lwmod@dividend
  1456     00CD  3004               	movlw	4
  1457     00CE  00C7               	movwf	___lwmod@dividend+1
  1458     00CF  3184  2404  3180   	fcall	___lwmod
  1459     00D2  0020               	movlb	0	; select bank0
  1460     00D3  0844               	movf	?___lwmod,w
  1461     00D4  3E30               	addlw	48
  1462     00D5  00BF               	movwf	_bf_tx+15
  1463     00D6                     l1803:
  1464                           
  1465                           ;main.c: 79:         Cmd_Aht10();
  1466     00D6  3184  24BE  3180   	fcall	_Cmd_Aht10
  1467     00D9                     l1805:
  1468                           
  1469                           ;main.c: 80:         _delay((unsigned long)((80)*(16000000/4000.0)));
  1470     00D9  3002               	movlw	2
  1471     00DA  0020               	movlb	0	; select bank0
  1472     00DB  00DD               	movwf	??_main+1
  1473     00DC  30A0               	movlw	160
  1474     00DD  00DC               	movwf	??_main
  1475     00DE  3092               	movlw	146
  1476     00DF                     u1427:
  1477     00DF  0B89               	decfsz	9,f
  1478     00E0  28DF               	goto	u1427
  1479     00E1  0BDC               	decfsz	??_main,f
  1480     00E2  28DF               	goto	u1427
  1481     00E3  0BDD               	decfsz	??_main+1,f
  1482     00E4  28DF               	goto	u1427
  1483     00E5  0000               	nop
  1484     00E6                     l1807:
  1485                           
  1486                           ;main.c: 81:         temp = read_temp();
  1487     00E6  3182  226A  3180   	fcall	_read_temp
  1488     00E9  0878               	movf	?_read_temp+3,w
  1489     00EA  0020               	movlb	0	; select bank0
  1490     00EB  00A3               	movwf	_temp+3
  1491     00EC  0877               	movf	?_read_temp+2,w
  1492     00ED  00A2               	movwf	_temp+2
  1493     00EE  0876               	movf	?_read_temp+1,w
  1494     00EF  00A1               	movwf	_temp+1
  1495     00F0  0875               	movf	?_read_temp,w
  1496     00F1  00A0               	movwf	_temp
  1497     00F2                     l1809:
  1498                           
  1499                           ;main.c: 82:         bf_tx[2] = (unsigned char) (temp / 100000 % 10 + 48);
  1500     00F2  3000               	movlw	0
  1501     00F3  00CC               	movwf	___llmod@divisor+3
  1502     00F4  3000               	movlw	0
  1503     00F5  00CB               	movwf	___llmod@divisor+2
  1504     00F6  3000               	movlw	0
  1505     00F7  00CA               	movwf	___llmod@divisor+1
  1506     00F8  300A               	movlw	10
  1507     00F9  00C9               	movwf	___llmod@divisor
  1508     00FA  3000               	movlw	0
  1509     00FB  00F4               	movwf	___lldiv@divisor+3
  1510     00FC  3001               	movlw	1
  1511     00FD  00F3               	movwf	___lldiv@divisor+2
  1512     00FE  3086               	movlw	134
  1513     00FF  00F2               	movwf	___lldiv@divisor+1
  1514     0100  30A0               	movlw	160
  1515     0101  00F1               	movwf	___lldiv@divisor
  1516     0102  0823               	movf	_temp+3,w
  1517     0103  00F8               	movwf	___lldiv@dividend+3
  1518     0104  0822               	movf	_temp+2,w
  1519     0105  00F7               	movwf	___lldiv@dividend+2
  1520     0106  0821               	movf	_temp+1,w
  1521     0107  00F6               	movwf	___lldiv@dividend+1
  1522     0108  0820               	movf	_temp,w
  1523     0109  00F5               	movwf	___lldiv@dividend
  1524     010A  3183  2322  3180   	fcall	___lldiv
  1525     010D  0874               	movf	?___lldiv+3,w
  1526     010E  0020               	movlb	0	; select bank0
  1527     010F  00D0               	movwf	___llmod@dividend+3
  1528     0110  0873               	movf	?___lldiv+2,w
  1529     0111  00CF               	movwf	___llmod@dividend+2
  1530     0112  0872               	movf	?___lldiv+1,w
  1531     0113  00CE               	movwf	___llmod@dividend+1
  1532     0114  0871               	movf	?___lldiv,w
  1533     0115  00CD               	movwf	___llmod@dividend
  1534     0116  3183  237D  3180   	fcall	___llmod
  1535     0119  0020               	movlb	0	; select bank0
  1536     011A  0849               	movf	?___llmod,w
  1537     011B  3E30               	addlw	48
  1538     011C  00B2               	movwf	_bf_tx+2
  1539     011D                     l1811:
  1540                           
  1541                           ;main.c: 83:         bf_tx[3] = (unsigned char) (temp / 10000 % 10 + 48);
  1542     011D  3000               	movlw	0
  1543     011E  00CC               	movwf	___llmod@divisor+3
  1544     011F  3000               	movlw	0
  1545     0120  00CB               	movwf	___llmod@divisor+2
  1546     0121  3000               	movlw	0
  1547     0122  00CA               	movwf	___llmod@divisor+1
  1548     0123  300A               	movlw	10
  1549     0124  00C9               	movwf	___llmod@divisor
  1550     0125  3000               	movlw	0
  1551     0126  00F4               	movwf	___lldiv@divisor+3
  1552     0127  3000               	movlw	0
  1553     0128  00F3               	movwf	___lldiv@divisor+2
  1554     0129  3027               	movlw	39
  1555     012A  00F2               	movwf	___lldiv@divisor+1
  1556     012B  3010               	movlw	16
  1557     012C  00F1               	movwf	___lldiv@divisor
  1558     012D  0823               	movf	_temp+3,w
  1559     012E  00F8               	movwf	___lldiv@dividend+3
  1560     012F  0822               	movf	_temp+2,w
  1561     0130  00F7               	movwf	___lldiv@dividend+2
  1562     0131  0821               	movf	_temp+1,w
  1563     0132  00F6               	movwf	___lldiv@dividend+1
  1564     0133  0820               	movf	_temp,w
  1565     0134  00F5               	movwf	___lldiv@dividend
  1566     0135  3183  2322  3180   	fcall	___lldiv
  1567     0138  0874               	movf	?___lldiv+3,w
  1568     0139  0020               	movlb	0	; select bank0
  1569     013A  00D0               	movwf	___llmod@dividend+3
  1570     013B  0873               	movf	?___lldiv+2,w
  1571     013C  00CF               	movwf	___llmod@dividend+2
  1572     013D  0872               	movf	?___lldiv+1,w
  1573     013E  00CE               	movwf	___llmod@dividend+1
  1574     013F  0871               	movf	?___lldiv,w
  1575     0140  00CD               	movwf	___llmod@dividend
  1576     0141  3183  237D  3180   	fcall	___llmod
  1577     0144  0020               	movlb	0	; select bank0
  1578     0145  0849               	movf	?___llmod,w
  1579     0146  3E30               	addlw	48
  1580     0147  00B3               	movwf	_bf_tx+3
  1581     0148                     l1813:
  1582                           
  1583                           ;main.c: 84:         bf_tx[4] = (unsigned char) (temp / 1000 % 10 + 48);
  1584     0148  3000               	movlw	0
  1585     0149  00CC               	movwf	___llmod@divisor+3
  1586     014A  3000               	movlw	0
  1587     014B  00CB               	movwf	___llmod@divisor+2
  1588     014C  3000               	movlw	0
  1589     014D  00CA               	movwf	___llmod@divisor+1
  1590     014E  300A               	movlw	10
  1591     014F  00C9               	movwf	___llmod@divisor
  1592     0150  3000               	movlw	0
  1593     0151  00F4               	movwf	___lldiv@divisor+3
  1594     0152  3000               	movlw	0
  1595     0153  00F3               	movwf	___lldiv@divisor+2
  1596     0154  3003               	movlw	3
  1597     0155  00F2               	movwf	___lldiv@divisor+1
  1598     0156  30E8               	movlw	232
  1599     0157  00F1               	movwf	___lldiv@divisor
  1600     0158  0823               	movf	_temp+3,w
  1601     0159  00F8               	movwf	___lldiv@dividend+3
  1602     015A  0822               	movf	_temp+2,w
  1603     015B  00F7               	movwf	___lldiv@dividend+2
  1604     015C  0821               	movf	_temp+1,w
  1605     015D  00F6               	movwf	___lldiv@dividend+1
  1606     015E  0820               	movf	_temp,w
  1607     015F  00F5               	movwf	___lldiv@dividend
  1608     0160  3183  2322  3180   	fcall	___lldiv
  1609     0163  0874               	movf	?___lldiv+3,w
  1610     0164  0020               	movlb	0	; select bank0
  1611     0165  00D0               	movwf	___llmod@dividend+3
  1612     0166  0873               	movf	?___lldiv+2,w
  1613     0167  00CF               	movwf	___llmod@dividend+2
  1614     0168  0872               	movf	?___lldiv+1,w
  1615     0169  00CE               	movwf	___llmod@dividend+1
  1616     016A  0871               	movf	?___lldiv,w
  1617     016B  00CD               	movwf	___llmod@dividend
  1618     016C  3183  237D  3180   	fcall	___llmod
  1619     016F  0020               	movlb	0	; select bank0
  1620     0170  0849               	movf	?___llmod,w
  1621     0171  3E30               	addlw	48
  1622     0172  00B4               	movwf	_bf_tx+4
  1623     0173                     l1815:
  1624                           
  1625                           ;main.c: 85:         bf_tx[5] = (unsigned char) (temp / 100 % 10 + 48);
  1626     0173  3000               	movlw	0
  1627     0174  00CC               	movwf	___llmod@divisor+3
  1628     0175  3000               	movlw	0
  1629     0176  00CB               	movwf	___llmod@divisor+2
  1630     0177  3000               	movlw	0
  1631     0178  00CA               	movwf	___llmod@divisor+1
  1632     0179  300A               	movlw	10
  1633     017A  00C9               	movwf	___llmod@divisor
  1634     017B  3000               	movlw	0
  1635     017C  00F4               	movwf	___lldiv@divisor+3
  1636     017D  3000               	movlw	0
  1637     017E  00F3               	movwf	___lldiv@divisor+2
  1638     017F  3000               	movlw	0
  1639     0180  00F2               	movwf	___lldiv@divisor+1
  1640     0181  3064               	movlw	100
  1641     0182  00F1               	movwf	___lldiv@divisor
  1642     0183  0823               	movf	_temp+3,w
  1643     0184  00F8               	movwf	___lldiv@dividend+3
  1644     0185  0822               	movf	_temp+2,w
  1645     0186  00F7               	movwf	___lldiv@dividend+2
  1646     0187  0821               	movf	_temp+1,w
  1647     0188  00F6               	movwf	___lldiv@dividend+1
  1648     0189  0820               	movf	_temp,w
  1649     018A  00F5               	movwf	___lldiv@dividend
  1650     018B  3183  2322  3180   	fcall	___lldiv
  1651     018E  0874               	movf	?___lldiv+3,w
  1652     018F  0020               	movlb	0	; select bank0
  1653     0190  00D0               	movwf	___llmod@dividend+3
  1654     0191  0873               	movf	?___lldiv+2,w
  1655     0192  00CF               	movwf	___llmod@dividend+2
  1656     0193  0872               	movf	?___lldiv+1,w
  1657     0194  00CE               	movwf	___llmod@dividend+1
  1658     0195  0871               	movf	?___lldiv,w
  1659     0196  00CD               	movwf	___llmod@dividend
  1660     0197  3183  237D  3180   	fcall	___llmod
  1661     019A  0020               	movlb	0	; select bank0
  1662     019B  0849               	movf	?___llmod,w
  1663     019C  3E30               	addlw	48
  1664     019D  00B5               	movwf	_bf_tx+5
  1665     019E                     l1817:
  1666                           
  1667                           ;main.c: 86:         bf_tx[6] = (unsigned char) (temp / 10 % 10 + 48);
  1668     019E  3000               	movlw	0
  1669     019F  00CC               	movwf	___llmod@divisor+3
  1670     01A0  3000               	movlw	0
  1671     01A1  00CB               	movwf	___llmod@divisor+2
  1672     01A2  3000               	movlw	0
  1673     01A3  00CA               	movwf	___llmod@divisor+1
  1674     01A4  300A               	movlw	10
  1675     01A5  00C9               	movwf	___llmod@divisor
  1676     01A6  3000               	movlw	0
  1677     01A7  00F4               	movwf	___lldiv@divisor+3
  1678     01A8  3000               	movlw	0
  1679     01A9  00F3               	movwf	___lldiv@divisor+2
  1680     01AA  3000               	movlw	0
  1681     01AB  00F2               	movwf	___lldiv@divisor+1
  1682     01AC  300A               	movlw	10
  1683     01AD  00F1               	movwf	___lldiv@divisor
  1684     01AE  0823               	movf	_temp+3,w
  1685     01AF  00F8               	movwf	___lldiv@dividend+3
  1686     01B0  0822               	movf	_temp+2,w
  1687     01B1  00F7               	movwf	___lldiv@dividend+2
  1688     01B2  0821               	movf	_temp+1,w
  1689     01B3  00F6               	movwf	___lldiv@dividend+1
  1690     01B4  0820               	movf	_temp,w
  1691     01B5  00F5               	movwf	___lldiv@dividend
  1692     01B6  3183  2322  3180   	fcall	___lldiv
  1693     01B9  0874               	movf	?___lldiv+3,w
  1694     01BA  0020               	movlb	0	; select bank0
  1695     01BB  00D0               	movwf	___llmod@dividend+3
  1696     01BC  0873               	movf	?___lldiv+2,w
  1697     01BD  00CF               	movwf	___llmod@dividend+2
  1698     01BE  0872               	movf	?___lldiv+1,w
  1699     01BF  00CE               	movwf	___llmod@dividend+1
  1700     01C0  0871               	movf	?___lldiv,w
  1701     01C1  00CD               	movwf	___llmod@dividend
  1702     01C2  3183  237D  3180   	fcall	___llmod
  1703     01C5  0020               	movlb	0	; select bank0
  1704     01C6  0849               	movf	?___llmod,w
  1705     01C7  3E30               	addlw	48
  1706     01C8  00B6               	movwf	_bf_tx+6
  1707     01C9                     l1819:
  1708                           
  1709                           ;main.c: 87:         bf_tx[7] = (unsigned char) (temp / 1 % 10 + 48);
  1710     01C9  3000               	movlw	0
  1711     01CA  00CC               	movwf	___llmod@divisor+3
  1712     01CB  3000               	movlw	0
  1713     01CC  00CB               	movwf	___llmod@divisor+2
  1714     01CD  3000               	movlw	0
  1715     01CE  00CA               	movwf	___llmod@divisor+1
  1716     01CF  300A               	movlw	10
  1717     01D0  00C9               	movwf	___llmod@divisor
  1718     01D1  0823               	movf	_temp+3,w
  1719     01D2  00D0               	movwf	___llmod@dividend+3
  1720     01D3  0822               	movf	_temp+2,w
  1721     01D4  00CF               	movwf	___llmod@dividend+2
  1722     01D5  0821               	movf	_temp+1,w
  1723     01D6  00CE               	movwf	___llmod@dividend+1
  1724     01D7  0820               	movf	_temp,w
  1725     01D8  00CD               	movwf	___llmod@dividend
  1726     01D9  3183  237D  3180   	fcall	___llmod
  1727     01DC  0020               	movlb	0	; select bank0
  1728     01DD  0849               	movf	?___llmod,w
  1729     01DE  3E30               	addlw	48
  1730     01DF  00B7               	movwf	_bf_tx+7
  1731     01E0                     l1821:
  1732                           
  1733                           ;main.c: 89:         ADCON0 = 0X09;
  1734     01E0  3009               	movlw	9
  1735     01E1  0021               	movlb	1	; select bank1
  1736     01E2  009D               	movwf	29	;volatile
  1737     01E3                     l1823:
  1738                           
  1739                           ;main.c: 90:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  1740     01E3  3042               	movlw	66
  1741     01E4                     u1437:
  1742     01E4  0B89               	decfsz	9,f
  1743     01E5  29E4               	goto	u1437
  1744     01E6  3200               	nop2
  1745     01E7                     l1825:
  1746                           
  1747                           ;main.c: 91:         ADCON0bits.ADGO = 1;
  1748     01E7  0021               	movlb	1	; select bank1
  1749     01E8  149D               	bsf	29,1	;volatile
  1750     01E9                     l1827:
  1751                           
  1752                           ;main.c: 92:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1753     01E9  3002               	movlw	2
  1754     01EA  0020               	movlb	0	; select bank0
  1755     01EB  00DD               	movwf	??_main+1
  1756     01EC  3004               	movlw	4
  1757     01ED  00DC               	movwf	??_main
  1758     01EE  30BA               	movlw	186
  1759     01EF                     u1447:
  1760     01EF  0B89               	decfsz	9,f
  1761     01F0  29EF               	goto	u1447
  1762     01F1  0BDC               	decfsz	??_main,f
  1763     01F2  29EF               	goto	u1447
  1764     01F3  0BDD               	decfsz	??_main+1,f
  1765     01F4  29EF               	goto	u1447
  1766     01F5  0000               	nop
  1767     01F6                     l1829:
  1768                           
  1769                           ;main.c: 93:         mq2 = ADRES;
  1770     01F6  0021               	movlb	1	; select bank1
  1771     01F7  081C               	movf	28,w	;volatile
  1772     01F8  0020               	movlb	0	; select bank0
  1773     01F9  00AC               	movwf	_mq2+1
  1774     01FA  0021               	movlb	1	; select bank1
  1775     01FB  081B               	movf	27,w	;volatile
  1776     01FC  0020               	movlb	0	; select bank0
  1777     01FD  00AB               	movwf	_mq2
  1778     01FE                     l1831:
  1779                           
  1780                           ;main.c: 94:         bf_tx[8] = (unsigned char) (mq2 / 1000 % 10 + 48);
  1781     01FE  300A               	movlw	10
  1782     01FF  00C4               	movwf	___lwmod@divisor
  1783     0200  3000               	movlw	0
  1784     0201  00C5               	movwf	___lwmod@divisor+1
  1785     0202  30E8               	movlw	232
  1786     0203  00F1               	movwf	___lwdiv@divisor
  1787     0204  3003               	movlw	3
  1788     0205  00F2               	movwf	___lwdiv@divisor+1
  1789     0206  082C               	movf	_mq2+1,w
  1790     0207  00F4               	movwf	___lwdiv@dividend+1
  1791     0208  082B               	movf	_mq2,w
  1792     0209  00F3               	movwf	___lwdiv@dividend
  1793     020A  3183  23C8  3180   	fcall	___lwdiv
  1794     020D  0872               	movf	?___lwdiv+1,w
  1795     020E  0020               	movlb	0	; select bank0
  1796     020F  00C7               	movwf	___lwmod@dividend+1
  1797     0210  0871               	movf	?___lwdiv,w
  1798     0211  00C6               	movwf	___lwmod@dividend
  1799     0212  3184  2404  3180   	fcall	___lwmod
  1800     0215  0020               	movlb	0	; select bank0
  1801     0216  0844               	movf	?___lwmod,w
  1802     0217  3E30               	addlw	48
  1803     0218  00B8               	movwf	_bf_tx+8
  1804     0219                     l1833:
  1805                           
  1806                           ;main.c: 95:         bf_tx[9] = (unsigned char) (mq2 / 100 % 10 + 48);
  1807     0219  300A               	movlw	10
  1808     021A  00C4               	movwf	___lwmod@divisor
  1809     021B  3000               	movlw	0
  1810     021C  00C5               	movwf	___lwmod@divisor+1
  1811     021D  3064               	movlw	100
  1812     021E  00F1               	movwf	___lwdiv@divisor
  1813     021F  3000               	movlw	0
  1814     0220  00F2               	movwf	___lwdiv@divisor+1
  1815     0221  082C               	movf	_mq2+1,w
  1816     0222  00F4               	movwf	___lwdiv@dividend+1
  1817     0223  082B               	movf	_mq2,w
  1818     0224  00F3               	movwf	___lwdiv@dividend
  1819     0225  3183  23C8  3180   	fcall	___lwdiv
  1820     0228  0872               	movf	?___lwdiv+1,w
  1821     0229  0020               	movlb	0	; select bank0
  1822     022A  00C7               	movwf	___lwmod@dividend+1
  1823     022B  0871               	movf	?___lwdiv,w
  1824     022C  00C6               	movwf	___lwmod@dividend
  1825     022D  3184  2404  3180   	fcall	___lwmod
  1826     0230  0020               	movlb	0	; select bank0
  1827     0231  0844               	movf	?___lwmod,w
  1828     0232  3E30               	addlw	48
  1829     0233  00B9               	movwf	_bf_tx+9
  1830     0234                     l1835:
  1831                           
  1832                           ;main.c: 96:         bf_tx[10] = (unsigned char) (mq2 / 10 % 10 + 48);
  1833     0234  300A               	movlw	10
  1834     0235  00C4               	movwf	___lwmod@divisor
  1835     0236  3000               	movlw	0
  1836     0237  00C5               	movwf	___lwmod@divisor+1
  1837     0238  300A               	movlw	10
  1838     0239  00F1               	movwf	___lwdiv@divisor
  1839     023A  3000               	movlw	0
  1840     023B  00F2               	movwf	___lwdiv@divisor+1
  1841     023C  082C               	movf	_mq2+1,w
  1842     023D  00F4               	movwf	___lwdiv@dividend+1
  1843     023E  082B               	movf	_mq2,w
  1844     023F  00F3               	movwf	___lwdiv@dividend
  1845     0240  3183  23C8  3180   	fcall	___lwdiv
  1846     0243  0872               	movf	?___lwdiv+1,w
  1847     0244  0020               	movlb	0	; select bank0
  1848     0245  00C7               	movwf	___lwmod@dividend+1
  1849     0246  0871               	movf	?___lwdiv,w
  1850     0247  00C6               	movwf	___lwmod@dividend
  1851     0248  3184  2404  3180   	fcall	___lwmod
  1852     024B  0020               	movlb	0	; select bank0
  1853     024C  0844               	movf	?___lwmod,w
  1854     024D  3E30               	addlw	48
  1855     024E  00BA               	movwf	_bf_tx+10
  1856     024F                     l1837:
  1857                           
  1858                           ;main.c: 97:         bf_tx[11] = (unsigned char) (mq2 / 1 % 10 + 48);
  1859     024F  300A               	movlw	10
  1860     0250  00C4               	movwf	___lwmod@divisor
  1861     0251  3000               	movlw	0
  1862     0252  00C5               	movwf	___lwmod@divisor+1
  1863     0253  082C               	movf	_mq2+1,w
  1864     0254  00C7               	movwf	___lwmod@dividend+1
  1865     0255  082B               	movf	_mq2,w
  1866     0256  00C6               	movwf	___lwmod@dividend
  1867     0257  3184  2404  3180   	fcall	___lwmod
  1868     025A  0020               	movlb	0	; select bank0
  1869     025B  0844               	movf	?___lwmod,w
  1870     025C  3E30               	addlw	48
  1871     025D  00BB               	movwf	_bf_tx+11
  1872     025E                     l1839:
  1873                           
  1874                           ;main.c: 100:         if (ena_send == 1) {
  1875     025E  1C7C               	btfss	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1876     025F  2A61               	goto	u1411
  1877     0260  2A62               	goto	u1410
  1878     0261                     u1411:
  1879     0261  28D6               	goto	l1803
  1880     0262                     u1410:
  1881     0262                     l1841:
  1882                           
  1883                           ;main.c: 101:             ena_send = 0;
  1884     0262  107C               	bcf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1885     0263                     l1843:
  1886                           
  1887                           ;main.c: 102:             USART_TransmitString(bf_tx);
  1888     0263  3030               	movlw	(low (_bf_tx| 0))& (0+255)
  1889     0264  3184  2494  3180   	fcall	_USART_TransmitString
  1890     0267  28D6               	goto	l1803
  1891     0268  3180  2845         	ljmp	start
  1892     026A                     __end_of_main:
  1893                           
  1894                           	psect	text1
  1895     026A                     __ptext1:	
  1896 ;; *************** function _read_temp *****************
  1897 ;; Defined at:
  1898 ;;		line 26 in file "main.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  temp            4   20[BANK0 ] unsigned long 
  1903 ;;  dt3             4   16[BANK0 ] unsigned long 
  1904 ;;  dt2             4   12[BANK0 ] unsigned long 
  1905 ;;  dt1             4    8[BANK0 ] unsigned long 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  4    5[COMMON] unsigned long 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;Total ram usage:       28 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 3
  1922 ;; This function calls:
  1923 ;;		_i2c_read
  1924 ;;		_i2c_start
  1925 ;;		_i2c_stop
  1926 ;;		_i2c_write
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932     026A                     _read_temp:	
  1933                           ;psect for function _read_temp
  1934                           
  1935     026A                     l1379:	
  1936                           ;incstack = 0
  1937                           ; Regs used in _read_temp: [wreg+status,2+status,0+pclath+cstack]
  1938                           
  1939                           
  1940                           ;main.c: 27:     unsigned long dt1, dt2, dt3, temp;;main.c: 28:     i2c_start();
  1941     026A  3184  24E0  3182   	fcall	_i2c_start
  1942     026D                     l1381:
  1943                           
  1944                           ;main.c: 29:     i2c_write(0x71);
  1945     026D  3071               	movlw	113
  1946     026E  3184  246D  3182   	fcall	_i2c_write
  1947     0271                     l1383:
  1948                           
  1949                           ;main.c: 30:     i2c_read(1);
  1950     0271  3001               	movlw	1
  1951     0272  3184  2439  3182   	fcall	_i2c_read
  1952     0275                     l1385:
  1953                           
  1954                           ;main.c: 31:     i2c_read(1);
  1955     0275  3001               	movlw	1
  1956     0276  3184  2439  3182   	fcall	_i2c_read
  1957     0279                     l1387:
  1958                           
  1959                           ;main.c: 32:     i2c_read(1);
  1960     0279  3001               	movlw	1
  1961     027A  3184  2439  3182   	fcall	_i2c_read
  1962     027D                     l1389:
  1963                           
  1964                           ;main.c: 33:     dt1 = i2c_read(1) & 0x0f;
  1965     027D  3001               	movlw	1
  1966     027E  3184  2439  3182   	fcall	_i2c_read
  1967     0281  390F               	andlw	15
  1968     0282  0020               	movlb	0	; select bank0
  1969     0283  00C4               	movwf	??_read_temp
  1970     0284  01C5               	clrf	??_read_temp+1
  1971     0285  01C6               	clrf	??_read_temp+2
  1972     0286  01C7               	clrf	??_read_temp+3
  1973     0287  0847               	movf	??_read_temp+3,w
  1974     0288  00CF               	movwf	read_temp@dt1+3
  1975     0289  0846               	movf	??_read_temp+2,w
  1976     028A  00CE               	movwf	read_temp@dt1+2
  1977     028B  0845               	movf	??_read_temp+1,w
  1978     028C  00CD               	movwf	read_temp@dt1+1
  1979     028D  0844               	movf	??_read_temp,w
  1980     028E  00CC               	movwf	read_temp@dt1
  1981     028F                     l1391:
  1982                           
  1983                           ;main.c: 34:     dt2 = i2c_read(1);
  1984     028F  3001               	movlw	1
  1985     0290  3184  2439  3182   	fcall	_i2c_read
  1986     0293  0020               	movlb	0	; select bank0
  1987     0294  00C4               	movwf	??_read_temp
  1988     0295  01C5               	clrf	??_read_temp+1
  1989     0296  01C6               	clrf	??_read_temp+2
  1990     0297  01C7               	clrf	??_read_temp+3
  1991     0298  0847               	movf	??_read_temp+3,w
  1992     0299  00D3               	movwf	read_temp@dt2+3
  1993     029A  0846               	movf	??_read_temp+2,w
  1994     029B  00D2               	movwf	read_temp@dt2+2
  1995     029C  0845               	movf	??_read_temp+1,w
  1996     029D  00D1               	movwf	read_temp@dt2+1
  1997     029E  0844               	movf	??_read_temp,w
  1998     029F  00D0               	movwf	read_temp@dt2
  1999     02A0                     l1393:
  2000                           
  2001                           ;main.c: 35:     dt3 = i2c_read(0);
  2002     02A0  3000               	movlw	0
  2003     02A1  3184  2439  3182   	fcall	_i2c_read
  2004     02A4  0020               	movlb	0	; select bank0
  2005     02A5  00C4               	movwf	??_read_temp
  2006     02A6  01C5               	clrf	??_read_temp+1
  2007     02A7  01C6               	clrf	??_read_temp+2
  2008     02A8  01C7               	clrf	??_read_temp+3
  2009     02A9  0847               	movf	??_read_temp+3,w
  2010     02AA  00D7               	movwf	read_temp@dt3+3
  2011     02AB  0846               	movf	??_read_temp+2,w
  2012     02AC  00D6               	movwf	read_temp@dt3+2
  2013     02AD  0845               	movf	??_read_temp+1,w
  2014     02AE  00D5               	movwf	read_temp@dt3+1
  2015     02AF  0844               	movf	??_read_temp,w
  2016     02B0  00D4               	movwf	read_temp@dt3
  2017     02B1                     l1395:
  2018                           
  2019                           ;main.c: 36:     i2c_stop();
  2020     02B1  3184  24D7  3182   	fcall	_i2c_stop
  2021     02B4                     l1397:
  2022                           
  2023                           ;main.c: 37:     temp = (dt1 & 0x0f) << 16 | dt2 << 8 | dt3;
  2024     02B4  0020               	movlb	0	; select bank0
  2025     02B5  0850               	movf	read_temp@dt2,w
  2026     02B6  00C4               	movwf	??_read_temp
  2027     02B7  0851               	movf	read_temp@dt2+1,w
  2028     02B8  00C5               	movwf	??_read_temp+1
  2029     02B9  0852               	movf	read_temp@dt2+2,w
  2030     02BA  00C6               	movwf	??_read_temp+2
  2031     02BB  0853               	movf	read_temp@dt2+3,w
  2032     02BC  00C7               	movwf	??_read_temp+3
  2033     02BD  3008               	movlw	8
  2034     02BE                     u775:
  2035     02BE  35C4               	lslf	??_read_temp,f
  2036     02BF  0DC5               	rlf	??_read_temp+1,f
  2037     02C0  0DC6               	rlf	??_read_temp+2,f
  2038     02C1  0DC7               	rlf	??_read_temp+3,f
  2039     02C2                     u770:
  2040     02C2  0B89               	decfsz	9,f
  2041     02C3  2ABE               	goto	u775
  2042     02C4  300F               	movlw	15
  2043     02C5  054C               	andwf	read_temp@dt1,w
  2044     02C6  00C8               	movwf	??_read_temp+4
  2045     02C7  3000               	movlw	0
  2046     02C8  054D               	andwf	read_temp@dt1+1,w
  2047     02C9  00C9               	movwf	??_read_temp+5
  2048     02CA  3000               	movlw	0
  2049     02CB  054E               	andwf	read_temp@dt1+2,w
  2050     02CC  00CA               	movwf	??_read_temp+6
  2051     02CD  3000               	movlw	0
  2052     02CE  054F               	andwf	read_temp@dt1+3,w
  2053     02CF  00CB               	movwf	??_read_temp+7
  2054     02D0  3010               	movlw	16
  2055     02D1                     u785:
  2056     02D1  35C8               	lslf	??_read_temp+4,f
  2057     02D2  0DC9               	rlf	??_read_temp+5,f
  2058     02D3  0DCA               	rlf	??_read_temp+6,f
  2059     02D4  0DCB               	rlf	??_read_temp+7,f
  2060     02D5                     u780:
  2061     02D5  0B89               	decfsz	9,f
  2062     02D6  2AD1               	goto	u785
  2063     02D7  0848               	movf	??_read_temp+4,w
  2064     02D8  04C4               	iorwf	??_read_temp,f
  2065     02D9  0849               	movf	??_read_temp+5,w
  2066     02DA  04C5               	iorwf	??_read_temp+1,f
  2067     02DB  084A               	movf	??_read_temp+6,w
  2068     02DC  04C6               	iorwf	??_read_temp+2,f
  2069     02DD  084B               	movf	??_read_temp+7,w
  2070     02DE  04C7               	iorwf	??_read_temp+3,f
  2071     02DF  0854               	movf	read_temp@dt3,w
  2072     02E0  0444               	iorwf	??_read_temp,w
  2073     02E1  00D8               	movwf	read_temp@temp
  2074     02E2  0855               	movf	read_temp@dt3+1,w
  2075     02E3  0445               	iorwf	??_read_temp+1,w
  2076     02E4  00D9               	movwf	read_temp@temp+1
  2077     02E5  0856               	movf	read_temp@dt3+2,w
  2078     02E6  0446               	iorwf	??_read_temp+2,w
  2079     02E7  00DA               	movwf	read_temp@temp+2
  2080     02E8  0857               	movf	read_temp@dt3+3,w
  2081     02E9  0447               	iorwf	??_read_temp+3,w
  2082     02EA  00DB               	movwf	read_temp@temp+3
  2083     02EB                     l1399:
  2084                           
  2085                           ;main.c: 38:     if (temp > 781189) temp = 781189;
  2086     02EB  085B               	movf	read_temp@temp+3,w
  2087     02EC  1D03               	btfss	3,2
  2088     02ED  2AF8               	goto	u790
  2089     02EE  3086               	movlw	134
  2090     02EF  0258               	subwf	read_temp@temp,w
  2091     02F0  30EB               	movlw	235
  2092     02F1  3B59               	subwfb	read_temp@temp+1,w
  2093     02F2  300B               	movlw	11
  2094     02F3  3B5A               	subwfb	read_temp@temp+2,w
  2095     02F4  1C03               	btfss	3,0
  2096     02F5  2AF7               	goto	u791
  2097     02F6  2AF8               	goto	u790
  2098     02F7                     u791:
  2099     02F7  2B01               	goto	l1403
  2100     02F8                     u790:
  2101     02F8                     l1401:
  2102     02F8  3000               	movlw	0
  2103     02F9  0020               	movlb	0	; select bank0
  2104     02FA  00DB               	movwf	read_temp@temp+3
  2105     02FB  300B               	movlw	11
  2106     02FC  00DA               	movwf	read_temp@temp+2
  2107     02FD  30EB               	movlw	235
  2108     02FE  00D9               	movwf	read_temp@temp+1
  2109     02FF  3085               	movlw	133
  2110     0300  00D8               	movwf	read_temp@temp
  2111     0301                     l1403:
  2112                           
  2113                           ;main.c: 39:     if (temp < 314573) temp = 314573;
  2114     0301  0020               	movlb	0	; select bank0
  2115     0302  085B               	movf	read_temp@temp+3,w
  2116     0303  1D03               	btfss	3,2
  2117     0304  2B0E               	goto	u801
  2118     0305  30CD               	movlw	205
  2119     0306  0258               	subwf	read_temp@temp,w
  2120     0307  30CC               	movlw	204
  2121     0308  3B59               	subwfb	read_temp@temp+1,w
  2122     0309  3004               	movlw	4
  2123     030A  3B5A               	subwfb	read_temp@temp+2,w
  2124     030B  1803               	btfsc	3,0
  2125     030C  2B0E               	goto	u801
  2126     030D  2B0F               	goto	u800
  2127     030E                     u801:
  2128     030E  2B18               	goto	l70
  2129     030F                     u800:
  2130     030F                     l1405:
  2131     030F  3000               	movlw	0
  2132     0310  0020               	movlb	0	; select bank0
  2133     0311  00DB               	movwf	read_temp@temp+3
  2134     0312  3004               	movlw	4
  2135     0313  00DA               	movwf	read_temp@temp+2
  2136     0314  30CC               	movlw	204
  2137     0315  00D9               	movwf	read_temp@temp+1
  2138     0316  30CD               	movlw	205
  2139     0317  00D8               	movwf	read_temp@temp
  2140     0318                     l70:
  2141                           
  2142                           ;main.c: 40:     return temp;
  2143     0318  0020               	movlb	0	; select bank0
  2144     0319  085B               	movf	read_temp@temp+3,w
  2145     031A  00F8               	movwf	?_read_temp+3
  2146     031B  085A               	movf	read_temp@temp+2,w
  2147     031C  00F7               	movwf	?_read_temp+2
  2148     031D  0859               	movf	read_temp@temp+1,w
  2149     031E  00F6               	movwf	?_read_temp+1
  2150     031F  0858               	movf	read_temp@temp,w
  2151     0320  00F5               	movwf	?_read_temp
  2152     0321                     l71:
  2153     0321  0008               	return
  2154     0322                     __end_of_read_temp:
  2155                           
  2156                           	psect	text2
  2157     0439                     __ptext2:	
  2158 ;; *************** function _i2c_read *****************
  2159 ;; Defined at:
  2160 ;;		line 39 in file "tv_i2c.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  ACK             1    wreg     unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  ACK             1    2[COMMON] unsigned char 
  2165 ;;  i               1    3[COMMON] unsigned char 
  2166 ;;  DATA            1    4[COMMON] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      unsigned char 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;Total ram usage:        4 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 2
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_read_temp
  2187 ;;		_READ_T_H_AHT10
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191     0439                     _i2c_read:	
  2192                           ;psect for function _i2c_read
  2193                           
  2194                           
  2195                           ;incstack = 0
  2196                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2197                           ;i2c_read@ACK stored from wreg
  2198     0439  00F2               	movwf	i2c_read@ACK
  2199     043A                     l1341:
  2200                           
  2201                           ;tv_i2c.c: 39: unsigned char i2c_read(unsigned char ACK);tv_i2c.c: 40: {;tv_i2c.c: 41:  
      +                             unsigned char DATA;;tv_i2c.c: 42:     TRISC1=0;
  2202     043A  0021               	movlb	1	; select bank1
  2203     043B  108E               	bcf	14,1	;volatile
  2204                           
  2205                           ;tv_i2c.c: 43:     LATC1=0;
  2206     043C  0022               	movlb	2	; select bank2
  2207     043D  108E               	bcf	14,1	;volatile
  2208                           
  2209                           ;tv_i2c.c: 44:     TRISC2=1;
  2210     043E  0021               	movlb	1	; select bank1
  2211     043F  150E               	bsf	14,2	;volatile
  2212     0440                     l1343:
  2213                           
  2214                           ;tv_i2c.c: 45:     for (unsigned char i=0;i<8;i++)
  2215     0440  01F3               	clrf	i2c_read@i
  2216     0441                     l147:
  2217                           
  2218                           ;tv_i2c.c: 46:     {;tv_i2c.c: 47:         LATC1 = 1;
  2219     0441  0022               	movlb	2	; select bank2
  2220     0442  148E               	bsf	14,1	;volatile
  2221                           
  2222                           ;tv_i2c.c: 48:         if(PORTCbits.RC2 == 1) DATA = (unsigned char)(DATA << 1) | 1;
  2223     0443  0020               	movlb	0	; select bank0
  2224     0444  1D0E               	btfss	14,2	;volatile
  2225     0445  2C47               	goto	u721
  2226     0446  2C48               	goto	u720
  2227     0447                     u721:
  2228     0447  2C4B               	goto	l1351
  2229     0448                     u720:
  2230     0448                     l1349:
  2231     0448  1403               	setc
  2232     0449  0DF4               	rlf	i2c_read@DATA,f
  2233     044A  2C4D               	goto	l1353
  2234     044B                     l1351:
  2235     044B  3574               	lslf	i2c_read@DATA,w
  2236     044C  00F4               	movwf	i2c_read@DATA
  2237     044D                     l1353:
  2238                           
  2239                           ;tv_i2c.c: 50:         LATC1=0;
  2240     044D  0022               	movlb	2	; select bank2
  2241     044E  108E               	bcf	14,1	;volatile
  2242     044F                     l1355:
  2243                           
  2244                           ;tv_i2c.c: 51:         _delay((unsigned long)((10)*(16000000/4000000.0)));
  2245     044F  300D               	movlw	13
  2246     0450                     u1457:
  2247     0450  0B89               	decfsz	9,f
  2248     0451  2C50               	goto	u1457
  2249     0452  0000               	nop
  2250     0453                     l1357:
  2251                           
  2252                           ;tv_i2c.c: 52:     }
  2253     0453  3001               	movlw	1
  2254     0454  00F1               	movwf	??_i2c_read
  2255     0455  0871               	movf	??_i2c_read,w
  2256     0456  07F3               	addwf	i2c_read@i,f
  2257     0457  3008               	movlw	8
  2258     0458  0273               	subwf	i2c_read@i,w
  2259     0459  1C03               	skipc
  2260     045A  2C5C               	goto	u731
  2261     045B  2C5D               	goto	u730
  2262     045C                     u731:
  2263     045C  2C41               	goto	l147
  2264     045D                     u730:
  2265     045D                     l148:
  2266                           
  2267                           ;tv_i2c.c: 53:     TRISC2=0;
  2268     045D  0021               	movlb	1	; select bank1
  2269     045E  110E               	bcf	14,2	;volatile
  2270     045F                     l1359:
  2271                           
  2272                           ;tv_i2c.c: 54:     if (ACK == 1) LATC2 = 0;
  2273     045F  0372               	decf	i2c_read@ACK,w
  2274     0460  1D03               	btfss	3,2
  2275     0461  2C63               	goto	u741
  2276     0462  2C64               	goto	u740
  2277     0463                     u741:
  2278     0463  2C67               	goto	l151
  2279     0464                     u740:
  2280     0464                     l1361:
  2281     0464  0022               	movlb	2	; select bank2
  2282     0465  110E               	bcf	14,2	;volatile
  2283     0466  2C69               	goto	l152
  2284     0467                     l151:	
  2285                           ;tv_i2c.c: 55:     else LATC2 = 1;
  2286                           
  2287     0467  0022               	movlb	2	; select bank2
  2288     0468  150E               	bsf	14,2	;volatile
  2289     0469                     l152:
  2290                           
  2291                           ;tv_i2c.c: 56:     LATC1=1;
  2292     0469  148E               	bsf	14,1	;volatile
  2293                           
  2294                           ;tv_i2c.c: 57:     LATC1=0;
  2295     046A  108E               	bcf	14,1	;volatile
  2296     046B                     l1363:
  2297                           
  2298                           ;tv_i2c.c: 58:     return DATA;
  2299     046B  0874               	movf	i2c_read@DATA,w
  2300     046C                     l153:
  2301     046C  0008               	return
  2302     046D                     __end_of_i2c_read:
  2303                           
  2304                           	psect	text3
  2305     0404                     __ptext3:	
  2306 ;; *************** function ___lwmod *****************
  2307 ;; Defined at:
  2308 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwmod.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  divisor         2    0[BANK0 ] unsigned int 
  2311 ;;  dividend        2    2[BANK0 ] unsigned int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  counter         1   10[COMMON] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  2    0[BANK0 ] unsigned int 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2323 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;Total ram usage:        6 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 2
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337     0404                     ___lwmod:	
  2338                           ;psect for function ___lwmod
  2339                           
  2340     0404                     l1747:	
  2341                           ;incstack = 0
  2342                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2343                           
  2344     0404  0020               	movlb	0	; select bank0
  2345     0405  0844               	movf	___lwmod@divisor,w
  2346     0406  0445               	iorwf	___lwmod@divisor+1,w
  2347     0407  1903               	btfsc	3,2
  2348     0408  2C0A               	goto	u1351
  2349     0409  2C0B               	goto	u1350
  2350     040A                     u1351:
  2351     040A  2C34               	goto	l1765
  2352     040B                     u1350:
  2353     040B                     l1749:
  2354     040B  01FA               	clrf	___lwmod@counter
  2355     040C  0AFA               	incf	___lwmod@counter,f
  2356     040D  2C17               	goto	l1755
  2357     040E                     l1751:
  2358     040E  3001               	movlw	1
  2359     040F                     u1365:
  2360     040F  35C4               	lslf	___lwmod@divisor,f
  2361     0410  0DC5               	rlf	___lwmod@divisor+1,f
  2362     0411  0B89               	decfsz	9,f
  2363     0412  2C0F               	goto	u1365
  2364     0413                     l1753:
  2365     0413  3001               	movlw	1
  2366     0414  00F9               	movwf	??___lwmod
  2367     0415  0879               	movf	??___lwmod,w
  2368     0416  07FA               	addwf	___lwmod@counter,f
  2369     0417                     l1755:
  2370     0417  1FC5               	btfss	___lwmod@divisor+1,7
  2371     0418  2C1A               	goto	u1371
  2372     0419  2C1B               	goto	u1370
  2373     041A                     u1371:
  2374     041A  2C0E               	goto	l1751
  2375     041B                     u1370:
  2376     041B                     l1757:
  2377     041B  0845               	movf	___lwmod@divisor+1,w
  2378     041C  0247               	subwf	___lwmod@dividend+1,w
  2379     041D  1D03               	skipz
  2380     041E  2C21               	goto	u1385
  2381     041F  0844               	movf	___lwmod@divisor,w
  2382     0420  0246               	subwf	___lwmod@dividend,w
  2383     0421                     u1385:
  2384     0421  1C03               	skipc
  2385     0422  2C24               	goto	u1381
  2386     0423  2C25               	goto	u1380
  2387     0424                     u1381:
  2388     0424  2C29               	goto	l1761
  2389     0425                     u1380:
  2390     0425                     l1759:
  2391     0425  0844               	movf	___lwmod@divisor,w
  2392     0426  02C6               	subwf	___lwmod@dividend,f
  2393     0427  0845               	movf	___lwmod@divisor+1,w
  2394     0428  3BC7               	subwfb	___lwmod@dividend+1,f
  2395     0429                     l1761:
  2396     0429  3001               	movlw	1
  2397     042A                     u1395:
  2398     042A  36C5               	lsrf	___lwmod@divisor+1,f
  2399     042B  0CC4               	rrf	___lwmod@divisor,f
  2400     042C  0B89               	decfsz	9,f
  2401     042D  2C2A               	goto	u1395
  2402     042E                     l1763:
  2403     042E  3001               	movlw	1
  2404     042F  02FA               	subwf	___lwmod@counter,f
  2405     0430  1D03               	btfss	3,2
  2406     0431  2C33               	goto	u1401
  2407     0432  2C34               	goto	u1400
  2408     0433                     u1401:
  2409     0433  2C1B               	goto	l1757
  2410     0434                     u1400:
  2411     0434                     l1765:
  2412     0434  0847               	movf	___lwmod@dividend+1,w
  2413     0435  00C5               	movwf	?___lwmod+1
  2414     0436  0846               	movf	___lwmod@dividend,w
  2415     0437  00C4               	movwf	?___lwmod
  2416     0438                     l699:
  2417     0438  0008               	return
  2418     0439                     __end_of___lwmod:
  2419                           
  2420                           	psect	text4
  2421     03C8                     __ptext4:	
  2422 ;; *************** function ___lwdiv *****************
  2423 ;; Defined at:
  2424 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwdiv.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  divisor         2    1[COMMON] unsigned int 
  2427 ;;  dividend        2    3[COMMON] unsigned int 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  quotient        2    6[COMMON] unsigned int 
  2430 ;;  counter         1    8[COMMON] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2    1[COMMON] unsigned int 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;Total ram usage:        8 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 2
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454     03C8                     ___lwdiv:	
  2455                           ;psect for function ___lwdiv
  2456                           
  2457     03C8                     l1499:	
  2458                           ;incstack = 0
  2459                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2460                           
  2461     03C8  01F6               	clrf	___lwdiv@quotient
  2462     03C9  01F7               	clrf	___lwdiv@quotient+1
  2463     03CA                     l1501:
  2464     03CA  0871               	movf	___lwdiv@divisor,w
  2465     03CB  0472               	iorwf	___lwdiv@divisor+1,w
  2466     03CC  1903               	btfsc	3,2
  2467     03CD  2BCF               	goto	u971
  2468     03CE  2BD0               	goto	u970
  2469     03CF                     u971:
  2470     03CF  2BFF               	goto	l1521
  2471     03D0                     u970:
  2472     03D0                     l1503:
  2473     03D0  01F8               	clrf	___lwdiv@counter
  2474     03D1  0AF8               	incf	___lwdiv@counter,f
  2475     03D2  2BDC               	goto	l1509
  2476     03D3                     l1505:
  2477     03D3  3001               	movlw	1
  2478     03D4                     u985:
  2479     03D4  35F1               	lslf	___lwdiv@divisor,f
  2480     03D5  0DF2               	rlf	___lwdiv@divisor+1,f
  2481     03D6  0B89               	decfsz	9,f
  2482     03D7  2BD4               	goto	u985
  2483     03D8                     l1507:
  2484     03D8  3001               	movlw	1
  2485     03D9  00F5               	movwf	??___lwdiv
  2486     03DA  0875               	movf	??___lwdiv,w
  2487     03DB  07F8               	addwf	___lwdiv@counter,f
  2488     03DC                     l1509:
  2489     03DC  1FF2               	btfss	___lwdiv@divisor+1,7
  2490     03DD  2BDF               	goto	u991
  2491     03DE  2BE0               	goto	u990
  2492     03DF                     u991:
  2493     03DF  2BD3               	goto	l1505
  2494     03E0                     u990:
  2495     03E0                     l1511:
  2496     03E0  3001               	movlw	1
  2497     03E1                     u1005:
  2498     03E1  35F6               	lslf	___lwdiv@quotient,f
  2499     03E2  0DF7               	rlf	___lwdiv@quotient+1,f
  2500     03E3  0B89               	decfsz	9,f
  2501     03E4  2BE1               	goto	u1005
  2502     03E5  0872               	movf	___lwdiv@divisor+1,w
  2503     03E6  0274               	subwf	___lwdiv@dividend+1,w
  2504     03E7  1D03               	skipz
  2505     03E8  2BEB               	goto	u1015
  2506     03E9  0871               	movf	___lwdiv@divisor,w
  2507     03EA  0273               	subwf	___lwdiv@dividend,w
  2508     03EB                     u1015:
  2509     03EB  1C03               	skipc
  2510     03EC  2BEE               	goto	u1011
  2511     03ED  2BEF               	goto	u1010
  2512     03EE                     u1011:
  2513     03EE  2BF4               	goto	l1517
  2514     03EF                     u1010:
  2515     03EF                     l1513:
  2516     03EF  0871               	movf	___lwdiv@divisor,w
  2517     03F0  02F3               	subwf	___lwdiv@dividend,f
  2518     03F1  0872               	movf	___lwdiv@divisor+1,w
  2519     03F2  3BF4               	subwfb	___lwdiv@dividend+1,f
  2520     03F3                     l1515:
  2521     03F3  1476               	bsf	___lwdiv@quotient,0
  2522     03F4                     l1517:
  2523     03F4  3001               	movlw	1
  2524     03F5                     u1025:
  2525     03F5  36F2               	lsrf	___lwdiv@divisor+1,f
  2526     03F6  0CF1               	rrf	___lwdiv@divisor,f
  2527     03F7  0B89               	decfsz	9,f
  2528     03F8  2BF5               	goto	u1025
  2529     03F9                     l1519:
  2530     03F9  3001               	movlw	1
  2531     03FA  02F8               	subwf	___lwdiv@counter,f
  2532     03FB  1D03               	btfss	3,2
  2533     03FC  2BFE               	goto	u1031
  2534     03FD  2BFF               	goto	u1030
  2535     03FE                     u1031:
  2536     03FE  2BE0               	goto	l1511
  2537     03FF                     u1030:
  2538     03FF                     l1521:
  2539     03FF  0877               	movf	___lwdiv@quotient+1,w
  2540     0400  00F2               	movwf	?___lwdiv+1
  2541     0401  0876               	movf	___lwdiv@quotient,w
  2542     0402  00F1               	movwf	?___lwdiv
  2543     0403                     l689:
  2544     0403  0008               	return
  2545     0404                     __end_of___lwdiv:
  2546                           
  2547                           	psect	text5
  2548     037D                     __ptext5:	
  2549 ;; *************** function ___llmod *****************
  2550 ;; Defined at:
  2551 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\llmod.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  divisor         4    5[BANK0 ] unsigned long 
  2554 ;;  dividend        4    9[BANK0 ] unsigned long 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  counter         1   11[COMMON] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  4    5[BANK0 ] unsigned long 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2566 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;Total ram usage:       10 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 2
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580     037D                     ___llmod:	
  2581                           ;psect for function ___llmod
  2582                           
  2583     037D                     l1479:	
  2584                           ;incstack = 0
  2585                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2586                           
  2587     037D  0020               	movlb	0	; select bank0
  2588     037E  084C               	movf	___llmod@divisor+3,w
  2589     037F  044B               	iorwf	___llmod@divisor+2,w
  2590     0380  044A               	iorwf	___llmod@divisor+1,w
  2591     0381  0449               	iorwf	___llmod@divisor,w
  2592     0382  1903               	skipnz
  2593     0383  2B85               	goto	u911
  2594     0384  2B86               	goto	u910
  2595     0385                     u911:
  2596     0385  2BBF               	goto	l1495
  2597     0386                     u910:
  2598     0386                     l1481:
  2599     0386  01FB               	clrf	___llmod@counter
  2600     0387  0AFB               	incf	___llmod@counter,f
  2601     0388  2B94               	goto	l1485
  2602     0389                     l1483:
  2603     0389  3001               	movlw	1
  2604     038A                     u925:
  2605     038A  35C9               	lslf	___llmod@divisor,f
  2606     038B  0DCA               	rlf	___llmod@divisor+1,f
  2607     038C  0DCB               	rlf	___llmod@divisor+2,f
  2608     038D  0DCC               	rlf	___llmod@divisor+3,f
  2609     038E  0B89               	decfsz	9,f
  2610     038F  2B8A               	goto	u925
  2611     0390  3001               	movlw	1
  2612     0391  00FA               	movwf	??___llmod
  2613     0392  087A               	movf	??___llmod,w
  2614     0393  07FB               	addwf	___llmod@counter,f
  2615     0394                     l1485:
  2616     0394  1FCC               	btfss	___llmod@divisor+3,7
  2617     0395  2B97               	goto	u931
  2618     0396  2B98               	goto	u930
  2619     0397                     u931:
  2620     0397  2B89               	goto	l1483
  2621     0398                     u930:
  2622     0398                     l1487:
  2623     0398  084C               	movf	___llmod@divisor+3,w
  2624     0399  0250               	subwf	___llmod@dividend+3,w
  2625     039A  1D03               	skipz
  2626     039B  2BA6               	goto	u945
  2627     039C  084B               	movf	___llmod@divisor+2,w
  2628     039D  024F               	subwf	___llmod@dividend+2,w
  2629     039E  1D03               	skipz
  2630     039F  2BA6               	goto	u945
  2631     03A0  084A               	movf	___llmod@divisor+1,w
  2632     03A1  024E               	subwf	___llmod@dividend+1,w
  2633     03A2  1D03               	skipz
  2634     03A3  2BA6               	goto	u945
  2635     03A4  0849               	movf	___llmod@divisor,w
  2636     03A5  024D               	subwf	___llmod@dividend,w
  2637     03A6                     u945:
  2638     03A6  1C03               	skipc
  2639     03A7  2BA9               	goto	u941
  2640     03A8  2BAA               	goto	u940
  2641     03A9                     u941:
  2642     03A9  2BB2               	goto	l1491
  2643     03AA                     u940:
  2644     03AA                     l1489:
  2645     03AA  0849               	movf	___llmod@divisor,w
  2646     03AB  02CD               	subwf	___llmod@dividend,f
  2647     03AC  084A               	movf	___llmod@divisor+1,w
  2648     03AD  3BCE               	subwfb	___llmod@dividend+1,f
  2649     03AE  084B               	movf	___llmod@divisor+2,w
  2650     03AF  3BCF               	subwfb	___llmod@dividend+2,f
  2651     03B0  084C               	movf	___llmod@divisor+3,w
  2652     03B1  3BD0               	subwfb	___llmod@dividend+3,f
  2653     03B2                     l1491:
  2654     03B2  3001               	movlw	1
  2655     03B3                     u955:
  2656     03B3  36CC               	lsrf	___llmod@divisor+3,f
  2657     03B4  0CCB               	rrf	___llmod@divisor+2,f
  2658     03B5  0CCA               	rrf	___llmod@divisor+1,f
  2659     03B6  0CC9               	rrf	___llmod@divisor,f
  2660     03B7  0B89               	decfsz	9,f
  2661     03B8  2BB3               	goto	u955
  2662     03B9                     l1493:
  2663     03B9  3001               	movlw	1
  2664     03BA  02FB               	subwf	___llmod@counter,f
  2665     03BB  1D03               	btfss	3,2
  2666     03BC  2BBE               	goto	u961
  2667     03BD  2BBF               	goto	u960
  2668     03BE                     u961:
  2669     03BE  2B98               	goto	l1487
  2670     03BF                     u960:
  2671     03BF                     l1495:
  2672     03BF  0850               	movf	___llmod@dividend+3,w
  2673     03C0  00CC               	movwf	?___llmod+3
  2674     03C1  084F               	movf	___llmod@dividend+2,w
  2675     03C2  00CB               	movwf	?___llmod+2
  2676     03C3  084E               	movf	___llmod@dividend+1,w
  2677     03C4  00CA               	movwf	?___llmod+1
  2678     03C5  084D               	movf	___llmod@dividend,w
  2679     03C6  00C9               	movwf	?___llmod
  2680     03C7                     l639:
  2681     03C7  0008               	return
  2682     03C8                     __end_of___llmod:
  2683                           
  2684                           	psect	text6
  2685     0322                     __ptext6:	
  2686 ;; *************** function ___lldiv *****************
  2687 ;; Defined at:
  2688 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\__lldiv.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  divisor         4    1[COMMON] unsigned long 
  2691 ;;  dividend        4    5[COMMON] unsigned long 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  quotient        4    0[BANK0 ] unsigned long 
  2694 ;;  counter         1    4[BANK0 ] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  4    1[COMMON] unsigned long 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;Total ram usage:       14 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 2
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     0322                     ___lldiv:	
  2719                           ;psect for function ___lldiv
  2720                           
  2721     0322                     l1455:	
  2722                           ;incstack = 0
  2723                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2724                           
  2725     0322  3000               	movlw	0
  2726     0323  0020               	movlb	0	; select bank0
  2727     0324  00C7               	movwf	___lldiv@quotient+3
  2728     0325  3000               	movlw	0
  2729     0326  00C6               	movwf	___lldiv@quotient+2
  2730     0327  3000               	movlw	0
  2731     0328  00C5               	movwf	___lldiv@quotient+1
  2732     0329  3000               	movlw	0
  2733     032A  00C4               	movwf	___lldiv@quotient
  2734     032B  0874               	movf	___lldiv@divisor+3,w
  2735     032C  0473               	iorwf	___lldiv@divisor+2,w
  2736     032D  0472               	iorwf	___lldiv@divisor+1,w
  2737     032E  0471               	iorwf	___lldiv@divisor,w
  2738     032F  1903               	skipnz
  2739     0330  2B32               	goto	u841
  2740     0331  2B33               	goto	u840
  2741     0332                     u841:
  2742     0332  2B74               	goto	l1475
  2743     0333                     u840:
  2744     0333                     l1457:
  2745     0333  01C8               	clrf	___lldiv@counter
  2746     0334  0AC8               	incf	___lldiv@counter,f
  2747     0335  2B41               	goto	l1461
  2748     0336                     l1459:
  2749     0336  3001               	movlw	1
  2750     0337                     u855:
  2751     0337  35F1               	lslf	___lldiv@divisor,f
  2752     0338  0DF2               	rlf	___lldiv@divisor+1,f
  2753     0339  0DF3               	rlf	___lldiv@divisor+2,f
  2754     033A  0DF4               	rlf	___lldiv@divisor+3,f
  2755     033B  0B89               	decfsz	9,f
  2756     033C  2B37               	goto	u855
  2757     033D  3001               	movlw	1
  2758     033E  00F9               	movwf	??___lldiv
  2759     033F  0879               	movf	??___lldiv,w
  2760     0340  07C8               	addwf	___lldiv@counter,f
  2761     0341                     l1461:
  2762     0341  1FF4               	btfss	___lldiv@divisor+3,7
  2763     0342  2B44               	goto	u861
  2764     0343  2B45               	goto	u860
  2765     0344                     u861:
  2766     0344  2B36               	goto	l1459
  2767     0345                     u860:
  2768     0345                     l1463:
  2769     0345  3001               	movlw	1
  2770     0346                     u875:
  2771     0346  35C4               	lslf	___lldiv@quotient,f
  2772     0347  0DC5               	rlf	___lldiv@quotient+1,f
  2773     0348  0DC6               	rlf	___lldiv@quotient+2,f
  2774     0349  0DC7               	rlf	___lldiv@quotient+3,f
  2775     034A  0B89               	decfsz	9,f
  2776     034B  2B46               	goto	u875
  2777     034C                     l1465:
  2778     034C  0874               	movf	___lldiv@divisor+3,w
  2779     034D  0278               	subwf	___lldiv@dividend+3,w
  2780     034E  1D03               	skipz
  2781     034F  2B5A               	goto	u885
  2782     0350  0873               	movf	___lldiv@divisor+2,w
  2783     0351  0277               	subwf	___lldiv@dividend+2,w
  2784     0352  1D03               	skipz
  2785     0353  2B5A               	goto	u885
  2786     0354  0872               	movf	___lldiv@divisor+1,w
  2787     0355  0276               	subwf	___lldiv@dividend+1,w
  2788     0356  1D03               	skipz
  2789     0357  2B5A               	goto	u885
  2790     0358  0871               	movf	___lldiv@divisor,w
  2791     0359  0275               	subwf	___lldiv@dividend,w
  2792     035A                     u885:
  2793     035A  1C03               	skipc
  2794     035B  2B5D               	goto	u881
  2795     035C  2B5E               	goto	u880
  2796     035D                     u881:
  2797     035D  2B67               	goto	l1471
  2798     035E                     u880:
  2799     035E                     l1467:
  2800     035E  0871               	movf	___lldiv@divisor,w
  2801     035F  02F5               	subwf	___lldiv@dividend,f
  2802     0360  0872               	movf	___lldiv@divisor+1,w
  2803     0361  3BF6               	subwfb	___lldiv@dividend+1,f
  2804     0362  0873               	movf	___lldiv@divisor+2,w
  2805     0363  3BF7               	subwfb	___lldiv@dividend+2,f
  2806     0364  0874               	movf	___lldiv@divisor+3,w
  2807     0365  3BF8               	subwfb	___lldiv@dividend+3,f
  2808     0366                     l1469:
  2809     0366  1444               	bsf	___lldiv@quotient,0
  2810     0367                     l1471:
  2811     0367  3001               	movlw	1
  2812     0368                     u895:
  2813     0368  36F4               	lsrf	___lldiv@divisor+3,f
  2814     0369  0CF3               	rrf	___lldiv@divisor+2,f
  2815     036A  0CF2               	rrf	___lldiv@divisor+1,f
  2816     036B  0CF1               	rrf	___lldiv@divisor,f
  2817     036C  0B89               	decfsz	9,f
  2818     036D  2B68               	goto	u895
  2819     036E                     l1473:
  2820     036E  3001               	movlw	1
  2821     036F  02C8               	subwf	___lldiv@counter,f
  2822     0370  1D03               	btfss	3,2
  2823     0371  2B73               	goto	u901
  2824     0372  2B74               	goto	u900
  2825     0373                     u901:
  2826     0373  2B45               	goto	l1463
  2827     0374                     u900:
  2828     0374                     l1475:
  2829     0374  0847               	movf	___lldiv@quotient+3,w
  2830     0375  00F4               	movwf	?___lldiv+3
  2831     0376  0846               	movf	___lldiv@quotient+2,w
  2832     0377  00F3               	movwf	?___lldiv+2
  2833     0378  0845               	movf	___lldiv@quotient+1,w
  2834     0379  00F2               	movwf	?___lldiv+1
  2835     037A  0844               	movf	___lldiv@quotient,w
  2836     037B  00F1               	movwf	?___lldiv
  2837     037C                     l445:
  2838     037C  0008               	return
  2839     037D                     __end_of___lldiv:
  2840                           
  2841                           	psect	text7
  2842     0494                     __ptext7:	
  2843 ;; *************** function _USART_TransmitString *****************
  2844 ;; Defined at:
  2845 ;;		line 23 in file "tv_uart.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  out             1    wreg     PTR unsigned char 
  2848 ;;		 -> bf_tx(20), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  out             1    3[COMMON] PTR unsigned char 
  2851 ;;		 -> bf_tx(20), 
  2852 ;;  i               1    4[COMMON] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;Total ram usage:        3 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 3
  2869 ;; This function calls:
  2870 ;;		_USART_TransmitChar
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876     0494                     _USART_TransmitString:	
  2877                           ;psect for function _USART_TransmitString
  2878                           
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in _USART_TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2882                           ;USART_TransmitString@out stored from wreg
  2883     0494  00F3               	movwf	USART_TransmitString@out
  2884     0495                     l1429:
  2885                           
  2886                           ;tv_uart.c: 24:     for (unsigned char i = 0; i < 17; i++) {
  2887     0495  01F4               	clrf	USART_TransmitString@i
  2888     0496                     l1435:
  2889                           
  2890                           ;tv_uart.c: 25:         USART_TransmitChar(out[i]);
  2891     0496  0874               	movf	USART_TransmitString@i,w
  2892     0497  0773               	addwf	USART_TransmitString@out,w
  2893     0498  00F2               	movwf	??_USART_TransmitString
  2894     0499  0872               	movf	??_USART_TransmitString,w
  2895     049A  0086               	movwf	6
  2896     049B  0187               	clrf	7
  2897     049C  0801               	movf	1,w
  2898     049D  3184  24CD  3184   	fcall	_USART_TransmitChar
  2899     04A0                     l1437:
  2900                           
  2901                           ;tv_uart.c: 26:     }
  2902     04A0  3001               	movlw	1
  2903     04A1  00F2               	movwf	??_USART_TransmitString
  2904     04A2  0872               	movf	??_USART_TransmitString,w
  2905     04A3  07F4               	addwf	USART_TransmitString@i,f
  2906     04A4                     l1439:
  2907     04A4  3011               	movlw	17
  2908     04A5  0274               	subwf	USART_TransmitString@i,w
  2909     04A6  1C03               	skipc
  2910     04A7  2CA9               	goto	u811
  2911     04A8  2CAA               	goto	u810
  2912     04A9                     u811:
  2913     04A9  2C96               	goto	l1435
  2914     04AA                     u810:
  2915     04AA                     l242:
  2916     04AA  0008               	return
  2917     04AB                     __end_of_USART_TransmitString:
  2918                           
  2919                           	psect	text8
  2920     04CD                     __ptext8:	
  2921 ;; *************** function _USART_TransmitChar *****************
  2922 ;; Defined at:
  2923 ;;		line 18 in file "tv_uart.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  out             1    wreg     unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  out             1    1[COMMON] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 2
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_USART_TransmitString
  2948 ;;		_putch
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952     04CD                     _USART_TransmitChar:	
  2953                           ;psect for function _USART_TransmitChar
  2954                           
  2955                           
  2956                           ;incstack = 0
  2957                           ; Regs used in _USART_TransmitChar: [wreg]
  2958                           ;USART_TransmitChar@out stored from wreg
  2959     04CD  00F1               	movwf	USART_TransmitChar@out
  2960     04CE                     l1319:
  2961     04CE                     l234:	
  2962                           ;tv_uart.c: 19:     while (TXIF == 0);
  2963                           
  2964     04CE  0020               	movlb	0	; select bank0
  2965     04CF  1E11               	btfss	17,4	;volatile
  2966     04D0  2CD2               	goto	u681
  2967     04D1  2CD3               	goto	u680
  2968     04D2                     u681:
  2969     04D2  2CCE               	goto	l234
  2970     04D3                     u680:
  2971     04D3                     l1321:
  2972                           
  2973                           ;tv_uart.c: 20:     TXREG = out;
  2974     04D3  0871               	movf	USART_TransmitChar@out,w
  2975     04D4  0023               	movlb	3	; select bank3
  2976     04D5  009A               	movwf	26	;volatile
  2977     04D6                     l237:
  2978     04D6  0008               	return
  2979     04D7                     __end_of_USART_TransmitChar:
  2980                           
  2981                           	psect	text9
  2982     04AB                     __ptext9:	
  2983 ;; *************** function _USART_Init *****************
  2984 ;; Defined at:
  2985 ;;		line 5 in file "tv_uart.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 2
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013     04AB                     _USART_Init:	
  3014                           ;psect for function _USART_Init
  3015                           
  3016     04AB                     l1409:	
  3017                           ;incstack = 0
  3018                           ; Regs used in _USART_Init: [wreg]
  3019                           
  3020                           
  3021                           ;tv_uart.c: 6:     TRISC4 = 0;
  3022     04AB  0021               	movlb	1	; select bank1
  3023     04AC  120E               	bcf	14,4	;volatile
  3024                           
  3025                           ;tv_uart.c: 7:     TRISC5 = 1;
  3026     04AD  168E               	bsf	14,5	;volatile
  3027                           
  3028                           ;tv_uart.c: 8:     SPBRG = 34;
  3029     04AE  3000               	movlw	0
  3030     04AF  0023               	movlb	3	; select bank3
  3031     04B0  009C               	movwf	28	;volatile
  3032     04B1  3022               	movlw	34
  3033     04B2  009B               	movwf	27	;volatile
  3034     04B3                     l1411:
  3035                           
  3036                           ;tv_uart.c: 9:     TXSTA = 0x20;
  3037     04B3  3020               	movlw	32
  3038     04B4  009E               	movwf	30	;volatile
  3039                           
  3040                           ;tv_uart.c: 10:     RCSTA = 0x90;
  3041     04B5  3090               	movlw	144
  3042     04B6  009D               	movwf	29	;volatile
  3043     04B7                     l1413:
  3044                           
  3045                           ;tv_uart.c: 11:     BRG16 = 1;
  3046     04B7  159F               	bsf	31,3	;volatile
  3047     04B8                     l1415:
  3048                           
  3049                           ;tv_uart.c: 12:     BRGH = 1;
  3050     04B8  151E               	bsf	30,2	;volatile
  3051     04B9                     l1417:
  3052                           
  3053                           ;tv_uart.c: 13:     INTCONbits.GIE = 1;
  3054     04B9  178B               	bsf	11,7	;volatile
  3055     04BA                     l1419:
  3056                           
  3057                           ;tv_uart.c: 14:     INTCONbits.PEIE = 1;
  3058     04BA  170B               	bsf	11,6	;volatile
  3059     04BB                     l1421:
  3060                           
  3061                           ;tv_uart.c: 15:     PIE1bits.RCIE = 1;
  3062     04BB  0021               	movlb	1	; select bank1
  3063     04BC  1691               	bsf	17,5	;volatile
  3064     04BD                     l231:
  3065     04BD  0008               	return
  3066     04BE                     __end_of_USART_Init:
  3067                           
  3068                           	psect	text10
  3069     04BE                     __ptext10:	
  3070 ;; *************** function _Cmd_Aht10 *****************
  3071 ;; Defined at:
  3072 ;;		line 4 in file "tv_aht10.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 3
  3093 ;; This function calls:
  3094 ;;		_i2c_start
  3095 ;;		_i2c_stop
  3096 ;;		_i2c_write
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102     04BE                     _Cmd_Aht10:	
  3103                           ;psect for function _Cmd_Aht10
  3104                           
  3105     04BE                     l1423:	
  3106                           ;incstack = 0
  3107                           ; Regs used in _Cmd_Aht10: [wreg+status,2+status,0+pclath+cstack]
  3108                           
  3109                           
  3110                           ;tv_aht10.c: 5:     i2c_start();
  3111     04BE  3184  24E0  3184   	fcall	_i2c_start
  3112     04C1                     l1425:
  3113                           
  3114                           ;tv_aht10.c: 6:     i2c_write(0x70);
  3115     04C1  3070               	movlw	112
  3116     04C2  3184  246D  3184   	fcall	_i2c_write
  3117     04C5                     l1427:
  3118                           
  3119                           ;tv_aht10.c: 7:     i2c_write(0xac);
  3120     04C5  30AC               	movlw	172
  3121     04C6  3184  246D  3184   	fcall	_i2c_write
  3122                           
  3123                           ;tv_aht10.c: 10:     i2c_stop();
  3124     04C9  3184  24D7  3184   	fcall	_i2c_stop
  3125     04CC                     l111:
  3126     04CC  0008               	return
  3127     04CD                     __end_of_Cmd_Aht10:
  3128                           
  3129                           	psect	text11
  3130     046D                     __ptext11:	
  3131 ;; *************** function _i2c_write *****************
  3132 ;; Defined at:
  3133 ;;		line 23 in file "tv_i2c.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  DATA            1    wreg     unsigned char 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  DATA            1    3[COMMON] unsigned char 
  3138 ;;  i               1    4[COMMON] unsigned char 
  3139 ;;  j               1    0        unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;Total ram usage:        4 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 2
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_read_temp
  3160 ;;		_Cmd_Aht10
  3161 ;;		_READ_T_H_AHT10
  3162 ;;		_SEND_TO_LCD_I2C
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166     046D                     _i2c_write:	
  3167                           ;psect for function _i2c_write
  3168                           
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  3172                           ;i2c_write@DATA stored from wreg
  3173     046D  00F3               	movwf	i2c_write@DATA
  3174     046E                     l1325:
  3175                           
  3176                           ;tv_i2c.c: 23: void i2c_write(unsigned char DATA);tv_i2c.c: 24: {;tv_i2c.c: 25:     unsi
      +                          gned char i,j;;tv_i2c.c: 26:     TRISC2=0;
  3177     046E  0021               	movlb	1	; select bank1
  3178     046F  110E               	bcf	14,2	;volatile
  3179                           
  3180                           ;tv_i2c.c: 27:     TRISC1=0;
  3181     0470  108E               	bcf	14,1	;volatile
  3182     0471                     l1327:
  3183                           
  3184                           ;tv_i2c.c: 28:     for(i=0;i<=8;i++)
  3185     0471  01F4               	clrf	i2c_write@i
  3186     0472                     l1333:
  3187                           
  3188                           ;tv_i2c.c: 29:     {;tv_i2c.c: 30:         if((DATA<<i) & 0x80) LATC2=1;
  3189     0472  0873               	movf	i2c_write@DATA,w
  3190     0473  00F1               	movwf	??_i2c_write
  3191     0474  01F2               	clrf	??_i2c_write+1
  3192     0475  0A74               	incf	i2c_write@i,w
  3193     0476  2C79               	goto	u694
  3194     0477                     u695:
  3195     0477  35F1               	lslf	??_i2c_write,f
  3196     0478  0DF2               	rlf	??_i2c_write+1,f
  3197     0479                     u694:
  3198     0479  0B89               	decfsz	9,f
  3199     047A  2C77               	goto	u695
  3200     047B  1FF1               	btfss	??_i2c_write,7
  3201     047C  2C7E               	goto	u701
  3202     047D  2C7F               	goto	u700
  3203     047E                     u701:
  3204     047E  2C82               	goto	l142
  3205     047F                     u700:
  3206     047F                     l1335:
  3207     047F  0022               	movlb	2	; select bank2
  3208     0480  150E               	bsf	14,2	;volatile
  3209     0481  2C84               	goto	l143
  3210     0482                     l142:	
  3211                           ;tv_i2c.c: 31:         else LATC2=0;
  3212                           
  3213     0482  0022               	movlb	2	; select bank2
  3214     0483  110E               	bcf	14,2	;volatile
  3215     0484                     l143:
  3216                           
  3217                           ;tv_i2c.c: 32:         LATC1=1;
  3218     0484  148E               	bsf	14,1	;volatile
  3219                           
  3220                           ;tv_i2c.c: 34:         _delay((unsigned long)((1)*(16000000/4000000.0)));
  3221     0485  3200               	nop2	;2 cycle nop
  3222     0486  3200               	nop2	;2 cycle nop
  3223                           
  3224                           ;tv_i2c.c: 35:         LATC1=0;
  3225     0487  0022               	movlb	2	; select bank2
  3226     0488  108E               	bcf	14,1	;volatile
  3227     0489                     l1337:
  3228                           
  3229                           ;tv_i2c.c: 36:     }
  3230     0489  3001               	movlw	1
  3231     048A  00F1               	movwf	??_i2c_write
  3232     048B  0871               	movf	??_i2c_write,w
  3233     048C  07F4               	addwf	i2c_write@i,f
  3234     048D                     l1339:
  3235     048D  3009               	movlw	9
  3236     048E  0274               	subwf	i2c_write@i,w
  3237     048F  1C03               	skipc
  3238     0490  2C92               	goto	u711
  3239     0491  2C93               	goto	u710
  3240     0492                     u711:
  3241     0492  2C72               	goto	l1333
  3242     0493                     u710:
  3243     0493                     l144:
  3244     0493  0008               	return
  3245     0494                     __end_of_i2c_write:
  3246                           
  3247                           	psect	text12
  3248     04D7                     __ptext12:	
  3249 ;; *************** function _i2c_stop *****************
  3250 ;; Defined at:
  3251 ;;		line 13 in file "tv_i2c.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		None
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 2
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_read_temp
  3276 ;;		_Cmd_Aht10
  3277 ;;		_READ_T_H_AHT10
  3278 ;;		_SEND_TO_LCD_I2C
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282     04D7                     _i2c_stop:	
  3283                           ;psect for function _i2c_stop
  3284                           
  3285     04D7                     l1367:	
  3286                           ;incstack = 0
  3287                           ; Regs used in _i2c_stop: []
  3288                           
  3289                           
  3290                           ;tv_i2c.c: 15:     TRISC2 = 0;
  3291     04D7  0021               	movlb	1	; select bank1
  3292     04D8  110E               	bcf	14,2	;volatile
  3293                           
  3294                           ;tv_i2c.c: 16:     TRISC1 = 0;
  3295     04D9  108E               	bcf	14,1	;volatile
  3296                           
  3297                           ;tv_i2c.c: 17:     LATC2 = 0;
  3298     04DA  0022               	movlb	2	; select bank2
  3299     04DB  110E               	bcf	14,2	;volatile
  3300                           
  3301                           ;tv_i2c.c: 18:     LATC1 = 0;
  3302     04DC  108E               	bcf	14,1	;volatile
  3303                           
  3304                           ;tv_i2c.c: 19:     LATC1 = 1;
  3305     04DD  148E               	bsf	14,1	;volatile
  3306                           
  3307                           ;tv_i2c.c: 20:     LATC2 = 1;
  3308     04DE  150E               	bsf	14,2	;volatile
  3309     04DF                     l137:
  3310     04DF  0008               	return
  3311     04E0                     __end_of_i2c_stop:
  3312                           
  3313                           	psect	text13
  3314     04E0                     __ptext13:	
  3315 ;; *************** function _i2c_start *****************
  3316 ;; Defined at:
  3317 ;;		line 3 in file "tv_i2c.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		None
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 2
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_read_temp
  3342 ;;		_Cmd_Aht10
  3343 ;;		_READ_T_H_AHT10
  3344 ;;		_SEND_TO_LCD_I2C
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348     04E0                     _i2c_start:	
  3349                           ;psect for function _i2c_start
  3350                           
  3351     04E0                     l1323:	
  3352                           ;incstack = 0
  3353                           ; Regs used in _i2c_start: []
  3354                           
  3355                           
  3356                           ;tv_i2c.c: 5:     TRISC2 = 0;
  3357     04E0  0021               	movlb	1	; select bank1
  3358     04E1  110E               	bcf	14,2	;volatile
  3359                           
  3360                           ;tv_i2c.c: 6:     TRISC1 = 0;
  3361     04E2  108E               	bcf	14,1	;volatile
  3362                           
  3363                           ;tv_i2c.c: 7:     LATC2 = 1;
  3364     04E3  0022               	movlb	2	; select bank2
  3365     04E4  150E               	bsf	14,2	;volatile
  3366                           
  3367                           ;tv_i2c.c: 8:     LATC1 = 1;
  3368     04E5  148E               	bsf	14,1	;volatile
  3369                           
  3370                           ;tv_i2c.c: 9:     LATC2 = 0;
  3371     04E6  110E               	bcf	14,2	;volatile
  3372                           
  3373                           ;tv_i2c.c: 10:     LATC1 = 0;
  3374     04E7  108E               	bcf	14,1	;volatile
  3375     04E8                     l134:
  3376     04E8  0008               	return
  3377     04E9                     __end_of_i2c_start:
  3378                           
  3379                           	psect	intentry
  3380     0004                     __pintentry:	
  3381 ;; *************** function _ngat_uart *****************
  3382 ;; Defined at:
  3383 ;;		line 107 in file "main.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;Total ram usage:        1 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 1
  3404 ;; This function calls:
  3405 ;;		_USART_ReceiveChar
  3406 ;; This function is called by:
  3407 ;;		Interrupt level 1
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411     0004                     _ngat_uart:
  3412                           
  3413                           ;incstack = 0
  3414     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3415                           
  3416                           ; Regs used in _ngat_uart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3417     0005  3180               	pagesel	$
  3418     0006                     i1l1633:
  3419                           
  3420                           ;main.c: 108:     byte_rx = USART_ReceiveChar();
  3421     0006  3184  24E9  3180   	fcall	_USART_ReceiveChar
  3422     0009  0020               	movlb	0	; select bank0
  3423     000A  00AE               	movwf	_byte_rx	;volatile
  3424     000B                     i1l1635:
  3425                           
  3426                           ;main.c: 109:     if (byte_rx == 'S') {
  3427     000B  3053               	movlw	83
  3428     000C  062E               	xorwf	_byte_rx,w	;volatile
  3429     000D  1D03               	btfss	3,2
  3430     000E  2810               	goto	u114_21
  3431     000F  2811               	goto	u114_20
  3432     0010                     u114_21:
  3433     0010  2814               	goto	i1l1641
  3434     0011                     u114_20:
  3435     0011                     i1l1637:
  3436                           
  3437                           ;main.c: 110:         ena_rx = 1;
  3438     0011  14FC               	bsf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3439     0012                     i1l1639:
  3440                           
  3441                           ;main.c: 111:         rx_index = 0;
  3442     0012  01AD               	clrf	_rx_index	;volatile
  3443                           
  3444                           ;main.c: 112:     } else if (byte_rx != 'P' && ena_rx == 1) {
  3445     0013  2843               	goto	i1l98
  3446     0014                     i1l1641:
  3447     0014  3050               	movlw	80
  3448     0015  062E               	xorwf	_byte_rx,w	;volatile
  3449     0016  1903               	btfsc	3,2
  3450     0017  2819               	goto	u115_21
  3451     0018  281A               	goto	u115_20
  3452     0019                     u115_21:
  3453     0019  2830               	goto	i1l1653
  3454     001A                     u115_20:
  3455     001A                     i1l1643:
  3456     001A  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3457     001B  281D               	goto	u116_21
  3458     001C  281E               	goto	u116_20
  3459     001D                     u116_21:
  3460     001D  2830               	goto	i1l1653
  3461     001E                     u116_20:
  3462     001E                     i1l1645:
  3463                           
  3464                           ;main.c: 113:         bf_rx[rx_index] = byte_rx;
  3465     001E  082D               	movf	_rx_index,w
  3466     001F  3E28               	addlw	(low (_bf_rx| 0))& (0+255)
  3467     0020  0086               	movwf	6
  3468     0021  0187               	clrf	7
  3469     0022  082E               	movf	_byte_rx,w	;volatile
  3470     0023  0081               	movwf	1
  3471     0024                     i1l1647:
  3472                           
  3473                           ;main.c: 114:         rx_index++;
  3474     0024  3001               	movlw	1
  3475     0025  00F0               	movwf	??_ngat_uart
  3476     0026  0870               	movf	??_ngat_uart,w
  3477     0027  07AD               	addwf	_rx_index,f	;volatile
  3478     0028                     i1l1649:
  3479                           
  3480                           ;main.c: 115:         if (rx_index > 1) ena_rx = 0;
  3481     0028  3002               	movlw	2
  3482     0029  022D               	subwf	_rx_index,w	;volatile
  3483     002A  1C03               	skipc
  3484     002B  282D               	goto	u117_21
  3485     002C  282E               	goto	u117_20
  3486     002D                     u117_21:
  3487     002D  2843               	goto	i1l98
  3488     002E                     u117_20:
  3489     002E                     i1l1651:
  3490     002E  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3491     002F  2843               	goto	i1l98
  3492     0030                     i1l1653:
  3493     0030  3050               	movlw	80
  3494     0031  062E               	xorwf	_byte_rx,w	;volatile
  3495     0032  1D03               	btfss	3,2
  3496     0033  2835               	goto	u118_21
  3497     0034  2836               	goto	u118_20
  3498     0035                     u118_21:
  3499     0035  2843               	goto	i1l98
  3500     0036                     u118_20:
  3501     0036                     i1l1655:
  3502     0036  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3503     0037  2839               	goto	u119_21
  3504     0038  283A               	goto	u119_20
  3505     0039                     u119_21:
  3506     0039  2843               	goto	i1l98
  3507     003A                     u119_20:
  3508     003A                     i1l1657:
  3509                           
  3510                           ;main.c: 117:         if (bf_rx[0] == '1') {
  3511     003A  3031               	movlw	49
  3512     003B  0628               	xorwf	_bf_rx,w
  3513     003C  1D03               	btfss	3,2
  3514     003D  283F               	goto	u120_21
  3515     003E  2840               	goto	u120_20
  3516     003F                     u120_21:
  3517     003F  2843               	goto	i1l95
  3518     0040                     u120_20:
  3519     0040                     i1l1659:
  3520                           
  3521                           ;main.c: 118:             ena_send = 1;
  3522     0040  147C               	bsf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  3523                           
  3524                           ;main.c: 119:             ena_rx = 0;
  3525     0041  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3526     0042  2843               	goto	i1l98
  3527     0043                     i1l95:
  3528     0043                     i1l98:
  3529     0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3530     0044  0009               	retfie
  3531     0045                     __end_of_ngat_uart:
  3532                           
  3533                           	psect	text15
  3534     04E9                     __ptext15:	
  3535 ;; *************** function _USART_ReceiveChar *****************
  3536 ;; Defined at:
  3537 ;;		line 29 in file "tv_uart.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      unsigned char 
  3544 ;; Registers used:
  3545 ;;		wreg
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_ngat_uart
  3561 ;;		_USART_ReceiveString
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565     04E9                     _USART_ReceiveChar:	
  3566                           ;psect for function _USART_ReceiveChar
  3567                           
  3568     04E9                     i1l1441:	
  3569                           ;incstack = 0
  3570                           ; Regs used in _USART_ReceiveChar: [wreg]
  3571                           
  3572     04E9                     i1l245:	
  3573                           ;tv_uart.c: 34:     };
  3574                           
  3575                           
  3576                           ;tv_uart.c: 33:     while (PIR1bits.RCIF == 0) {
  3577     04E9  0020               	movlb	0	; select bank0
  3578     04EA  1E91               	btfss	17,5	;volatile
  3579     04EB  2CED               	goto	u82_21
  3580     04EC  2CEE               	goto	u82_20
  3581     04ED                     u82_21:
  3582     04ED  2CE9               	goto	i1l245
  3583     04EE                     u82_20:
  3584     04EE                     i1l1443:
  3585                           
  3586                           ;tv_uart.c: 36:     return (RCREG);
  3587     04EE  0023               	movlb	3	; select bank3
  3588     04EF  0819               	movf	25,w	;volatile
  3589     04F0                     i1l248:
  3590     04F0  0008               	return
  3591     04F1                     __end_of_USART_ReceiveChar:
  3592     007E                     btemp	set	126	;btemp
  3593     007E                     int$flags	set	126
  3594     007E                     wtemp0	set	126
  3595                           
  3596                           	psect	config
  3597                           
  3598                           ;Config register CONFIG1 @ 0x8007
  3599                           ;	Oscillator Selection
  3600                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3601                           ;	Watchdog Timer Enable
  3602                           ;	WDTE = OFF, WDT disabled
  3603                           ;	Power-up Timer Enable
  3604                           ;	PWRTE = OFF, PWRT disabled
  3605                           ;	MCLR Pin Function Select
  3606                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3607                           ;	Flash Program Memory Code Protection
  3608                           ;	CP = OFF, Program memory code protection is disabled
  3609                           ;	Data Memory Code Protection
  3610                           ;	CPD = OFF, Data memory code protection is disabled
  3611                           ;	Brown-out Reset Enable
  3612                           ;	BOREN = OFF, Brown-out Reset disabled
  3613                           ;	Clock Out Enable
  3614                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3615                           ;	Internal/External Switchover
  3616                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3617                           ;	Fail-Safe Clock Monitor Enable
  3618                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3619     8007                     	org	32775
  3620     8007  09A4               	dw	2468
  3621                           
  3622                           ;Config register CONFIG2 @ 0x8008
  3623                           ;	Flash Memory Self-Write Protection
  3624                           ;	WRT = OFF, Write protection off
  3625                           ;	PLL Enable
  3626                           ;	PLLEN = OFF, 4x PLL disabled
  3627                           ;	Stack Overflow/Underflow Reset Enable
  3628                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  3629                           ;	Brown-out Reset Voltage Selection
  3630                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3631                           ;	Low-Voltage Programming Enable
  3632                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3633     8008                     	org	32776
  3634     8008  1CFF               	dw	7423

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         36
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     26      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USART_TransmitString@out	PTR unsigned char  size(1) Largest target is 20
		 -> bf_tx(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->___llmod
    _read_temp->_i2c_read
    _read_temp->_i2c_write
    ___lwmod->___lwdiv
    ___llmod->___lldiv
    _USART_TransmitString->_USART_TransmitChar
    _Cmd_Aht10->_i2c_write

Critical Paths under _ngat_uart in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_temp
    ___llmod->___lldiv

Critical Paths under _ngat_uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ngat_uart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ngat_uart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ngat_uart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ngat_uart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ngat_uart in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ngat_uart in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ngat_uart in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ngat_uart in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ngat_uart in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ngat_uart in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ngat_uart in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ngat_uart in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5338
                                             24 BANK0      2     2      0
                          _Cmd_Aht10
                         _USART_Init
               _USART_TransmitString
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                          _read_temp
 ---------------------------------------------------------------------------------
 (1) _read_temp                                           28    24      4     364
                                              5 COMMON     4     0      4
                                              0 BANK0     24    24      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             4     4      0     136
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1672
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1074
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8    1071
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     922
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USART_TransmitString                                 3     3      0     145
                                              2 COMMON     3     3      0
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Cmd_Aht10                                            0     0      0      90
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            5     5      0      90
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ngat_uart                                            1     1      0       0
                                              0 COMMON     1     1      0
                  _USART_ReceiveChar
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cmd_Aht10
     _i2c_start
     _i2c_stop
     _i2c_write
   _USART_Init
   _USART_TransmitString
     _USART_TransmitChar
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _read_temp
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write

 _ngat_uart (ROOT)
   _USART_ReceiveChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 20 00:00:18 2024

                          l70 0318                            l71 0321                           l111 04CC  
                         l134 04E8                           l142 0482                           l143 0484  
                         l231 04BD                           l151 0467                           l144 0493  
                         l152 0469                           l137 04DF                           l153 046C  
                         l234 04CE                           l242 04AA                           l147 0441  
                         l148 045D                           l237 04D6                           l445 037C  
                         l639 03C7                           l689 0403                           l699 0438  
                         u700 047F                           u701 047E                           u710 0493  
                         u711 0492                           u720 0448                           u800 030F  
                         u721 0447                           u801 030E                           u810 04AA  
                         u730 045D                           u811 04A9                           u731 045C  
                         u900 0374                           u740 0464                           u901 0373  
                         u741 0463                           u910 0386                           u911 0385  
                         u680 04D3                           u840 0333                           u681 04D2  
                         u841 0332                           u930 0398                           u770 02C2  
                         u931 0397                           u860 0345                           u940 03AA  
                         u780 02D5                           u861 0344                           u941 03A9  
                         u925 038A                           u694 0479                           u790 02F8  
                         u695 0477                           u855 0337                           u791 02F7  
                         u775 02BE                           u880 035E                           u960 03BF  
                         u881 035D                           u961 03BE                           u945 03A6  
                         u785 02D1                           u970 03D0                           u875 0346  
                         u955 03B3                           u971 03CF                           u885 035A  
                         u990 03E0                           u895 0368                           u991 03DF  
                         u985 03D4                           _mp2 005E                           _mq2 002B  
                         wreg 0009                          l1321 04D3                          l1401 02F8  
                        l1323 04E0                          l1411 04B3                          l1403 0301  
                        l1333 0472                          l1325 046E                          l1421 04BB  
                        l1413 04B7                          l1501 03CA                          l1341 043A  
                        l1405 030F                          l1335 047F                          l1327 0471  
                        l1423 04BE                          l1415 04B8                          l1319 04CE  
                        l1511 03E0                          l1503 03D0                          l1351 044B  
                        l1343 0440                          l1337 0489                          l1425 04C1  
                        l1417 04B9                          l1409 04AB                          l1513 03EF  
                        l1505 03D3                          l1521 03FF                          l1361 0464  
                        l1353 044D                          l1339 048D                          l1427 04C5  
                        l1419 04BA                          l1435 0496                          l1515 03F3  
                        l1507 03D8                          l1363 046B                          l1355 044F  
                        l1437 04A0                          l1429 0495                          l1461 0341  
                        l1517 03F4                          l1509 03DC                          l1357 0453  
                        l1349 0448                          l1381 026D                          l1367 04D7  
                        l1439 04A4                          l1471 0367                          l1463 0345  
                        l1455 0322                          l1519 03F9                          l1359 045F  
                        l1391 028F                          l1383 0271                          l1473 036E  
                        l1465 034C                          l1457 0333                          l1481 0386  
                        l1393 02A0                          l1385 0275                          l1801 00C7  
                        l1467 035E                          l1459 0336                          l1475 0374  
                        l1491 03B2                          l1483 0389                          l1395 02B1  
                        l1387 0279                          l1379 026A                          l1811 011D  
                        l1803 00D6                          l1469 0366                          l1493 03B9  
                        l1485 0394                          l1397 02B4                          l1389 027D  
                        l1821 01E0                          l1813 0148                          l1805 00D9  
                        l1487 0398                          l1495 03BF                          l1479 037D  
                        l1751 040E                          l1399 02EB                          l1831 01FE  
                        l1823 01E3                          l1815 0173                          l1807 00E6  
                        l1489 03AA                          l1761 0429                          l1753 0413  
                        l1841 0262                          l1833 0219                          l1825 01E7  
                        l1817 019E                          l1809 00F2                          l1499 03C8  
                        l1763 042E                          l1755 0417                          l1747 0404  
                        l1843 0263                          l1835 0234                          l1827 01E9  
                        l1819 01C9                          l1771 005B                          l1757 041B  
                        l1749 040B                          l1765 0434                          l1837 024F  
                        l1829 01F6                          l1781 0064                          l1773 005C  
                        l1759 0425                          l1839 025E                          l1791 0070  
                        l1783 0067                          l1775 005E                          l1793 0072  
                        l1785 006A                          l1777 0060                          l1769 0058  
                        l1795 0076                          l1787 006C                          l1779 0062  
                        l1797 0091                          l1789 006E                          l1799 00AC  
                        _BRGH 0CF2                          u1010 03EF                          u1011 03EE  
                        u1005 03E1                          u1030 03FF                          u1031 03FE  
                        u1015 03EB                          u1025 03F5                          u1400 0434  
                        u1401 0433                          u1410 0262                          u1411 0261  
                        u1350 040B                          u1351 040A                          u1370 041B  
                        u1371 041A                          u1427 00DF                          u1380 0425  
                        u1381 0424                          u1365 040F                          u1437 01E4  
                        u1447 01EF                          u1385 0421                          u1457 0450  
                        u1395 042A                          i1l95 0043                          i1l98 0043  
                        _TXIF 008C                          _main 0058                          _temp 0020  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                          start 0045                    i2c_write@i 0074  
                 i2c_read@ACK 0072                         ?_main 0070                         _ADRES 009B  
                       _BRG16 0CFB               __end_of___lldiv 037D               __end_of___llmod 03C8  
                       _LATC1 0871                         _LATC2 0872               __end_of___lwdiv 0404  
                       i1l245 04E9                         i1l248 04F0               __end_of___lwmod 0439  
                       _RCREG 0199                         _RCSTA 019D                         _SPBRG 019B  
                       u82_20 04EE                         u82_21 04ED                         _TXREG 019A  
                       _TXSTA 019E                         _bf_rx 0028                         _bf_tx 0030  
        _USART_TransmitString 0494                __pbitbssCOMMON 03E0                         status 0003  
                       wtemp0 007E                   ?_USART_Init 0070               __initialization 0047  
                __end_of_main 026A              __end_of_i2c_read 046D              __end_of_i2c_stop 04E0  
                      ??_main 005C                  i2c_read@DATA 0074                        _ADCON0 009D  
                      _ADCON1 009E         ?_USART_TransmitString 0070              ___llmod@dividend 004D  
                      u120_20 0040                        i1l1441 04E9                        u120_21 003F  
                      i1l1443 04EE                        i1l1641 0014                        i1l1633 0006  
                      i1l1651 002E                        i1l1643 001A                        i1l1635 000B  
                      i1l1645 001E                        i1l1653 0030                        i1l1637 0011  
                      i1l1655 0036                        i1l1647 0024                        i1l1639 0012  
                      u114_20 0011                        i1l1657 003A                        i1l1649 0028  
                      u114_21 0010                        i1l1659 0040                        u115_20 001A  
                      u115_21 0019                        u116_20 001E                        u116_21 001D  
                      u117_20 002E                        u117_21 002D                        u118_20 0036  
                      u118_21 0035                        u119_20 003A                        u119_21 0039  
                      _OSCCON 0099                        _TRISC1 0471                        _TRISC2 0472  
                      _TRISC4 0474                        _TRISC5 0475                     ??___lldiv 0079  
                   ??___llmod 007A                        _ena_rx 03E1                     ??___lwdiv 0075  
                   ??___lwmod 0079    __end_of_USART_TransmitChar 04D7             __end_of_Cmd_Aht10 04CD  
     __end_of__initialization 0054                __pcstackCOMMON 0070                  __pidataBANK0 04F7  
           __end_of_i2c_start 04E9             __end_of_i2c_write 0494       USART_TransmitString@out 0073  
      ??_USART_TransmitString 0072                    __pbssBANK0 0020                     ?_i2c_read 0070  
                   ?_i2c_stop 0070                    __pmaintext 0058                    __pintentry 0004  
                  ??_i2c_read 0071                    ??_i2c_stop 0071                  ??_USART_Init 0071  
                     ___lldiv 0322                       ___llmod 037D                       ___lwdiv 03C8  
                     ___lwmod 0404                       __ptext1 026A                       __ptext2 0439  
                     __ptext3 0404                       __ptext4 03C8                       __ptext5 037D  
                     __ptext6 0322                       __ptext7 0494                       __ptext8 04CD  
                     __ptext9 04AB             __end_of_ngat_uart 0045                       _byte_rx 002E  
           __end_of_read_temp 0322            __end_of_USART_Init 04BE                       clrloop0 04F2  
        end_of_initialization 0054               ___lldiv@divisor 0071               ___lldiv@counter 0048  
                   _PORTCbits 000E                 i2c_write@DATA 0073                  read_temp@dt1 004C  
                read_temp@dt2 0050                  read_temp@dt3 0054                     _TRISAbits 008C  
                   _TRISCbits 008E         USART_TransmitChar@out 0071                     _Cmd_Aht10 04BE  
                   i2c_read@i 0073            _USART_TransmitChar 04CD           ?_USART_TransmitChar 0070  
         start_initialization 0047                     _i2c_start 04E0                     _i2c_write 046D  
        ??_USART_TransmitChar 0071         USART_TransmitString@i 0074                    ?_Cmd_Aht10 0070  
             ___llmod@divisor 0049               ___llmod@counter 007B             _USART_ReceiveChar 04E9  
          ?_USART_ReceiveChar 0070                   __pdataBANK0 0060           ??_USART_ReceiveChar 0070  
                   ___latbits 0002                 __pcstackBANK0 0044                    ?_i2c_start 0070  
                  ?_i2c_write 0070     __end_of_USART_ReceiveChar 04F1                     __pnvBANK0 005E  
            ___lwdiv@dividend 0073                      ?___lldiv 0071                      ?___llmod 0049  
                    ?___lwdiv 0071                      ?___lwmod 0044              ___lwdiv@quotient 0076  
                   _ngat_uart 0004                     _read_temp 026A                   ??_Cmd_Aht10 0075  
                    _LATAbits 010C                      _LATCbits 010E                     clear_ram0 04F1  
                    _PIE1bits 0091                      _PIR1bits 0011                    _ADCON0bits 009D  
                 ??_i2c_start 0071                   ??_i2c_write 0071                    ?_ngat_uart 0070  
                  ?_read_temp 0075                      _i2c_read 0439                      _i2c_stop 04D7  
               _LCD_BACKLIGHT 0060                    _ANSELCbits 018E               ___lwdiv@divisor 0071  
             ___lwdiv@counter 0078                      __ptext10 04BE                      __ptext11 046D  
                    __ptext12 04D7                      __ptext13 04E0                      __ptext15 04E9  
                    _ena_send 03E0                      _temp_glo 0024                      int$flags 007E  
                    _rx_index 002D                    _INTCONbits 000B                   ??_ngat_uart 0070  
                 ??_read_temp 0044                      intlevel1 0000              ___lwmod@dividend 0046  
            ___lldiv@dividend 0075  __end_of_USART_TransmitString 04AB              ___lldiv@quotient 0044  
             ___lwmod@divisor 0044               ___lwmod@counter 007A                 read_temp@temp 0058  
                 _printf_mode 002F                    _USART_Init 04AB  
