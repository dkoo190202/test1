

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun 21 05:41:44 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1825
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1825 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000E                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     010E                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     011A                     	;# 
   122     011B                     	;# 
   123     011D                     	;# 
   124     011E                     	;# 
   125     018C                     	;# 
   126     018E                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0194                     	;# 
   134     0195                     	;# 
   135     0196                     	;# 
   136     0199                     	;# 
   137     019A                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019C                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019F                     	;# 
   144     020C                     	;# 
   145     020E                     	;# 
   146     0211                     	;# 
   147     0211                     	;# 
   148     0212                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0213                     	;# 
   152     0214                     	;# 
   153     0214                     	;# 
   154     0215                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0216                     	;# 
   158     0216                     	;# 
   159     0217                     	;# 
   160     0217                     	;# 
   161     0291                     	;# 
   162     0291                     	;# 
   163     0292                     	;# 
   164     0293                     	;# 
   165     0294                     	;# 
   166     0295                     	;# 
   167     0295                     	;# 
   168     0296                     	;# 
   169     0298                     	;# 
   170     0298                     	;# 
   171     0299                     	;# 
   172     029A                     	;# 
   173     029B                     	;# 
   174     029C                     	;# 
   175     029D                     	;# 
   176     029E                     	;# 
   177     0311                     	;# 
   178     0311                     	;# 
   179     0312                     	;# 
   180     0313                     	;# 
   181     0318                     	;# 
   182     0318                     	;# 
   183     0319                     	;# 
   184     031A                     	;# 
   185     038C                     	;# 
   186     038E                     	;# 
   187     0391                     	;# 
   188     0392                     	;# 
   189     0393                     	;# 
   190     039A                     	;# 
   191     039C                     	;# 
   192     039D                     	;# 
   193     039E                     	;# 
   194     039F                     	;# 
   195     0415                     	;# 
   196     0416                     	;# 
   197     0417                     	;# 
   198     041C                     	;# 
   199     041D                     	;# 
   200     041E                     	;# 
   201     0FE4                     	;# 
   202     0FE5                     	;# 
   203     0FE6                     	;# 
   204     0FE7                     	;# 
   205     0FE8                     	;# 
   206     0FE9                     	;# 
   207     0FEA                     	;# 
   208     0FEB                     	;# 
   209     0FED                     	;# 
   210     0FEE                     	;# 
   211     0FEF                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000E                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0015                     	;# 
   230     0016                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001C                     	;# 
   238     001E                     	;# 
   239     001F                     	;# 
   240     008C                     	;# 
   241     008E                     	;# 
   242     0091                     	;# 
   243     0092                     	;# 
   244     0093                     	;# 
   245     0095                     	;# 
   246     0096                     	;# 
   247     0097                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009A                     	;# 
   251     009B                     	;# 
   252     009B                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     010C                     	;# 
   257     010E                     	;# 
   258     0111                     	;# 
   259     0112                     	;# 
   260     0113                     	;# 
   261     0114                     	;# 
   262     0115                     	;# 
   263     0116                     	;# 
   264     0117                     	;# 
   265     0118                     	;# 
   266     0119                     	;# 
   267     011A                     	;# 
   268     011B                     	;# 
   269     011D                     	;# 
   270     011E                     	;# 
   271     018C                     	;# 
   272     018E                     	;# 
   273     0191                     	;# 
   274     0191                     	;# 
   275     0192                     	;# 
   276     0193                     	;# 
   277     0193                     	;# 
   278     0193                     	;# 
   279     0194                     	;# 
   280     0195                     	;# 
   281     0196                     	;# 
   282     0199                     	;# 
   283     019A                     	;# 
   284     019B                     	;# 
   285     019B                     	;# 
   286     019C                     	;# 
   287     019D                     	;# 
   288     019E                     	;# 
   289     019F                     	;# 
   290     020C                     	;# 
   291     020E                     	;# 
   292     0211                     	;# 
   293     0211                     	;# 
   294     0212                     	;# 
   295     0212                     	;# 
   296     0213                     	;# 
   297     0213                     	;# 
   298     0214                     	;# 
   299     0214                     	;# 
   300     0215                     	;# 
   301     0215                     	;# 
   302     0215                     	;# 
   303     0216                     	;# 
   304     0216                     	;# 
   305     0217                     	;# 
   306     0217                     	;# 
   307     0291                     	;# 
   308     0291                     	;# 
   309     0292                     	;# 
   310     0293                     	;# 
   311     0294                     	;# 
   312     0295                     	;# 
   313     0295                     	;# 
   314     0296                     	;# 
   315     0298                     	;# 
   316     0298                     	;# 
   317     0299                     	;# 
   318     029A                     	;# 
   319     029B                     	;# 
   320     029C                     	;# 
   321     029D                     	;# 
   322     029E                     	;# 
   323     0311                     	;# 
   324     0311                     	;# 
   325     0312                     	;# 
   326     0313                     	;# 
   327     0318                     	;# 
   328     0318                     	;# 
   329     0319                     	;# 
   330     031A                     	;# 
   331     038C                     	;# 
   332     038E                     	;# 
   333     0391                     	;# 
   334     0392                     	;# 
   335     0393                     	;# 
   336     039A                     	;# 
   337     039C                     	;# 
   338     039D                     	;# 
   339     039E                     	;# 
   340     039F                     	;# 
   341     0415                     	;# 
   342     0416                     	;# 
   343     0417                     	;# 
   344     041C                     	;# 
   345     041D                     	;# 
   346     041E                     	;# 
   347     0FE4                     	;# 
   348     0FE5                     	;# 
   349     0FE6                     	;# 
   350     0FE7                     	;# 
   351     0FE8                     	;# 
   352     0FE9                     	;# 
   353     0FEA                     	;# 
   354     0FEB                     	;# 
   355     0FED                     	;# 
   356     0FEE                     	;# 
   357     0FEF                     	;# 
   358     0000                     	;# 
   359     0001                     	;# 
   360     0002                     	;# 
   361     0003                     	;# 
   362     0004                     	;# 
   363     0005                     	;# 
   364     0006                     	;# 
   365     0007                     	;# 
   366     0008                     	;# 
   367     0009                     	;# 
   368     000A                     	;# 
   369     000B                     	;# 
   370     000C                     	;# 
   371     000E                     	;# 
   372     0011                     	;# 
   373     0012                     	;# 
   374     0013                     	;# 
   375     0015                     	;# 
   376     0016                     	;# 
   377     0016                     	;# 
   378     0017                     	;# 
   379     0018                     	;# 
   380     0019                     	;# 
   381     001A                     	;# 
   382     001B                     	;# 
   383     001C                     	;# 
   384     001E                     	;# 
   385     001F                     	;# 
   386     008C                     	;# 
   387     008E                     	;# 
   388     0091                     	;# 
   389     0092                     	;# 
   390     0093                     	;# 
   391     0095                     	;# 
   392     0096                     	;# 
   393     0097                     	;# 
   394     0098                     	;# 
   395     0099                     	;# 
   396     009A                     	;# 
   397     009B                     	;# 
   398     009B                     	;# 
   399     009C                     	;# 
   400     009D                     	;# 
   401     009E                     	;# 
   402     010C                     	;# 
   403     010E                     	;# 
   404     0111                     	;# 
   405     0112                     	;# 
   406     0113                     	;# 
   407     0114                     	;# 
   408     0115                     	;# 
   409     0116                     	;# 
   410     0117                     	;# 
   411     0118                     	;# 
   412     0119                     	;# 
   413     011A                     	;# 
   414     011B                     	;# 
   415     011D                     	;# 
   416     011E                     	;# 
   417     018C                     	;# 
   418     018E                     	;# 
   419     0191                     	;# 
   420     0191                     	;# 
   421     0192                     	;# 
   422     0193                     	;# 
   423     0193                     	;# 
   424     0193                     	;# 
   425     0194                     	;# 
   426     0195                     	;# 
   427     0196                     	;# 
   428     0199                     	;# 
   429     019A                     	;# 
   430     019B                     	;# 
   431     019B                     	;# 
   432     019C                     	;# 
   433     019D                     	;# 
   434     019E                     	;# 
   435     019F                     	;# 
   436     020C                     	;# 
   437     020E                     	;# 
   438     0211                     	;# 
   439     0211                     	;# 
   440     0212                     	;# 
   441     0212                     	;# 
   442     0213                     	;# 
   443     0213                     	;# 
   444     0214                     	;# 
   445     0214                     	;# 
   446     0215                     	;# 
   447     0215                     	;# 
   448     0215                     	;# 
   449     0216                     	;# 
   450     0216                     	;# 
   451     0217                     	;# 
   452     0217                     	;# 
   453     0291                     	;# 
   454     0291                     	;# 
   455     0292                     	;# 
   456     0293                     	;# 
   457     0294                     	;# 
   458     0295                     	;# 
   459     0295                     	;# 
   460     0296                     	;# 
   461     0298                     	;# 
   462     0298                     	;# 
   463     0299                     	;# 
   464     029A                     	;# 
   465     029B                     	;# 
   466     029C                     	;# 
   467     029D                     	;# 
   468     029E                     	;# 
   469     0311                     	;# 
   470     0311                     	;# 
   471     0312                     	;# 
   472     0313                     	;# 
   473     0318                     	;# 
   474     0318                     	;# 
   475     0319                     	;# 
   476     031A                     	;# 
   477     038C                     	;# 
   478     038E                     	;# 
   479     0391                     	;# 
   480     0392                     	;# 
   481     0393                     	;# 
   482     039A                     	;# 
   483     039C                     	;# 
   484     039D                     	;# 
   485     039E                     	;# 
   486     039F                     	;# 
   487     0415                     	;# 
   488     0416                     	;# 
   489     0417                     	;# 
   490     041C                     	;# 
   491     041D                     	;# 
   492     041E                     	;# 
   493     0FE4                     	;# 
   494     0FE5                     	;# 
   495     0FE6                     	;# 
   496     0FE7                     	;# 
   497     0FE8                     	;# 
   498     0FE9                     	;# 
   499     0FEA                     	;# 
   500     0FEB                     	;# 
   501     0FED                     	;# 
   502     0FEE                     	;# 
   503     0FEF                     	;# 
   504     0000                     	;# 
   505     0001                     	;# 
   506     0002                     	;# 
   507     0003                     	;# 
   508     0004                     	;# 
   509     0005                     	;# 
   510     0006                     	;# 
   511     0007                     	;# 
   512     0008                     	;# 
   513     0009                     	;# 
   514     000A                     	;# 
   515     000B                     	;# 
   516     000C                     	;# 
   517     000E                     	;# 
   518     0011                     	;# 
   519     0012                     	;# 
   520     0013                     	;# 
   521     0015                     	;# 
   522     0016                     	;# 
   523     0016                     	;# 
   524     0017                     	;# 
   525     0018                     	;# 
   526     0019                     	;# 
   527     001A                     	;# 
   528     001B                     	;# 
   529     001C                     	;# 
   530     001E                     	;# 
   531     001F                     	;# 
   532     008C                     	;# 
   533     008E                     	;# 
   534     0091                     	;# 
   535     0092                     	;# 
   536     0093                     	;# 
   537     0095                     	;# 
   538     0096                     	;# 
   539     0097                     	;# 
   540     0098                     	;# 
   541     0099                     	;# 
   542     009A                     	;# 
   543     009B                     	;# 
   544     009B                     	;# 
   545     009C                     	;# 
   546     009D                     	;# 
   547     009E                     	;# 
   548     010C                     	;# 
   549     010E                     	;# 
   550     0111                     	;# 
   551     0112                     	;# 
   552     0113                     	;# 
   553     0114                     	;# 
   554     0115                     	;# 
   555     0116                     	;# 
   556     0117                     	;# 
   557     0118                     	;# 
   558     0119                     	;# 
   559     011A                     	;# 
   560     011B                     	;# 
   561     011D                     	;# 
   562     011E                     	;# 
   563     018C                     	;# 
   564     018E                     	;# 
   565     0191                     	;# 
   566     0191                     	;# 
   567     0192                     	;# 
   568     0193                     	;# 
   569     0193                     	;# 
   570     0193                     	;# 
   571     0194                     	;# 
   572     0195                     	;# 
   573     0196                     	;# 
   574     0199                     	;# 
   575     019A                     	;# 
   576     019B                     	;# 
   577     019B                     	;# 
   578     019C                     	;# 
   579     019D                     	;# 
   580     019E                     	;# 
   581     019F                     	;# 
   582     020C                     	;# 
   583     020E                     	;# 
   584     0211                     	;# 
   585     0211                     	;# 
   586     0212                     	;# 
   587     0212                     	;# 
   588     0213                     	;# 
   589     0213                     	;# 
   590     0214                     	;# 
   591     0214                     	;# 
   592     0215                     	;# 
   593     0215                     	;# 
   594     0215                     	;# 
   595     0216                     	;# 
   596     0216                     	;# 
   597     0217                     	;# 
   598     0217                     	;# 
   599     0291                     	;# 
   600     0291                     	;# 
   601     0292                     	;# 
   602     0293                     	;# 
   603     0294                     	;# 
   604     0295                     	;# 
   605     0295                     	;# 
   606     0296                     	;# 
   607     0298                     	;# 
   608     0298                     	;# 
   609     0299                     	;# 
   610     029A                     	;# 
   611     029B                     	;# 
   612     029C                     	;# 
   613     029D                     	;# 
   614     029E                     	;# 
   615     0311                     	;# 
   616     0311                     	;# 
   617     0312                     	;# 
   618     0313                     	;# 
   619     0318                     	;# 
   620     0318                     	;# 
   621     0319                     	;# 
   622     031A                     	;# 
   623     038C                     	;# 
   624     038E                     	;# 
   625     0391                     	;# 
   626     0392                     	;# 
   627     0393                     	;# 
   628     039A                     	;# 
   629     039C                     	;# 
   630     039D                     	;# 
   631     039E                     	;# 
   632     039F                     	;# 
   633     0415                     	;# 
   634     0416                     	;# 
   635     0417                     	;# 
   636     041C                     	;# 
   637     041D                     	;# 
   638     041E                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     000E                     	;# 
   664     0011                     	;# 
   665     0012                     	;# 
   666     0013                     	;# 
   667     0015                     	;# 
   668     0016                     	;# 
   669     0016                     	;# 
   670     0017                     	;# 
   671     0018                     	;# 
   672     0019                     	;# 
   673     001A                     	;# 
   674     001B                     	;# 
   675     001C                     	;# 
   676     001E                     	;# 
   677     001F                     	;# 
   678     008C                     	;# 
   679     008E                     	;# 
   680     0091                     	;# 
   681     0092                     	;# 
   682     0093                     	;# 
   683     0095                     	;# 
   684     0096                     	;# 
   685     0097                     	;# 
   686     0098                     	;# 
   687     0099                     	;# 
   688     009A                     	;# 
   689     009B                     	;# 
   690     009B                     	;# 
   691     009C                     	;# 
   692     009D                     	;# 
   693     009E                     	;# 
   694     010C                     	;# 
   695     010E                     	;# 
   696     0111                     	;# 
   697     0112                     	;# 
   698     0113                     	;# 
   699     0114                     	;# 
   700     0115                     	;# 
   701     0116                     	;# 
   702     0117                     	;# 
   703     0118                     	;# 
   704     0119                     	;# 
   705     011A                     	;# 
   706     011B                     	;# 
   707     011D                     	;# 
   708     011E                     	;# 
   709     018C                     	;# 
   710     018E                     	;# 
   711     0191                     	;# 
   712     0191                     	;# 
   713     0192                     	;# 
   714     0193                     	;# 
   715     0193                     	;# 
   716     0193                     	;# 
   717     0194                     	;# 
   718     0195                     	;# 
   719     0196                     	;# 
   720     0199                     	;# 
   721     019A                     	;# 
   722     019B                     	;# 
   723     019B                     	;# 
   724     019C                     	;# 
   725     019D                     	;# 
   726     019E                     	;# 
   727     019F                     	;# 
   728     020C                     	;# 
   729     020E                     	;# 
   730     0211                     	;# 
   731     0211                     	;# 
   732     0212                     	;# 
   733     0212                     	;# 
   734     0213                     	;# 
   735     0213                     	;# 
   736     0214                     	;# 
   737     0214                     	;# 
   738     0215                     	;# 
   739     0215                     	;# 
   740     0215                     	;# 
   741     0216                     	;# 
   742     0216                     	;# 
   743     0217                     	;# 
   744     0217                     	;# 
   745     0291                     	;# 
   746     0291                     	;# 
   747     0292                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0295                     	;# 
   752     0296                     	;# 
   753     0298                     	;# 
   754     0298                     	;# 
   755     0299                     	;# 
   756     029A                     	;# 
   757     029B                     	;# 
   758     029C                     	;# 
   759     029D                     	;# 
   760     029E                     	;# 
   761     0311                     	;# 
   762     0311                     	;# 
   763     0312                     	;# 
   764     0313                     	;# 
   765     0318                     	;# 
   766     0318                     	;# 
   767     0319                     	;# 
   768     031A                     	;# 
   769     038C                     	;# 
   770     038E                     	;# 
   771     0391                     	;# 
   772     0392                     	;# 
   773     0393                     	;# 
   774     039A                     	;# 
   775     039C                     	;# 
   776     039D                     	;# 
   777     039E                     	;# 
   778     039F                     	;# 
   779     0415                     	;# 
   780     0416                     	;# 
   781     0417                     	;# 
   782     041C                     	;# 
   783     041D                     	;# 
   784     041E                     	;# 
   785     0FE4                     	;# 
   786     0FE5                     	;# 
   787     0FE6                     	;# 
   788     0FE7                     	;# 
   789     0FE8                     	;# 
   790     0FE9                     	;# 
   791     0FEA                     	;# 
   792     0FEB                     	;# 
   793     0FED                     	;# 
   794     0FEE                     	;# 
   795     0FEF                     	;# 
   796     0000                     	;# 
   797     0001                     	;# 
   798     0002                     	;# 
   799     0003                     	;# 
   800     0004                     	;# 
   801     0005                     	;# 
   802     0006                     	;# 
   803     0007                     	;# 
   804     0008                     	;# 
   805     0009                     	;# 
   806     000A                     	;# 
   807     000B                     	;# 
   808     000C                     	;# 
   809     000E                     	;# 
   810     0011                     	;# 
   811     0012                     	;# 
   812     0013                     	;# 
   813     0015                     	;# 
   814     0016                     	;# 
   815     0016                     	;# 
   816     0017                     	;# 
   817     0018                     	;# 
   818     0019                     	;# 
   819     001A                     	;# 
   820     001B                     	;# 
   821     001C                     	;# 
   822     001E                     	;# 
   823     001F                     	;# 
   824     008C                     	;# 
   825     008E                     	;# 
   826     0091                     	;# 
   827     0092                     	;# 
   828     0093                     	;# 
   829     0095                     	;# 
   830     0096                     	;# 
   831     0097                     	;# 
   832     0098                     	;# 
   833     0099                     	;# 
   834     009A                     	;# 
   835     009B                     	;# 
   836     009B                     	;# 
   837     009C                     	;# 
   838     009D                     	;# 
   839     009E                     	;# 
   840     010C                     	;# 
   841     010E                     	;# 
   842     0111                     	;# 
   843     0112                     	;# 
   844     0113                     	;# 
   845     0114                     	;# 
   846     0115                     	;# 
   847     0116                     	;# 
   848     0117                     	;# 
   849     0118                     	;# 
   850     0119                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011D                     	;# 
   854     011E                     	;# 
   855     018C                     	;# 
   856     018E                     	;# 
   857     0191                     	;# 
   858     0191                     	;# 
   859     0192                     	;# 
   860     0193                     	;# 
   861     0193                     	;# 
   862     0193                     	;# 
   863     0194                     	;# 
   864     0195                     	;# 
   865     0196                     	;# 
   866     0199                     	;# 
   867     019A                     	;# 
   868     019B                     	;# 
   869     019B                     	;# 
   870     019C                     	;# 
   871     019D                     	;# 
   872     019E                     	;# 
   873     019F                     	;# 
   874     020C                     	;# 
   875     020E                     	;# 
   876     0211                     	;# 
   877     0211                     	;# 
   878     0212                     	;# 
   879     0212                     	;# 
   880     0213                     	;# 
   881     0213                     	;# 
   882     0214                     	;# 
   883     0214                     	;# 
   884     0215                     	;# 
   885     0215                     	;# 
   886     0215                     	;# 
   887     0216                     	;# 
   888     0216                     	;# 
   889     0217                     	;# 
   890     0217                     	;# 
   891     0291                     	;# 
   892     0291                     	;# 
   893     0292                     	;# 
   894     0293                     	;# 
   895     0294                     	;# 
   896     0295                     	;# 
   897     0295                     	;# 
   898     0296                     	;# 
   899     0298                     	;# 
   900     0298                     	;# 
   901     0299                     	;# 
   902     029A                     	;# 
   903     029B                     	;# 
   904     029C                     	;# 
   905     029D                     	;# 
   906     029E                     	;# 
   907     0311                     	;# 
   908     0311                     	;# 
   909     0312                     	;# 
   910     0313                     	;# 
   911     0318                     	;# 
   912     0318                     	;# 
   913     0319                     	;# 
   914     031A                     	;# 
   915     038C                     	;# 
   916     038E                     	;# 
   917     0391                     	;# 
   918     0392                     	;# 
   919     0393                     	;# 
   920     039A                     	;# 
   921     039C                     	;# 
   922     039D                     	;# 
   923     039E                     	;# 
   924     039F                     	;# 
   925     0415                     	;# 
   926     0416                     	;# 
   927     0417                     	;# 
   928     041C                     	;# 
   929     041D                     	;# 
   930     041E                     	;# 
   931     0FE4                     	;# 
   932     0FE5                     	;# 
   933     0FE6                     	;# 
   934     0FE7                     	;# 
   935     0FE8                     	;# 
   936     0FE9                     	;# 
   937     0FEA                     	;# 
   938     0FEB                     	;# 
   939     0FED                     	;# 
   940     0FEE                     	;# 
   941     0FEF                     	;# 
   942                           
   943                           	psect	idataBANK0
   944     0533                     __pidataBANK0:
   945                           
   946                           ;initializer for _LCD_BACKLIGHT
   947     0533  3408               	retlw	8
   948                           
   949                           	psect	nvBANK0
   950     005E                     __pnvBANK0:
   951     005E                     _mp2:
   952     005E                     	ds	2
   953     0011                     _PIR1bits	set	17
   954     000B                     _INTCONbits	set	11
   955     000E                     _PORTCbits	set	14
   956     008C                     _TXIF	set	140
   957     009B                     _ADRES	set	155
   958     0091                     _PIE1bits	set	145
   959     009D                     _ADCON0bits	set	157
   960     009D                     _ADCON0	set	157
   961     009E                     _ADCON1	set	158
   962     008E                     _TRISCbits	set	142
   963     008C                     _TRISAbits	set	140
   964     0099                     _OSCCON	set	153
   965     0475                     _TRISC5	set	1141
   966     0474                     _TRISC4	set	1140
   967     0471                     _TRISC1	set	1137
   968     0472                     _TRISC2	set	1138
   969     010E                     _LATCbits	set	270
   970     010C                     _LATAbits	set	268
   971     0871                     _LATC1	set	2161
   972     0872                     _LATC2	set	2162
   973     019B                     _SPBRG	set	411
   974     0199                     _RCREG	set	409
   975     019A                     _TXREG	set	410
   976     019D                     _RCSTA	set	413
   977     019E                     _TXSTA	set	414
   978     018C                     _ANSELAbits	set	396
   979     018E                     _ANSELCbits	set	398
   980     0CF2                     _BRGH	set	3314
   981     0CFB                     _BRG16	set	3323
   982                           
   983                           	psect	cinit
   984     0047                     start_initialization:	
   985                           ; #config settings
   986                           
   987     0047                     __initialization:
   988                           
   989                           ; Initialize objects allocated to BANK0
   990     0047  3185  2533  3180   	fcall	__pidataBANK0	;fetch initializer
   991     004A  00E0               	movwf	__pdataBANK0& (0+127)
   992                           
   993                           ; Clear objects allocated to BITCOMMON
   994     004B  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK0
   997     004C  3020               	movlw	low __pbssBANK0
   998     004D  0084               	movwf	4
   999     004E  3000               	movlw	high __pbssBANK0
  1000     004F  0085               	movwf	5
  1001     0050  3024               	movlw	36
  1002     0051  3185  252D  3180   	fcall	clear_ram0
  1003     0054                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006     0054                     __end_of__initialization:
  1007     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1008     0055  0020               	movlb	0
  1009     0056  3180  2858         	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bitbssCOMMON
  1012     03E0                     __pbitbssCOMMON:
  1013     03E0                     _ena_send:
  1014     03E0                     	ds	1
  1015     03E1                     _ena_rx:
  1016     03E1                     	ds	1
  1017                           
  1018                           	psect	bssBANK0
  1019     0020                     __pbssBANK0:
  1020     0020                     _temp:
  1021     0020                     	ds	4
  1022     0024                     _temp_glo:
  1023     0024                     	ds	4
  1024     0028                     _bf_rx:
  1025     0028                     	ds	3
  1026     002B                     _mq2:
  1027     002B                     	ds	2
  1028     002D                     _rx_index:
  1029     002D                     	ds	1
  1030     002E                     _byte_rx:
  1031     002E                     	ds	1
  1032     002F                     _printf_mode:
  1033     002F                     	ds	1
  1034     0030                     _bf_tx:
  1035     0030                     	ds	20
  1036                           
  1037                           	psect	dataBANK0
  1038     0060                     __pdataBANK0:
  1039     0060                     _LCD_BACKLIGHT:
  1040     0060                     	ds	1
  1041                           
  1042                           	psect	clrtext
  1043     052D                     clear_ram0:	
  1044                           ;	Called with FSR0 containing the base address, and
  1045                           ;	WREG with the size to clear
  1046                           
  1047     052D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1048     052E                     clrloop0:
  1049     052E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1050     052F  3101               	addfsr 0,1
  1051     0530  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1052     0531  2D2E               	goto	clrloop0	;have we reached the end yet?
  1053     0532  3400               	retlw	0	;all done for this memory range, return
  1054                           
  1055                           	psect	cstackCOMMON
  1056     0070                     __pcstackCOMMON:
  1057     0070                     ?_USART_TransmitChar:
  1058     0070                     ?_i2c_start:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061     0070                     ?_i2c_write:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064     0070                     ?_i2c_read:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067     0070                     ?_i2c_stop:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070     0070                     ?_USART_Init:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073     0070                     ?_Cmd_Aht10:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076     0070                     ?_USART_TransmitString:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079     0070                     ?_USART_ReceiveChar:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0070                     ??_USART_ReceiveChar:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0070                     ?_main:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0070                     ?_ngat_uart:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091     0070                     ??_ngat_uart:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x0
  1096     0070                     	ds	1
  1097     0071                     ??_USART_TransmitChar:
  1098     0071                     ??_i2c_start:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101     0071                     ??_i2c_write:	
  1102                           ; 1 bytes @ 0x1
  1103                           
  1104     0071                     ??_i2c_read:	
  1105                           ; 1 bytes @ 0x1
  1106                           
  1107     0071                     ??_i2c_stop:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110     0071                     ??_USART_Init:	
  1111                           ; 1 bytes @ 0x1
  1112                           
  1113     0071                     ?___lwdiv:	
  1114                           ; 1 bytes @ 0x1
  1115                           
  1116     0071                     ?___lldiv:	
  1117                           ; 2 bytes @ 0x1
  1118                           
  1119     0071                     USART_TransmitChar@out:	
  1120                           ; 4 bytes @ 0x1
  1121                           
  1122     0071                     ___lwdiv@divisor:	
  1123                           ; 1 bytes @ 0x1
  1124                           
  1125     0071                     ___lldiv@divisor:	
  1126                           ; 2 bytes @ 0x1
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x1
  1130     0071                     	ds	1
  1131     0072                     ??_USART_TransmitString:
  1132     0072                     i2c_read@ACK:	
  1133                           ; 1 bytes @ 0x2
  1134                           
  1135                           
  1136                           ; 1 bytes @ 0x2
  1137     0072                     	ds	1
  1138     0073                     i2c_write@DATA:
  1139     0073                     i2c_read@i:	
  1140                           ; 1 bytes @ 0x3
  1141                           
  1142     0073                     USART_TransmitString@out:	
  1143                           ; 1 bytes @ 0x3
  1144                           
  1145     0073                     ___lwdiv@dividend:	
  1146                           ; 1 bytes @ 0x3
  1147                           
  1148                           
  1149                           ; 2 bytes @ 0x3
  1150     0073                     	ds	1
  1151     0074                     i2c_write@i:
  1152     0074                     i2c_read@DATA:	
  1153                           ; 1 bytes @ 0x4
  1154                           
  1155     0074                     USART_TransmitString@i:	
  1156                           ; 1 bytes @ 0x4
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0x4
  1160     0074                     	ds	1
  1161     0075                     ??_Cmd_Aht10:
  1162     0075                     ??___lwdiv:	
  1163                           ; 1 bytes @ 0x5
  1164                           
  1165     0075                     ?_read_temp:	
  1166                           ; 1 bytes @ 0x5
  1167                           
  1168     0075                     ___lldiv@dividend:	
  1169                           ; 4 bytes @ 0x5
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x5
  1173     0075                     	ds	1
  1174     0076                     ___lwdiv@quotient:
  1175                           
  1176                           ; 2 bytes @ 0x6
  1177     0076                     	ds	2
  1178     0078                     ___lwdiv@counter:
  1179                           
  1180                           ; 1 bytes @ 0x8
  1181     0078                     	ds	1
  1182     0079                     ??___lldiv:
  1183     0079                     ??___lwmod:	
  1184                           ; 1 bytes @ 0x9
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x9
  1188     0079                     	ds	1
  1189     007A                     ??___llmod:
  1190     007A                     ___lwmod@counter:	
  1191                           ; 1 bytes @ 0xA
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0xA
  1195     007A                     	ds	1
  1196     007B                     ___llmod@counter:
  1197                           
  1198                           ; 1 bytes @ 0xB
  1199     007B                     	ds	1
  1200                           
  1201                           	psect	cstackBANK0
  1202     0044                     __pcstackBANK0:
  1203     0044                     ??_read_temp:
  1204     0044                     ?___lwmod:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207     0044                     ___lwmod@divisor:	
  1208                           ; 2 bytes @ 0x0
  1209                           
  1210     0044                     ___lldiv@quotient:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x0
  1215     0044                     	ds	2
  1216     0046                     ___lwmod@dividend:
  1217                           
  1218                           ; 2 bytes @ 0x2
  1219     0046                     	ds	2
  1220     0048                     ___lldiv@counter:
  1221                           
  1222                           ; 1 bytes @ 0x4
  1223     0048                     	ds	1
  1224     0049                     ?___llmod:
  1225     0049                     ___llmod@divisor:	
  1226                           ; 4 bytes @ 0x5
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0x5
  1230     0049                     	ds	3
  1231     004C                     read_temp@dt1:
  1232                           
  1233                           ; 4 bytes @ 0x8
  1234     004C                     	ds	1
  1235     004D                     ___llmod@dividend:
  1236                           
  1237                           ; 4 bytes @ 0x9
  1238     004D                     	ds	3
  1239     0050                     read_temp@dt2:
  1240                           
  1241                           ; 4 bytes @ 0xC
  1242     0050                     	ds	4
  1243     0054                     read_temp@dt3:
  1244                           
  1245                           ; 4 bytes @ 0x10
  1246     0054                     	ds	4
  1247     0058                     read_temp@temp:
  1248                           
  1249                           ; 4 bytes @ 0x14
  1250     0058                     	ds	4
  1251     005C                     ??_main:
  1252                           
  1253                           ; 1 bytes @ 0x18
  1254     005C                     	ds	2
  1255                           
  1256                           	psect	maintext
  1257     0058                     __pmaintext:	
  1258 ;;
  1259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1260 ;;
  1261 ;; *************** function _main *****************
  1262 ;; Defined at:
  1263 ;;		line 47 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : B1F/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;Total ram usage:        2 bytes
  1282 ;; Hardware stack levels required when called: 4
  1283 ;; This function calls:
  1284 ;;		_Cmd_Aht10
  1285 ;;		_USART_Init
  1286 ;;		_USART_TransmitString
  1287 ;;		___lldiv
  1288 ;;		___llmod
  1289 ;;		___lwdiv
  1290 ;;		___lwmod
  1291 ;;		_read_temp
  1292 ;; This function is called by:
  1293 ;;		Startup code after reset
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297     0058                     _main:	
  1298                           ;psect for function _main
  1299                           
  1300     0058                     l1786:	
  1301                           ;incstack = 0
  1302                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1303                           
  1304                           
  1305                           ;main.c: 48:     OSCCON = 0X7f;
  1306     0058  307F               	movlw	127
  1307     0059  0021               	movlb	1	; select bank1
  1308     005A  0099               	movwf	25	;volatile
  1309     005B                     l1788:
  1310                           
  1311                           ;main.c: 50:     TRISAbits.TRISA4 = 0;
  1312     005B  120C               	bcf	12,4	;volatile
  1313     005C                     l1790:
  1314                           
  1315                           ;main.c: 51:     LATAbits.LATA4 = 0;
  1316     005C  0022               	movlb	2	; select bank2
  1317     005D  120C               	bcf	12,4	;volatile
  1318     005E                     l1792:
  1319                           
  1320                           ;main.c: 53:     TRISCbits.TRISC3 = 0;
  1321     005E  0021               	movlb	1	; select bank1
  1322     005F  118E               	bcf	14,3	;volatile
  1323     0060                     l1794:
  1324                           
  1325                           ;main.c: 54:     LATCbits.LATC3 = 0;
  1326     0060  0022               	movlb	2	; select bank2
  1327     0061  118E               	bcf	14,3	;volatile
  1328     0062                     l1796:
  1329                           
  1330                           ;main.c: 56:     ANSELCbits.ANSC2 = 0;
  1331     0062  0023               	movlb	3	; select bank3
  1332     0063  110E               	bcf	14,2	;volatile
  1333     0064                     l1798:
  1334                           
  1335                           ;main.c: 58:     TRISAbits.TRISA2 = 1;
  1336     0064  0021               	movlb	1	; select bank1
  1337     0065  150C               	bsf	12,2	;volatile
  1338     0066                     l1800:
  1339                           
  1340                           ;main.c: 59:     ANSELAbits.ANSA2 = 1;
  1341     0066  0023               	movlb	3	; select bank3
  1342     0067  150C               	bsf	12,2	;volatile
  1343     0068                     l1802:
  1344                           
  1345                           ;main.c: 64:     USART_Init();
  1346     0068  3184  24E7  3180   	fcall	_USART_Init
  1347     006B                     l1804:
  1348                           
  1349                           ;main.c: 66:     ADCON1 = 0X80;
  1350     006B  3080               	movlw	128
  1351     006C  0021               	movlb	1	; select bank1
  1352     006D  009E               	movwf	30	;volatile
  1353     006E                     l1806:
  1354                           
  1355                           ;main.c: 68:     printf_mode = 0;
  1356     006E  0020               	movlb	0	; select bank0
  1357     006F  01AF               	clrf	_printf_mode
  1358     0070                     l1808:
  1359                           
  1360                           ;main.c: 69:     bf_tx[0] = 'S';
  1361     0070  3053               	movlw	83
  1362     0071  00B0               	movwf	_bf_tx
  1363     0072                     l1810:
  1364                           
  1365                           ;main.c: 70:     bf_tx[1] = 1;
  1366     0072  01B1               	clrf	_bf_tx+1
  1367     0073  0AB1               	incf	_bf_tx+1,f
  1368     0074                     l1812:
  1369                           
  1370                           ;main.c: 71:     bf_tx[16] = 'P';
  1371     0074  3050               	movlw	80
  1372     0075  00C0               	movwf	_bf_tx+16
  1373     0076                     l1814:
  1374                           
  1375                           ;main.c: 72:     mp2 = 1111;
  1376     0076  3057               	movlw	87
  1377     0077  00DE               	movwf	_mp2
  1378     0078  3004               	movlw	4
  1379     0079  00DF               	movwf	_mp2+1
  1380     007A                     l1816:
  1381                           
  1382                           ;main.c: 73:     bf_tx[12] = (unsigned char) (mp2 / 1000 % 10 + 48);
  1383     007A  300A               	movlw	10
  1384     007B  00C4               	movwf	___lwmod@divisor
  1385     007C  3000               	movlw	0
  1386     007D  00C5               	movwf	___lwmod@divisor+1
  1387     007E  30E8               	movlw	232
  1388     007F  00F1               	movwf	___lwdiv@divisor
  1389     0080  3003               	movlw	3
  1390     0081  00F2               	movwf	___lwdiv@divisor+1
  1391     0082  3057               	movlw	87
  1392     0083  00F3               	movwf	___lwdiv@dividend
  1393     0084  3004               	movlw	4
  1394     0085  00F4               	movwf	___lwdiv@dividend+1
  1395     0086  3184  2404  3180   	fcall	___lwdiv
  1396     0089  0872               	movf	?___lwdiv+1,w
  1397     008A  0020               	movlb	0	; select bank0
  1398     008B  00C7               	movwf	___lwmod@dividend+1
  1399     008C  0871               	movf	?___lwdiv,w
  1400     008D  00C6               	movwf	___lwmod@dividend
  1401     008E  3184  2440  3180   	fcall	___lwmod
  1402     0091  0020               	movlb	0	; select bank0
  1403     0092  0844               	movf	?___lwmod,w
  1404     0093  3E30               	addlw	48
  1405     0094  00BC               	movwf	_bf_tx+12
  1406     0095                     l1818:
  1407                           
  1408                           ;main.c: 74:     bf_tx[13] = (unsigned char) (mp2 / 100 % 10 + 48);
  1409     0095  300A               	movlw	10
  1410     0096  00C4               	movwf	___lwmod@divisor
  1411     0097  3000               	movlw	0
  1412     0098  00C5               	movwf	___lwmod@divisor+1
  1413     0099  3064               	movlw	100
  1414     009A  00F1               	movwf	___lwdiv@divisor
  1415     009B  3000               	movlw	0
  1416     009C  00F2               	movwf	___lwdiv@divisor+1
  1417     009D  3057               	movlw	87
  1418     009E  00F3               	movwf	___lwdiv@dividend
  1419     009F  3004               	movlw	4
  1420     00A0  00F4               	movwf	___lwdiv@dividend+1
  1421     00A1  3184  2404  3180   	fcall	___lwdiv
  1422     00A4  0872               	movf	?___lwdiv+1,w
  1423     00A5  0020               	movlb	0	; select bank0
  1424     00A6  00C7               	movwf	___lwmod@dividend+1
  1425     00A7  0871               	movf	?___lwdiv,w
  1426     00A8  00C6               	movwf	___lwmod@dividend
  1427     00A9  3184  2440  3180   	fcall	___lwmod
  1428     00AC  0020               	movlb	0	; select bank0
  1429     00AD  0844               	movf	?___lwmod,w
  1430     00AE  3E30               	addlw	48
  1431     00AF  00BD               	movwf	_bf_tx+13
  1432     00B0                     l1820:
  1433                           
  1434                           ;main.c: 75:     bf_tx[14] = (unsigned char) (mp2 / 10 % 10 + 48);
  1435     00B0  300A               	movlw	10
  1436     00B1  00C4               	movwf	___lwmod@divisor
  1437     00B2  3000               	movlw	0
  1438     00B3  00C5               	movwf	___lwmod@divisor+1
  1439     00B4  300A               	movlw	10
  1440     00B5  00F1               	movwf	___lwdiv@divisor
  1441     00B6  3000               	movlw	0
  1442     00B7  00F2               	movwf	___lwdiv@divisor+1
  1443     00B8  3057               	movlw	87
  1444     00B9  00F3               	movwf	___lwdiv@dividend
  1445     00BA  3004               	movlw	4
  1446     00BB  00F4               	movwf	___lwdiv@dividend+1
  1447     00BC  3184  2404  3180   	fcall	___lwdiv
  1448     00BF  0872               	movf	?___lwdiv+1,w
  1449     00C0  0020               	movlb	0	; select bank0
  1450     00C1  00C7               	movwf	___lwmod@dividend+1
  1451     00C2  0871               	movf	?___lwdiv,w
  1452     00C3  00C6               	movwf	___lwmod@dividend
  1453     00C4  3184  2440  3180   	fcall	___lwmod
  1454     00C7  0020               	movlb	0	; select bank0
  1455     00C8  0844               	movf	?___lwmod,w
  1456     00C9  3E30               	addlw	48
  1457     00CA  00BE               	movwf	_bf_tx+14
  1458     00CB                     l1822:
  1459                           
  1460                           ;main.c: 76:     bf_tx[15] = (unsigned char) (mp2 / 1 % 10 + 48);
  1461     00CB  300A               	movlw	10
  1462     00CC  00C4               	movwf	___lwmod@divisor
  1463     00CD  3000               	movlw	0
  1464     00CE  00C5               	movwf	___lwmod@divisor+1
  1465     00CF  3057               	movlw	87
  1466     00D0  00C6               	movwf	___lwmod@dividend
  1467     00D1  3004               	movlw	4
  1468     00D2  00C7               	movwf	___lwmod@dividend+1
  1469     00D3  3184  2440  3180   	fcall	___lwmod
  1470     00D6  0020               	movlb	0	; select bank0
  1471     00D7  0844               	movf	?___lwmod,w
  1472     00D8  3E30               	addlw	48
  1473     00D9  00BF               	movwf	_bf_tx+15
  1474                           
  1475                           ;main.c: 78:     while (temp <= 314573 || temp >= 781189) {
  1476     00DA  28F7               	goto	l1830
  1477     00DB                     l1824:
  1478                           
  1479                           ;main.c: 79:         Cmd_Aht10();
  1480     00DB  3184  24FA  3180   	fcall	_Cmd_Aht10
  1481     00DE                     l1826:
  1482                           
  1483                           ;main.c: 80:         _delay((unsigned long)((80)*(16000000/4000.0)));
  1484     00DE  3002               	movlw	2
  1485     00DF  0020               	movlb	0	; select bank0
  1486     00E0  00DD               	movwf	??_main+1
  1487     00E1  30A0               	movlw	160
  1488     00E2  00DC               	movwf	??_main
  1489     00E3  3092               	movlw	146
  1490     00E4                     u1487:
  1491     00E4  0B89               	decfsz	9,f
  1492     00E5  28E4               	goto	u1487
  1493     00E6  0BDC               	decfsz	??_main,f
  1494     00E7  28E4               	goto	u1487
  1495     00E8  0BDD               	decfsz	??_main+1,f
  1496     00E9  28E4               	goto	u1487
  1497     00EA  0000               	nop
  1498     00EB                     l1828:
  1499                           
  1500                           ;main.c: 81:         temp = read_temp();
  1501     00EB  3182  22A6  3180   	fcall	_read_temp
  1502     00EE  0878               	movf	?_read_temp+3,w
  1503     00EF  0020               	movlb	0	; select bank0
  1504     00F0  00A3               	movwf	_temp+3
  1505     00F1  0877               	movf	?_read_temp+2,w
  1506     00F2  00A2               	movwf	_temp+2
  1507     00F3  0876               	movf	?_read_temp+1,w
  1508     00F4  00A1               	movwf	_temp+1
  1509     00F5  0875               	movf	?_read_temp,w
  1510     00F6  00A0               	movwf	_temp
  1511     00F7                     l1830:
  1512                           
  1513                           ;main.c: 78:     while (temp <= 314573 || temp >= 781189) {
  1514     00F7  0823               	movf	_temp+3,w
  1515     00F8  1D03               	btfss	3,2
  1516     00F9  2904               	goto	u1450
  1517     00FA  30CE               	movlw	206
  1518     00FB  0220               	subwf	_temp,w
  1519     00FC  30CC               	movlw	204
  1520     00FD  3B21               	subwfb	_temp+1,w
  1521     00FE  3004               	movlw	4
  1522     00FF  3B22               	subwfb	_temp+2,w
  1523     0100  1C03               	btfss	3,0
  1524     0101  2903               	goto	u1451
  1525     0102  2904               	goto	u1450
  1526     0103                     u1451:
  1527     0103  28DB               	goto	l1824
  1528     0104                     u1450:
  1529     0104                     l1832:
  1530     0104  0020               	movlb	0	; select bank0
  1531     0105  0823               	movf	_temp+3,w
  1532     0106  1D03               	btfss	3,2
  1533     0107  2911               	goto	u1461
  1534     0108  3085               	movlw	133
  1535     0109  0220               	subwf	_temp,w
  1536     010A  30EB               	movlw	235
  1537     010B  3B21               	subwfb	_temp+1,w
  1538     010C  300B               	movlw	11
  1539     010D  3B22               	subwfb	_temp+2,w
  1540     010E  1803               	btfsc	3,0
  1541     010F  2911               	goto	u1461
  1542     0110  2912               	goto	u1460
  1543     0111                     u1461:
  1544     0111  28DB               	goto	l1824
  1545     0112                     u1460:
  1546     0112                     l1834:
  1547                           
  1548                           ;main.c: 86:         Cmd_Aht10();
  1549     0112  3184  24FA  3180   	fcall	_Cmd_Aht10
  1550     0115                     l1836:
  1551                           
  1552                           ;main.c: 87:         _delay((unsigned long)((80)*(16000000/4000.0)));
  1553     0115  3002               	movlw	2
  1554     0116  0020               	movlb	0	; select bank0
  1555     0117  00DD               	movwf	??_main+1
  1556     0118  30A0               	movlw	160
  1557     0119  00DC               	movwf	??_main
  1558     011A  3092               	movlw	146
  1559     011B                     u1497:
  1560     011B  0B89               	decfsz	9,f
  1561     011C  291B               	goto	u1497
  1562     011D  0BDC               	decfsz	??_main,f
  1563     011E  291B               	goto	u1497
  1564     011F  0BDD               	decfsz	??_main+1,f
  1565     0120  291B               	goto	u1497
  1566     0121  0000               	nop
  1567     0122                     l1838:
  1568                           
  1569                           ;main.c: 88:         temp = read_temp();
  1570     0122  3182  22A6  3180   	fcall	_read_temp
  1571     0125  0878               	movf	?_read_temp+3,w
  1572     0126  0020               	movlb	0	; select bank0
  1573     0127  00A3               	movwf	_temp+3
  1574     0128  0877               	movf	?_read_temp+2,w
  1575     0129  00A2               	movwf	_temp+2
  1576     012A  0876               	movf	?_read_temp+1,w
  1577     012B  00A1               	movwf	_temp+1
  1578     012C  0875               	movf	?_read_temp,w
  1579     012D  00A0               	movwf	_temp
  1580     012E                     l1840:
  1581                           
  1582                           ;main.c: 89:         bf_tx[2] = (unsigned char) (temp / 100000 % 10 + 48);
  1583     012E  3000               	movlw	0
  1584     012F  00CC               	movwf	___llmod@divisor+3
  1585     0130  3000               	movlw	0
  1586     0131  00CB               	movwf	___llmod@divisor+2
  1587     0132  3000               	movlw	0
  1588     0133  00CA               	movwf	___llmod@divisor+1
  1589     0134  300A               	movlw	10
  1590     0135  00C9               	movwf	___llmod@divisor
  1591     0136  3000               	movlw	0
  1592     0137  00F4               	movwf	___lldiv@divisor+3
  1593     0138  3001               	movlw	1
  1594     0139  00F3               	movwf	___lldiv@divisor+2
  1595     013A  3086               	movlw	134
  1596     013B  00F2               	movwf	___lldiv@divisor+1
  1597     013C  30A0               	movlw	160
  1598     013D  00F1               	movwf	___lldiv@divisor
  1599     013E  0823               	movf	_temp+3,w
  1600     013F  00F8               	movwf	___lldiv@dividend+3
  1601     0140  0822               	movf	_temp+2,w
  1602     0141  00F7               	movwf	___lldiv@dividend+2
  1603     0142  0821               	movf	_temp+1,w
  1604     0143  00F6               	movwf	___lldiv@dividend+1
  1605     0144  0820               	movf	_temp,w
  1606     0145  00F5               	movwf	___lldiv@dividend
  1607     0146  3183  235E  3180   	fcall	___lldiv
  1608     0149  0874               	movf	?___lldiv+3,w
  1609     014A  0020               	movlb	0	; select bank0
  1610     014B  00D0               	movwf	___llmod@dividend+3
  1611     014C  0873               	movf	?___lldiv+2,w
  1612     014D  00CF               	movwf	___llmod@dividend+2
  1613     014E  0872               	movf	?___lldiv+1,w
  1614     014F  00CE               	movwf	___llmod@dividend+1
  1615     0150  0871               	movf	?___lldiv,w
  1616     0151  00CD               	movwf	___llmod@dividend
  1617     0152  3183  23B9  3180   	fcall	___llmod
  1618     0155  0020               	movlb	0	; select bank0
  1619     0156  0849               	movf	?___llmod,w
  1620     0157  3E30               	addlw	48
  1621     0158  00B2               	movwf	_bf_tx+2
  1622     0159                     l1842:
  1623                           
  1624                           ;main.c: 90:         bf_tx[3] = (unsigned char) (temp / 10000 % 10 + 48);
  1625     0159  3000               	movlw	0
  1626     015A  00CC               	movwf	___llmod@divisor+3
  1627     015B  3000               	movlw	0
  1628     015C  00CB               	movwf	___llmod@divisor+2
  1629     015D  3000               	movlw	0
  1630     015E  00CA               	movwf	___llmod@divisor+1
  1631     015F  300A               	movlw	10
  1632     0160  00C9               	movwf	___llmod@divisor
  1633     0161  3000               	movlw	0
  1634     0162  00F4               	movwf	___lldiv@divisor+3
  1635     0163  3000               	movlw	0
  1636     0164  00F3               	movwf	___lldiv@divisor+2
  1637     0165  3027               	movlw	39
  1638     0166  00F2               	movwf	___lldiv@divisor+1
  1639     0167  3010               	movlw	16
  1640     0168  00F1               	movwf	___lldiv@divisor
  1641     0169  0823               	movf	_temp+3,w
  1642     016A  00F8               	movwf	___lldiv@dividend+3
  1643     016B  0822               	movf	_temp+2,w
  1644     016C  00F7               	movwf	___lldiv@dividend+2
  1645     016D  0821               	movf	_temp+1,w
  1646     016E  00F6               	movwf	___lldiv@dividend+1
  1647     016F  0820               	movf	_temp,w
  1648     0170  00F5               	movwf	___lldiv@dividend
  1649     0171  3183  235E  3180   	fcall	___lldiv
  1650     0174  0874               	movf	?___lldiv+3,w
  1651     0175  0020               	movlb	0	; select bank0
  1652     0176  00D0               	movwf	___llmod@dividend+3
  1653     0177  0873               	movf	?___lldiv+2,w
  1654     0178  00CF               	movwf	___llmod@dividend+2
  1655     0179  0872               	movf	?___lldiv+1,w
  1656     017A  00CE               	movwf	___llmod@dividend+1
  1657     017B  0871               	movf	?___lldiv,w
  1658     017C  00CD               	movwf	___llmod@dividend
  1659     017D  3183  23B9  3180   	fcall	___llmod
  1660     0180  0020               	movlb	0	; select bank0
  1661     0181  0849               	movf	?___llmod,w
  1662     0182  3E30               	addlw	48
  1663     0183  00B3               	movwf	_bf_tx+3
  1664     0184                     l1844:
  1665                           
  1666                           ;main.c: 91:         bf_tx[4] = (unsigned char) (temp / 1000 % 10 + 48);
  1667     0184  3000               	movlw	0
  1668     0185  00CC               	movwf	___llmod@divisor+3
  1669     0186  3000               	movlw	0
  1670     0187  00CB               	movwf	___llmod@divisor+2
  1671     0188  3000               	movlw	0
  1672     0189  00CA               	movwf	___llmod@divisor+1
  1673     018A  300A               	movlw	10
  1674     018B  00C9               	movwf	___llmod@divisor
  1675     018C  3000               	movlw	0
  1676     018D  00F4               	movwf	___lldiv@divisor+3
  1677     018E  3000               	movlw	0
  1678     018F  00F3               	movwf	___lldiv@divisor+2
  1679     0190  3003               	movlw	3
  1680     0191  00F2               	movwf	___lldiv@divisor+1
  1681     0192  30E8               	movlw	232
  1682     0193  00F1               	movwf	___lldiv@divisor
  1683     0194  0823               	movf	_temp+3,w
  1684     0195  00F8               	movwf	___lldiv@dividend+3
  1685     0196  0822               	movf	_temp+2,w
  1686     0197  00F7               	movwf	___lldiv@dividend+2
  1687     0198  0821               	movf	_temp+1,w
  1688     0199  00F6               	movwf	___lldiv@dividend+1
  1689     019A  0820               	movf	_temp,w
  1690     019B  00F5               	movwf	___lldiv@dividend
  1691     019C  3183  235E  3180   	fcall	___lldiv
  1692     019F  0874               	movf	?___lldiv+3,w
  1693     01A0  0020               	movlb	0	; select bank0
  1694     01A1  00D0               	movwf	___llmod@dividend+3
  1695     01A2  0873               	movf	?___lldiv+2,w
  1696     01A3  00CF               	movwf	___llmod@dividend+2
  1697     01A4  0872               	movf	?___lldiv+1,w
  1698     01A5  00CE               	movwf	___llmod@dividend+1
  1699     01A6  0871               	movf	?___lldiv,w
  1700     01A7  00CD               	movwf	___llmod@dividend
  1701     01A8  3183  23B9  3180   	fcall	___llmod
  1702     01AB  0020               	movlb	0	; select bank0
  1703     01AC  0849               	movf	?___llmod,w
  1704     01AD  3E30               	addlw	48
  1705     01AE  00B4               	movwf	_bf_tx+4
  1706     01AF                     l1846:
  1707                           
  1708                           ;main.c: 92:         bf_tx[5] = (unsigned char) (temp / 100 % 10 + 48);
  1709     01AF  3000               	movlw	0
  1710     01B0  00CC               	movwf	___llmod@divisor+3
  1711     01B1  3000               	movlw	0
  1712     01B2  00CB               	movwf	___llmod@divisor+2
  1713     01B3  3000               	movlw	0
  1714     01B4  00CA               	movwf	___llmod@divisor+1
  1715     01B5  300A               	movlw	10
  1716     01B6  00C9               	movwf	___llmod@divisor
  1717     01B7  3000               	movlw	0
  1718     01B8  00F4               	movwf	___lldiv@divisor+3
  1719     01B9  3000               	movlw	0
  1720     01BA  00F3               	movwf	___lldiv@divisor+2
  1721     01BB  3000               	movlw	0
  1722     01BC  00F2               	movwf	___lldiv@divisor+1
  1723     01BD  3064               	movlw	100
  1724     01BE  00F1               	movwf	___lldiv@divisor
  1725     01BF  0823               	movf	_temp+3,w
  1726     01C0  00F8               	movwf	___lldiv@dividend+3
  1727     01C1  0822               	movf	_temp+2,w
  1728     01C2  00F7               	movwf	___lldiv@dividend+2
  1729     01C3  0821               	movf	_temp+1,w
  1730     01C4  00F6               	movwf	___lldiv@dividend+1
  1731     01C5  0820               	movf	_temp,w
  1732     01C6  00F5               	movwf	___lldiv@dividend
  1733     01C7  3183  235E  3180   	fcall	___lldiv
  1734     01CA  0874               	movf	?___lldiv+3,w
  1735     01CB  0020               	movlb	0	; select bank0
  1736     01CC  00D0               	movwf	___llmod@dividend+3
  1737     01CD  0873               	movf	?___lldiv+2,w
  1738     01CE  00CF               	movwf	___llmod@dividend+2
  1739     01CF  0872               	movf	?___lldiv+1,w
  1740     01D0  00CE               	movwf	___llmod@dividend+1
  1741     01D1  0871               	movf	?___lldiv,w
  1742     01D2  00CD               	movwf	___llmod@dividend
  1743     01D3  3183  23B9  3180   	fcall	___llmod
  1744     01D6  0020               	movlb	0	; select bank0
  1745     01D7  0849               	movf	?___llmod,w
  1746     01D8  3E30               	addlw	48
  1747     01D9  00B5               	movwf	_bf_tx+5
  1748     01DA                     l1848:
  1749                           
  1750                           ;main.c: 93:         bf_tx[6] = (unsigned char) (temp / 10 % 10 + 48);
  1751     01DA  3000               	movlw	0
  1752     01DB  00CC               	movwf	___llmod@divisor+3
  1753     01DC  3000               	movlw	0
  1754     01DD  00CB               	movwf	___llmod@divisor+2
  1755     01DE  3000               	movlw	0
  1756     01DF  00CA               	movwf	___llmod@divisor+1
  1757     01E0  300A               	movlw	10
  1758     01E1  00C9               	movwf	___llmod@divisor
  1759     01E2  3000               	movlw	0
  1760     01E3  00F4               	movwf	___lldiv@divisor+3
  1761     01E4  3000               	movlw	0
  1762     01E5  00F3               	movwf	___lldiv@divisor+2
  1763     01E6  3000               	movlw	0
  1764     01E7  00F2               	movwf	___lldiv@divisor+1
  1765     01E8  300A               	movlw	10
  1766     01E9  00F1               	movwf	___lldiv@divisor
  1767     01EA  0823               	movf	_temp+3,w
  1768     01EB  00F8               	movwf	___lldiv@dividend+3
  1769     01EC  0822               	movf	_temp+2,w
  1770     01ED  00F7               	movwf	___lldiv@dividend+2
  1771     01EE  0821               	movf	_temp+1,w
  1772     01EF  00F6               	movwf	___lldiv@dividend+1
  1773     01F0  0820               	movf	_temp,w
  1774     01F1  00F5               	movwf	___lldiv@dividend
  1775     01F2  3183  235E  3180   	fcall	___lldiv
  1776     01F5  0874               	movf	?___lldiv+3,w
  1777     01F6  0020               	movlb	0	; select bank0
  1778     01F7  00D0               	movwf	___llmod@dividend+3
  1779     01F8  0873               	movf	?___lldiv+2,w
  1780     01F9  00CF               	movwf	___llmod@dividend+2
  1781     01FA  0872               	movf	?___lldiv+1,w
  1782     01FB  00CE               	movwf	___llmod@dividend+1
  1783     01FC  0871               	movf	?___lldiv,w
  1784     01FD  00CD               	movwf	___llmod@dividend
  1785     01FE  3183  23B9  3180   	fcall	___llmod
  1786     0201  0020               	movlb	0	; select bank0
  1787     0202  0849               	movf	?___llmod,w
  1788     0203  3E30               	addlw	48
  1789     0204  00B6               	movwf	_bf_tx+6
  1790     0205                     l1850:
  1791                           
  1792                           ;main.c: 94:         bf_tx[7] = (unsigned char) (temp / 1 % 10 + 48);
  1793     0205  3000               	movlw	0
  1794     0206  00CC               	movwf	___llmod@divisor+3
  1795     0207  3000               	movlw	0
  1796     0208  00CB               	movwf	___llmod@divisor+2
  1797     0209  3000               	movlw	0
  1798     020A  00CA               	movwf	___llmod@divisor+1
  1799     020B  300A               	movlw	10
  1800     020C  00C9               	movwf	___llmod@divisor
  1801     020D  0823               	movf	_temp+3,w
  1802     020E  00D0               	movwf	___llmod@dividend+3
  1803     020F  0822               	movf	_temp+2,w
  1804     0210  00CF               	movwf	___llmod@dividend+2
  1805     0211  0821               	movf	_temp+1,w
  1806     0212  00CE               	movwf	___llmod@dividend+1
  1807     0213  0820               	movf	_temp,w
  1808     0214  00CD               	movwf	___llmod@dividend
  1809     0215  3183  23B9  3180   	fcall	___llmod
  1810     0218  0020               	movlb	0	; select bank0
  1811     0219  0849               	movf	?___llmod,w
  1812     021A  3E30               	addlw	48
  1813     021B  00B7               	movwf	_bf_tx+7
  1814                           
  1815                           ;main.c: 96:         ADCON0 = 0X09;
  1816     021C  3009               	movlw	9
  1817     021D  0021               	movlb	1	; select bank1
  1818     021E  009D               	movwf	29	;volatile
  1819                           
  1820                           ;main.c: 97:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  1821     021F  3042               	movlw	66
  1822     0220                     u1507:
  1823     0220  0B89               	decfsz	9,f
  1824     0221  2A20               	goto	u1507
  1825     0222  3200               	nop2
  1826     0223                     l1852:
  1827                           
  1828                           ;main.c: 98:         ADCON0bits.ADGO = 1;
  1829     0223  0021               	movlb	1	; select bank1
  1830     0224  149D               	bsf	29,1	;volatile
  1831                           
  1832                           ;main.c: 99:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1833     0225  3002               	movlw	2
  1834     0226  0020               	movlb	0	; select bank0
  1835     0227  00DD               	movwf	??_main+1
  1836     0228  3004               	movlw	4
  1837     0229  00DC               	movwf	??_main
  1838     022A  30BA               	movlw	186
  1839     022B                     u1517:
  1840     022B  0B89               	decfsz	9,f
  1841     022C  2A2B               	goto	u1517
  1842     022D  0BDC               	decfsz	??_main,f
  1843     022E  2A2B               	goto	u1517
  1844     022F  0BDD               	decfsz	??_main+1,f
  1845     0230  2A2B               	goto	u1517
  1846     0231  0000               	nop
  1847                           
  1848                           ;main.c: 100:         mq2 = ADRES;
  1849     0232  0021               	movlb	1	; select bank1
  1850     0233  081C               	movf	28,w	;volatile
  1851     0234  0020               	movlb	0	; select bank0
  1852     0235  00AC               	movwf	_mq2+1
  1853     0236  0021               	movlb	1	; select bank1
  1854     0237  081B               	movf	27,w	;volatile
  1855     0238  0020               	movlb	0	; select bank0
  1856     0239  00AB               	movwf	_mq2
  1857     023A                     l1854:
  1858                           
  1859                           ;main.c: 101:         bf_tx[8] = (unsigned char) (mq2 / 1000 % 10 + 48);
  1860     023A  300A               	movlw	10
  1861     023B  00C4               	movwf	___lwmod@divisor
  1862     023C  3000               	movlw	0
  1863     023D  00C5               	movwf	___lwmod@divisor+1
  1864     023E  30E8               	movlw	232
  1865     023F  00F1               	movwf	___lwdiv@divisor
  1866     0240  3003               	movlw	3
  1867     0241  00F2               	movwf	___lwdiv@divisor+1
  1868     0242  082C               	movf	_mq2+1,w
  1869     0243  00F4               	movwf	___lwdiv@dividend+1
  1870     0244  082B               	movf	_mq2,w
  1871     0245  00F3               	movwf	___lwdiv@dividend
  1872     0246  3184  2404  3180   	fcall	___lwdiv
  1873     0249  0872               	movf	?___lwdiv+1,w
  1874     024A  0020               	movlb	0	; select bank0
  1875     024B  00C7               	movwf	___lwmod@dividend+1
  1876     024C  0871               	movf	?___lwdiv,w
  1877     024D  00C6               	movwf	___lwmod@dividend
  1878     024E  3184  2440  3180   	fcall	___lwmod
  1879     0251  0020               	movlb	0	; select bank0
  1880     0252  0844               	movf	?___lwmod,w
  1881     0253  3E30               	addlw	48
  1882     0254  00B8               	movwf	_bf_tx+8
  1883     0255                     l1856:
  1884                           
  1885                           ;main.c: 102:         bf_tx[9] = (unsigned char) (mq2 / 100 % 10 + 48);
  1886     0255  300A               	movlw	10
  1887     0256  00C4               	movwf	___lwmod@divisor
  1888     0257  3000               	movlw	0
  1889     0258  00C5               	movwf	___lwmod@divisor+1
  1890     0259  3064               	movlw	100
  1891     025A  00F1               	movwf	___lwdiv@divisor
  1892     025B  3000               	movlw	0
  1893     025C  00F2               	movwf	___lwdiv@divisor+1
  1894     025D  082C               	movf	_mq2+1,w
  1895     025E  00F4               	movwf	___lwdiv@dividend+1
  1896     025F  082B               	movf	_mq2,w
  1897     0260  00F3               	movwf	___lwdiv@dividend
  1898     0261  3184  2404  3180   	fcall	___lwdiv
  1899     0264  0872               	movf	?___lwdiv+1,w
  1900     0265  0020               	movlb	0	; select bank0
  1901     0266  00C7               	movwf	___lwmod@dividend+1
  1902     0267  0871               	movf	?___lwdiv,w
  1903     0268  00C6               	movwf	___lwmod@dividend
  1904     0269  3184  2440  3180   	fcall	___lwmod
  1905     026C  0020               	movlb	0	; select bank0
  1906     026D  0844               	movf	?___lwmod,w
  1907     026E  3E30               	addlw	48
  1908     026F  00B9               	movwf	_bf_tx+9
  1909     0270                     l1858:
  1910                           
  1911                           ;main.c: 103:         bf_tx[10] = (unsigned char) (mq2 / 10 % 10 + 48);
  1912     0270  300A               	movlw	10
  1913     0271  00C4               	movwf	___lwmod@divisor
  1914     0272  3000               	movlw	0
  1915     0273  00C5               	movwf	___lwmod@divisor+1
  1916     0274  300A               	movlw	10
  1917     0275  00F1               	movwf	___lwdiv@divisor
  1918     0276  3000               	movlw	0
  1919     0277  00F2               	movwf	___lwdiv@divisor+1
  1920     0278  082C               	movf	_mq2+1,w
  1921     0279  00F4               	movwf	___lwdiv@dividend+1
  1922     027A  082B               	movf	_mq2,w
  1923     027B  00F3               	movwf	___lwdiv@dividend
  1924     027C  3184  2404  3180   	fcall	___lwdiv
  1925     027F  0872               	movf	?___lwdiv+1,w
  1926     0280  0020               	movlb	0	; select bank0
  1927     0281  00C7               	movwf	___lwmod@dividend+1
  1928     0282  0871               	movf	?___lwdiv,w
  1929     0283  00C6               	movwf	___lwmod@dividend
  1930     0284  3184  2440  3180   	fcall	___lwmod
  1931     0287  0020               	movlb	0	; select bank0
  1932     0288  0844               	movf	?___lwmod,w
  1933     0289  3E30               	addlw	48
  1934     028A  00BA               	movwf	_bf_tx+10
  1935     028B                     l1860:
  1936                           
  1937                           ;main.c: 104:         bf_tx[11] = (unsigned char) (mq2 / 1 % 10 + 48);
  1938     028B  300A               	movlw	10
  1939     028C  00C4               	movwf	___lwmod@divisor
  1940     028D  3000               	movlw	0
  1941     028E  00C5               	movwf	___lwmod@divisor+1
  1942     028F  082C               	movf	_mq2+1,w
  1943     0290  00C7               	movwf	___lwmod@dividend+1
  1944     0291  082B               	movf	_mq2,w
  1945     0292  00C6               	movwf	___lwmod@dividend
  1946     0293  3184  2440  3180   	fcall	___lwmod
  1947     0296  0020               	movlb	0	; select bank0
  1948     0297  0844               	movf	?___lwmod,w
  1949     0298  3E30               	addlw	48
  1950     0299  00BB               	movwf	_bf_tx+11
  1951     029A                     l1862:
  1952                           
  1953                           ;main.c: 107:         if (ena_send == 1) {
  1954     029A  1C7C               	btfss	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1955     029B  2A9D               	goto	u1471
  1956     029C  2A9E               	goto	u1470
  1957     029D                     u1471:
  1958     029D  2912               	goto	l1834
  1959     029E                     u1470:
  1960     029E                     l1864:
  1961                           
  1962                           ;main.c: 108:             ena_send = 0;
  1963     029E  107C               	bcf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1964     029F                     l1866:
  1965                           
  1966                           ;main.c: 109:             USART_TransmitString(bf_tx);
  1967     029F  3030               	movlw	(low (_bf_tx| 0))& (0+255)
  1968     02A0  3184  24D0  3180   	fcall	_USART_TransmitString
  1969     02A3  2912               	goto	l1834
  1970     02A4  3180  2845         	ljmp	start
  1971     02A6                     __end_of_main:
  1972                           
  1973                           	psect	text1
  1974     02A6                     __ptext1:	
  1975 ;; *************** function _read_temp *****************
  1976 ;; Defined at:
  1977 ;;		line 26 in file "main.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  temp            4   20[BANK0 ] unsigned long 
  1982 ;;  dt3             4   16[BANK0 ] unsigned long 
  1983 ;;  dt2             4   12[BANK0 ] unsigned long 
  1984 ;;  dt1             4    8[BANK0 ] unsigned long 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  4    5[COMMON] unsigned long 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, pclath, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1995 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;Total ram usage:       28 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 3
  2001 ;; This function calls:
  2002 ;;		_i2c_read
  2003 ;;		_i2c_start
  2004 ;;		_i2c_stop
  2005 ;;		_i2c_write
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011     02A6                     _read_temp:	
  2012                           ;psect for function _read_temp
  2013                           
  2014     02A6                     l1390:	
  2015                           ;incstack = 0
  2016                           ; Regs used in _read_temp: [wreg+status,2+status,0+pclath+cstack]
  2017                           
  2018                           
  2019                           ;main.c: 27:     unsigned long dt1, dt2, dt3, temp;;main.c: 28:     i2c_start();
  2020     02A6  3185  251C  3182   	fcall	_i2c_start
  2021     02A9                     l1392:
  2022                           
  2023                           ;main.c: 29:     i2c_write(0x71);
  2024     02A9  3071               	movlw	113
  2025     02AA  3184  24A9  3182   	fcall	_i2c_write
  2026     02AD                     l1394:
  2027                           
  2028                           ;main.c: 30:     i2c_read(1);
  2029     02AD  3001               	movlw	1
  2030     02AE  3184  2475  3182   	fcall	_i2c_read
  2031     02B1                     l1396:
  2032                           
  2033                           ;main.c: 31:     i2c_read(1);
  2034     02B1  3001               	movlw	1
  2035     02B2  3184  2475  3182   	fcall	_i2c_read
  2036     02B5                     l1398:
  2037                           
  2038                           ;main.c: 32:     i2c_read(1);
  2039     02B5  3001               	movlw	1
  2040     02B6  3184  2475  3182   	fcall	_i2c_read
  2041     02B9                     l1400:
  2042                           
  2043                           ;main.c: 33:     dt1 = i2c_read(1) & 0x0f;
  2044     02B9  3001               	movlw	1
  2045     02BA  3184  2475  3182   	fcall	_i2c_read
  2046     02BD  390F               	andlw	15
  2047     02BE  0020               	movlb	0	; select bank0
  2048     02BF  00C4               	movwf	??_read_temp
  2049     02C0  01C5               	clrf	??_read_temp+1
  2050     02C1  01C6               	clrf	??_read_temp+2
  2051     02C2  01C7               	clrf	??_read_temp+3
  2052     02C3  0847               	movf	??_read_temp+3,w
  2053     02C4  00CF               	movwf	read_temp@dt1+3
  2054     02C5  0846               	movf	??_read_temp+2,w
  2055     02C6  00CE               	movwf	read_temp@dt1+2
  2056     02C7  0845               	movf	??_read_temp+1,w
  2057     02C8  00CD               	movwf	read_temp@dt1+1
  2058     02C9  0844               	movf	??_read_temp,w
  2059     02CA  00CC               	movwf	read_temp@dt1
  2060     02CB                     l1402:
  2061                           
  2062                           ;main.c: 34:     dt2 = i2c_read(1);
  2063     02CB  3001               	movlw	1
  2064     02CC  3184  2475  3182   	fcall	_i2c_read
  2065     02CF  0020               	movlb	0	; select bank0
  2066     02D0  00C4               	movwf	??_read_temp
  2067     02D1  01C5               	clrf	??_read_temp+1
  2068     02D2  01C6               	clrf	??_read_temp+2
  2069     02D3  01C7               	clrf	??_read_temp+3
  2070     02D4  0847               	movf	??_read_temp+3,w
  2071     02D5  00D3               	movwf	read_temp@dt2+3
  2072     02D6  0846               	movf	??_read_temp+2,w
  2073     02D7  00D2               	movwf	read_temp@dt2+2
  2074     02D8  0845               	movf	??_read_temp+1,w
  2075     02D9  00D1               	movwf	read_temp@dt2+1
  2076     02DA  0844               	movf	??_read_temp,w
  2077     02DB  00D0               	movwf	read_temp@dt2
  2078     02DC                     l1404:
  2079                           
  2080                           ;main.c: 35:     dt3 = i2c_read(0);
  2081     02DC  3000               	movlw	0
  2082     02DD  3184  2475  3182   	fcall	_i2c_read
  2083     02E0  0020               	movlb	0	; select bank0
  2084     02E1  00C4               	movwf	??_read_temp
  2085     02E2  01C5               	clrf	??_read_temp+1
  2086     02E3  01C6               	clrf	??_read_temp+2
  2087     02E4  01C7               	clrf	??_read_temp+3
  2088     02E5  0847               	movf	??_read_temp+3,w
  2089     02E6  00D7               	movwf	read_temp@dt3+3
  2090     02E7  0846               	movf	??_read_temp+2,w
  2091     02E8  00D6               	movwf	read_temp@dt3+2
  2092     02E9  0845               	movf	??_read_temp+1,w
  2093     02EA  00D5               	movwf	read_temp@dt3+1
  2094     02EB  0844               	movf	??_read_temp,w
  2095     02EC  00D4               	movwf	read_temp@dt3
  2096     02ED                     l1406:
  2097                           
  2098                           ;main.c: 36:     i2c_stop();
  2099     02ED  3185  2513  3182   	fcall	_i2c_stop
  2100     02F0                     l1408:
  2101                           
  2102                           ;main.c: 37:     temp = (dt1 & 0x0f) << 16 | dt2 << 8 | dt3;
  2103     02F0  0020               	movlb	0	; select bank0
  2104     02F1  0850               	movf	read_temp@dt2,w
  2105     02F2  00C4               	movwf	??_read_temp
  2106     02F3  0851               	movf	read_temp@dt2+1,w
  2107     02F4  00C5               	movwf	??_read_temp+1
  2108     02F5  0852               	movf	read_temp@dt2+2,w
  2109     02F6  00C6               	movwf	??_read_temp+2
  2110     02F7  0853               	movf	read_temp@dt2+3,w
  2111     02F8  00C7               	movwf	??_read_temp+3
  2112     02F9  3008               	movlw	8
  2113     02FA                     u795:
  2114     02FA  35C4               	lslf	??_read_temp,f
  2115     02FB  0DC5               	rlf	??_read_temp+1,f
  2116     02FC  0DC6               	rlf	??_read_temp+2,f
  2117     02FD  0DC7               	rlf	??_read_temp+3,f
  2118     02FE                     u790:
  2119     02FE  0B89               	decfsz	9,f
  2120     02FF  2AFA               	goto	u795
  2121     0300  300F               	movlw	15
  2122     0301  054C               	andwf	read_temp@dt1,w
  2123     0302  00C8               	movwf	??_read_temp+4
  2124     0303  3000               	movlw	0
  2125     0304  054D               	andwf	read_temp@dt1+1,w
  2126     0305  00C9               	movwf	??_read_temp+5
  2127     0306  3000               	movlw	0
  2128     0307  054E               	andwf	read_temp@dt1+2,w
  2129     0308  00CA               	movwf	??_read_temp+6
  2130     0309  3000               	movlw	0
  2131     030A  054F               	andwf	read_temp@dt1+3,w
  2132     030B  00CB               	movwf	??_read_temp+7
  2133     030C  3010               	movlw	16
  2134     030D                     u805:
  2135     030D  35C8               	lslf	??_read_temp+4,f
  2136     030E  0DC9               	rlf	??_read_temp+5,f
  2137     030F  0DCA               	rlf	??_read_temp+6,f
  2138     0310  0DCB               	rlf	??_read_temp+7,f
  2139     0311                     u800:
  2140     0311  0B89               	decfsz	9,f
  2141     0312  2B0D               	goto	u805
  2142     0313  0848               	movf	??_read_temp+4,w
  2143     0314  04C4               	iorwf	??_read_temp,f
  2144     0315  0849               	movf	??_read_temp+5,w
  2145     0316  04C5               	iorwf	??_read_temp+1,f
  2146     0317  084A               	movf	??_read_temp+6,w
  2147     0318  04C6               	iorwf	??_read_temp+2,f
  2148     0319  084B               	movf	??_read_temp+7,w
  2149     031A  04C7               	iorwf	??_read_temp+3,f
  2150     031B  0854               	movf	read_temp@dt3,w
  2151     031C  0444               	iorwf	??_read_temp,w
  2152     031D  00D8               	movwf	read_temp@temp
  2153     031E  0855               	movf	read_temp@dt3+1,w
  2154     031F  0445               	iorwf	??_read_temp+1,w
  2155     0320  00D9               	movwf	read_temp@temp+1
  2156     0321  0856               	movf	read_temp@dt3+2,w
  2157     0322  0446               	iorwf	??_read_temp+2,w
  2158     0323  00DA               	movwf	read_temp@temp+2
  2159     0324  0857               	movf	read_temp@dt3+3,w
  2160     0325  0447               	iorwf	??_read_temp+3,w
  2161     0326  00DB               	movwf	read_temp@temp+3
  2162     0327                     l1410:
  2163                           
  2164                           ;main.c: 38:     if (temp > 781189) temp = 781189;
  2165     0327  085B               	movf	read_temp@temp+3,w
  2166     0328  1D03               	btfss	3,2
  2167     0329  2B34               	goto	u810
  2168     032A  3086               	movlw	134
  2169     032B  0258               	subwf	read_temp@temp,w
  2170     032C  30EB               	movlw	235
  2171     032D  3B59               	subwfb	read_temp@temp+1,w
  2172     032E  300B               	movlw	11
  2173     032F  3B5A               	subwfb	read_temp@temp+2,w
  2174     0330  1C03               	btfss	3,0
  2175     0331  2B33               	goto	u811
  2176     0332  2B34               	goto	u810
  2177     0333                     u811:
  2178     0333  2B3D               	goto	l1414
  2179     0334                     u810:
  2180     0334                     l1412:
  2181     0334  3000               	movlw	0
  2182     0335  0020               	movlb	0	; select bank0
  2183     0336  00DB               	movwf	read_temp@temp+3
  2184     0337  300B               	movlw	11
  2185     0338  00DA               	movwf	read_temp@temp+2
  2186     0339  30EB               	movlw	235
  2187     033A  00D9               	movwf	read_temp@temp+1
  2188     033B  3085               	movlw	133
  2189     033C  00D8               	movwf	read_temp@temp
  2190     033D                     l1414:
  2191                           
  2192                           ;main.c: 39:     if (temp < 314573) temp = 314573;
  2193     033D  0020               	movlb	0	; select bank0
  2194     033E  085B               	movf	read_temp@temp+3,w
  2195     033F  1D03               	btfss	3,2
  2196     0340  2B4A               	goto	u821
  2197     0341  30CD               	movlw	205
  2198     0342  0258               	subwf	read_temp@temp,w
  2199     0343  30CC               	movlw	204
  2200     0344  3B59               	subwfb	read_temp@temp+1,w
  2201     0345  3004               	movlw	4
  2202     0346  3B5A               	subwfb	read_temp@temp+2,w
  2203     0347  1803               	btfsc	3,0
  2204     0348  2B4A               	goto	u821
  2205     0349  2B4B               	goto	u820
  2206     034A                     u821:
  2207     034A  2B54               	goto	l72
  2208     034B                     u820:
  2209     034B                     l1416:
  2210     034B  3000               	movlw	0
  2211     034C  0020               	movlb	0	; select bank0
  2212     034D  00DB               	movwf	read_temp@temp+3
  2213     034E  3004               	movlw	4
  2214     034F  00DA               	movwf	read_temp@temp+2
  2215     0350  30CC               	movlw	204
  2216     0351  00D9               	movwf	read_temp@temp+1
  2217     0352  30CD               	movlw	205
  2218     0353  00D8               	movwf	read_temp@temp
  2219     0354                     l72:
  2220                           
  2221                           ;main.c: 40:     return temp;
  2222     0354  0020               	movlb	0	; select bank0
  2223     0355  085B               	movf	read_temp@temp+3,w
  2224     0356  00F8               	movwf	?_read_temp+3
  2225     0357  085A               	movf	read_temp@temp+2,w
  2226     0358  00F7               	movwf	?_read_temp+2
  2227     0359  0859               	movf	read_temp@temp+1,w
  2228     035A  00F6               	movwf	?_read_temp+1
  2229     035B  0858               	movf	read_temp@temp,w
  2230     035C  00F5               	movwf	?_read_temp
  2231     035D                     l73:
  2232     035D  0008               	return
  2233     035E                     __end_of_read_temp:
  2234                           
  2235                           	psect	text2
  2236     0475                     __ptext2:	
  2237 ;; *************** function _i2c_read *****************
  2238 ;; Defined at:
  2239 ;;		line 39 in file "tv_i2c.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  ACK             1    wreg     unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  ACK             1    2[COMMON] unsigned char 
  2244 ;;  i               1    3[COMMON] unsigned char 
  2245 ;;  DATA            1    4[COMMON] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      unsigned char 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2256 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;Total ram usage:        4 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 2
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_read_temp
  2266 ;;		_READ_T_H_AHT10
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270     0475                     _i2c_read:	
  2271                           ;psect for function _i2c_read
  2272                           
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2276                           ;i2c_read@ACK stored from wreg
  2277     0475  00F2               	movwf	i2c_read@ACK
  2278     0476                     l1352:
  2279                           
  2280                           ;tv_i2c.c: 39: unsigned char i2c_read(unsigned char ACK);tv_i2c.c: 40: {;tv_i2c.c: 41:  
      +                             unsigned char DATA;;tv_i2c.c: 42:     TRISC1=0;
  2281     0476  0021               	movlb	1	; select bank1
  2282     0477  108E               	bcf	14,1	;volatile
  2283                           
  2284                           ;tv_i2c.c: 43:     LATC1=0;
  2285     0478  0022               	movlb	2	; select bank2
  2286     0479  108E               	bcf	14,1	;volatile
  2287                           
  2288                           ;tv_i2c.c: 44:     TRISC2=1;
  2289     047A  0021               	movlb	1	; select bank1
  2290     047B  150E               	bsf	14,2	;volatile
  2291     047C                     l1354:
  2292                           
  2293                           ;tv_i2c.c: 45:     for (unsigned char i=0;i<8;i++)
  2294     047C  01F3               	clrf	i2c_read@i
  2295     047D                     l152:
  2296                           
  2297                           ;tv_i2c.c: 46:     {;tv_i2c.c: 47:         LATC1 = 1;
  2298     047D  0022               	movlb	2	; select bank2
  2299     047E  148E               	bsf	14,1	;volatile
  2300                           
  2301                           ;tv_i2c.c: 48:         if(PORTCbits.RC2 == 1) DATA = (unsigned char)(DATA << 1) | 1;
  2302     047F  0020               	movlb	0	; select bank0
  2303     0480  1D0E               	btfss	14,2	;volatile
  2304     0481  2C83               	goto	u741
  2305     0482  2C84               	goto	u740
  2306     0483                     u741:
  2307     0483  2C87               	goto	l1362
  2308     0484                     u740:
  2309     0484                     l1360:
  2310     0484  1403               	setc
  2311     0485  0DF4               	rlf	i2c_read@DATA,f
  2312     0486  2C89               	goto	l1364
  2313     0487                     l1362:
  2314     0487  3574               	lslf	i2c_read@DATA,w
  2315     0488  00F4               	movwf	i2c_read@DATA
  2316     0489                     l1364:
  2317                           
  2318                           ;tv_i2c.c: 50:         LATC1=0;
  2319     0489  0022               	movlb	2	; select bank2
  2320     048A  108E               	bcf	14,1	;volatile
  2321     048B                     l1366:
  2322                           
  2323                           ;tv_i2c.c: 51:         _delay((unsigned long)((10)*(16000000/4000000.0)));
  2324     048B  300D               	movlw	13
  2325     048C                     u1527:
  2326     048C  0B89               	decfsz	9,f
  2327     048D  2C8C               	goto	u1527
  2328     048E  0000               	nop
  2329     048F                     l1368:
  2330                           
  2331                           ;tv_i2c.c: 52:     }
  2332     048F  3001               	movlw	1
  2333     0490  00F1               	movwf	??_i2c_read
  2334     0491  0871               	movf	??_i2c_read,w
  2335     0492  07F3               	addwf	i2c_read@i,f
  2336     0493  3008               	movlw	8
  2337     0494  0273               	subwf	i2c_read@i,w
  2338     0495  1C03               	skipc
  2339     0496  2C98               	goto	u751
  2340     0497  2C99               	goto	u750
  2341     0498                     u751:
  2342     0498  2C7D               	goto	l152
  2343     0499                     u750:
  2344     0499                     l153:
  2345                           
  2346                           ;tv_i2c.c: 53:     TRISC2=0;
  2347     0499  0021               	movlb	1	; select bank1
  2348     049A  110E               	bcf	14,2	;volatile
  2349     049B                     l1370:
  2350                           
  2351                           ;tv_i2c.c: 54:     if (ACK == 1) LATC2 = 0;
  2352     049B  0372               	decf	i2c_read@ACK,w
  2353     049C  1D03               	btfss	3,2
  2354     049D  2C9F               	goto	u761
  2355     049E  2CA0               	goto	u760
  2356     049F                     u761:
  2357     049F  2CA3               	goto	l156
  2358     04A0                     u760:
  2359     04A0                     l1372:
  2360     04A0  0022               	movlb	2	; select bank2
  2361     04A1  110E               	bcf	14,2	;volatile
  2362     04A2  2CA5               	goto	l157
  2363     04A3                     l156:	
  2364                           ;tv_i2c.c: 55:     else LATC2 = 1;
  2365                           
  2366     04A3  0022               	movlb	2	; select bank2
  2367     04A4  150E               	bsf	14,2	;volatile
  2368     04A5                     l157:
  2369                           
  2370                           ;tv_i2c.c: 56:     LATC1=1;
  2371     04A5  148E               	bsf	14,1	;volatile
  2372                           
  2373                           ;tv_i2c.c: 57:     LATC1=0;
  2374     04A6  108E               	bcf	14,1	;volatile
  2375     04A7                     l1374:
  2376                           
  2377                           ;tv_i2c.c: 58:     return DATA;
  2378     04A7  0874               	movf	i2c_read@DATA,w
  2379     04A8                     l158:
  2380     04A8  0008               	return
  2381     04A9                     __end_of_i2c_read:
  2382                           
  2383                           	psect	text3
  2384     0440                     __ptext3:	
  2385 ;; *************** function ___lwmod *****************
  2386 ;; Defined at:
  2387 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwmod.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  divisor         2    0[BANK0 ] unsigned int 
  2390 ;;  dividend        2    2[BANK0 ] unsigned int 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  counter         1   10[COMMON] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2    0[BANK0 ] unsigned int 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;Total ram usage:        6 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 2
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416     0440                     ___lwmod:	
  2417                           ;psect for function ___lwmod
  2418                           
  2419     0440                     l1764:	
  2420                           ;incstack = 0
  2421                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2422                           
  2423     0440  0020               	movlb	0	; select bank0
  2424     0441  0844               	movf	___lwmod@divisor,w
  2425     0442  0445               	iorwf	___lwmod@divisor+1,w
  2426     0443  1903               	btfsc	3,2
  2427     0444  2C46               	goto	u1391
  2428     0445  2C47               	goto	u1390
  2429     0446                     u1391:
  2430     0446  2C70               	goto	l1782
  2431     0447                     u1390:
  2432     0447                     l1766:
  2433     0447  01FA               	clrf	___lwmod@counter
  2434     0448  0AFA               	incf	___lwmod@counter,f
  2435     0449  2C53               	goto	l1772
  2436     044A                     l1768:
  2437     044A  3001               	movlw	1
  2438     044B                     u1405:
  2439     044B  35C4               	lslf	___lwmod@divisor,f
  2440     044C  0DC5               	rlf	___lwmod@divisor+1,f
  2441     044D  0B89               	decfsz	9,f
  2442     044E  2C4B               	goto	u1405
  2443     044F                     l1770:
  2444     044F  3001               	movlw	1
  2445     0450  00F9               	movwf	??___lwmod
  2446     0451  0879               	movf	??___lwmod,w
  2447     0452  07FA               	addwf	___lwmod@counter,f
  2448     0453                     l1772:
  2449     0453  1FC5               	btfss	___lwmod@divisor+1,7
  2450     0454  2C56               	goto	u1411
  2451     0455  2C57               	goto	u1410
  2452     0456                     u1411:
  2453     0456  2C4A               	goto	l1768
  2454     0457                     u1410:
  2455     0457                     l1774:
  2456     0457  0845               	movf	___lwmod@divisor+1,w
  2457     0458  0247               	subwf	___lwmod@dividend+1,w
  2458     0459  1D03               	skipz
  2459     045A  2C5D               	goto	u1425
  2460     045B  0844               	movf	___lwmod@divisor,w
  2461     045C  0246               	subwf	___lwmod@dividend,w
  2462     045D                     u1425:
  2463     045D  1C03               	skipc
  2464     045E  2C60               	goto	u1421
  2465     045F  2C61               	goto	u1420
  2466     0460                     u1421:
  2467     0460  2C65               	goto	l1778
  2468     0461                     u1420:
  2469     0461                     l1776:
  2470     0461  0844               	movf	___lwmod@divisor,w
  2471     0462  02C6               	subwf	___lwmod@dividend,f
  2472     0463  0845               	movf	___lwmod@divisor+1,w
  2473     0464  3BC7               	subwfb	___lwmod@dividend+1,f
  2474     0465                     l1778:
  2475     0465  3001               	movlw	1
  2476     0466                     u1435:
  2477     0466  36C5               	lsrf	___lwmod@divisor+1,f
  2478     0467  0CC4               	rrf	___lwmod@divisor,f
  2479     0468  0B89               	decfsz	9,f
  2480     0469  2C66               	goto	u1435
  2481     046A                     l1780:
  2482     046A  3001               	movlw	1
  2483     046B  02FA               	subwf	___lwmod@counter,f
  2484     046C  1D03               	btfss	3,2
  2485     046D  2C6F               	goto	u1441
  2486     046E  2C70               	goto	u1440
  2487     046F                     u1441:
  2488     046F  2C57               	goto	l1774
  2489     0470                     u1440:
  2490     0470                     l1782:
  2491     0470  0847               	movf	___lwmod@dividend+1,w
  2492     0471  00C5               	movwf	?___lwmod+1
  2493     0472  0846               	movf	___lwmod@dividend,w
  2494     0473  00C4               	movwf	?___lwmod
  2495     0474                     l704:
  2496     0474  0008               	return
  2497     0475                     __end_of___lwmod:
  2498                           
  2499                           	psect	text4
  2500     0404                     __ptext4:	
  2501 ;; *************** function ___lwdiv *****************
  2502 ;; Defined at:
  2503 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwdiv.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  divisor         2    1[COMMON] unsigned int 
  2506 ;;  dividend        2    3[COMMON] unsigned int 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  quotient        2    6[COMMON] unsigned int 
  2509 ;;  counter         1    8[COMMON] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  2    1[COMMON] unsigned int 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2520 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2522 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2523 ;;Total ram usage:        8 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 2
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533     0404                     ___lwdiv:	
  2534                           ;psect for function ___lwdiv
  2535                           
  2536     0404                     l1510:	
  2537                           ;incstack = 0
  2538                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2539                           
  2540     0404  01F6               	clrf	___lwdiv@quotient
  2541     0405  01F7               	clrf	___lwdiv@quotient+1
  2542     0406                     l1512:
  2543     0406  0871               	movf	___lwdiv@divisor,w
  2544     0407  0472               	iorwf	___lwdiv@divisor+1,w
  2545     0408  1903               	btfsc	3,2
  2546     0409  2C0B               	goto	u991
  2547     040A  2C0C               	goto	u990
  2548     040B                     u991:
  2549     040B  2C3B               	goto	l1532
  2550     040C                     u990:
  2551     040C                     l1514:
  2552     040C  01F8               	clrf	___lwdiv@counter
  2553     040D  0AF8               	incf	___lwdiv@counter,f
  2554     040E  2C18               	goto	l1520
  2555     040F                     l1516:
  2556     040F  3001               	movlw	1
  2557     0410                     u1005:
  2558     0410  35F1               	lslf	___lwdiv@divisor,f
  2559     0411  0DF2               	rlf	___lwdiv@divisor+1,f
  2560     0412  0B89               	decfsz	9,f
  2561     0413  2C10               	goto	u1005
  2562     0414                     l1518:
  2563     0414  3001               	movlw	1
  2564     0415  00F5               	movwf	??___lwdiv
  2565     0416  0875               	movf	??___lwdiv,w
  2566     0417  07F8               	addwf	___lwdiv@counter,f
  2567     0418                     l1520:
  2568     0418  1FF2               	btfss	___lwdiv@divisor+1,7
  2569     0419  2C1B               	goto	u1011
  2570     041A  2C1C               	goto	u1010
  2571     041B                     u1011:
  2572     041B  2C0F               	goto	l1516
  2573     041C                     u1010:
  2574     041C                     l1522:
  2575     041C  3001               	movlw	1
  2576     041D                     u1025:
  2577     041D  35F6               	lslf	___lwdiv@quotient,f
  2578     041E  0DF7               	rlf	___lwdiv@quotient+1,f
  2579     041F  0B89               	decfsz	9,f
  2580     0420  2C1D               	goto	u1025
  2581     0421  0872               	movf	___lwdiv@divisor+1,w
  2582     0422  0274               	subwf	___lwdiv@dividend+1,w
  2583     0423  1D03               	skipz
  2584     0424  2C27               	goto	u1035
  2585     0425  0871               	movf	___lwdiv@divisor,w
  2586     0426  0273               	subwf	___lwdiv@dividend,w
  2587     0427                     u1035:
  2588     0427  1C03               	skipc
  2589     0428  2C2A               	goto	u1031
  2590     0429  2C2B               	goto	u1030
  2591     042A                     u1031:
  2592     042A  2C30               	goto	l1528
  2593     042B                     u1030:
  2594     042B                     l1524:
  2595     042B  0871               	movf	___lwdiv@divisor,w
  2596     042C  02F3               	subwf	___lwdiv@dividend,f
  2597     042D  0872               	movf	___lwdiv@divisor+1,w
  2598     042E  3BF4               	subwfb	___lwdiv@dividend+1,f
  2599     042F                     l1526:
  2600     042F  1476               	bsf	___lwdiv@quotient,0
  2601     0430                     l1528:
  2602     0430  3001               	movlw	1
  2603     0431                     u1045:
  2604     0431  36F2               	lsrf	___lwdiv@divisor+1,f
  2605     0432  0CF1               	rrf	___lwdiv@divisor,f
  2606     0433  0B89               	decfsz	9,f
  2607     0434  2C31               	goto	u1045
  2608     0435                     l1530:
  2609     0435  3001               	movlw	1
  2610     0436  02F8               	subwf	___lwdiv@counter,f
  2611     0437  1D03               	btfss	3,2
  2612     0438  2C3A               	goto	u1051
  2613     0439  2C3B               	goto	u1050
  2614     043A                     u1051:
  2615     043A  2C1C               	goto	l1522
  2616     043B                     u1050:
  2617     043B                     l1532:
  2618     043B  0877               	movf	___lwdiv@quotient+1,w
  2619     043C  00F2               	movwf	?___lwdiv+1
  2620     043D  0876               	movf	___lwdiv@quotient,w
  2621     043E  00F1               	movwf	?___lwdiv
  2622     043F                     l694:
  2623     043F  0008               	return
  2624     0440                     __end_of___lwdiv:
  2625                           
  2626                           	psect	text5
  2627     03B9                     __ptext5:	
  2628 ;; *************** function ___llmod *****************
  2629 ;; Defined at:
  2630 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\llmod.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  divisor         4    5[BANK0 ] unsigned long 
  2633 ;;  dividend        4    9[BANK0 ] unsigned long 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  counter         1   11[COMMON] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  4    5[BANK0 ] unsigned long 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2645 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;Total ram usage:       10 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 2
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     03B9                     ___llmod:	
  2660                           ;psect for function ___llmod
  2661                           
  2662     03B9                     l1490:	
  2663                           ;incstack = 0
  2664                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2665                           
  2666     03B9  0020               	movlb	0	; select bank0
  2667     03BA  084C               	movf	___llmod@divisor+3,w
  2668     03BB  044B               	iorwf	___llmod@divisor+2,w
  2669     03BC  044A               	iorwf	___llmod@divisor+1,w
  2670     03BD  0449               	iorwf	___llmod@divisor,w
  2671     03BE  1903               	skipnz
  2672     03BF  2BC1               	goto	u931
  2673     03C0  2BC2               	goto	u930
  2674     03C1                     u931:
  2675     03C1  2BFB               	goto	l1506
  2676     03C2                     u930:
  2677     03C2                     l1492:
  2678     03C2  01FB               	clrf	___llmod@counter
  2679     03C3  0AFB               	incf	___llmod@counter,f
  2680     03C4  2BD0               	goto	l1496
  2681     03C5                     l1494:
  2682     03C5  3001               	movlw	1
  2683     03C6                     u945:
  2684     03C6  35C9               	lslf	___llmod@divisor,f
  2685     03C7  0DCA               	rlf	___llmod@divisor+1,f
  2686     03C8  0DCB               	rlf	___llmod@divisor+2,f
  2687     03C9  0DCC               	rlf	___llmod@divisor+3,f
  2688     03CA  0B89               	decfsz	9,f
  2689     03CB  2BC6               	goto	u945
  2690     03CC  3001               	movlw	1
  2691     03CD  00FA               	movwf	??___llmod
  2692     03CE  087A               	movf	??___llmod,w
  2693     03CF  07FB               	addwf	___llmod@counter,f
  2694     03D0                     l1496:
  2695     03D0  1FCC               	btfss	___llmod@divisor+3,7
  2696     03D1  2BD3               	goto	u951
  2697     03D2  2BD4               	goto	u950
  2698     03D3                     u951:
  2699     03D3  2BC5               	goto	l1494
  2700     03D4                     u950:
  2701     03D4                     l1498:
  2702     03D4  084C               	movf	___llmod@divisor+3,w
  2703     03D5  0250               	subwf	___llmod@dividend+3,w
  2704     03D6  1D03               	skipz
  2705     03D7  2BE2               	goto	u965
  2706     03D8  084B               	movf	___llmod@divisor+2,w
  2707     03D9  024F               	subwf	___llmod@dividend+2,w
  2708     03DA  1D03               	skipz
  2709     03DB  2BE2               	goto	u965
  2710     03DC  084A               	movf	___llmod@divisor+1,w
  2711     03DD  024E               	subwf	___llmod@dividend+1,w
  2712     03DE  1D03               	skipz
  2713     03DF  2BE2               	goto	u965
  2714     03E0  0849               	movf	___llmod@divisor,w
  2715     03E1  024D               	subwf	___llmod@dividend,w
  2716     03E2                     u965:
  2717     03E2  1C03               	skipc
  2718     03E3  2BE5               	goto	u961
  2719     03E4  2BE6               	goto	u960
  2720     03E5                     u961:
  2721     03E5  2BEE               	goto	l1502
  2722     03E6                     u960:
  2723     03E6                     l1500:
  2724     03E6  0849               	movf	___llmod@divisor,w
  2725     03E7  02CD               	subwf	___llmod@dividend,f
  2726     03E8  084A               	movf	___llmod@divisor+1,w
  2727     03E9  3BCE               	subwfb	___llmod@dividend+1,f
  2728     03EA  084B               	movf	___llmod@divisor+2,w
  2729     03EB  3BCF               	subwfb	___llmod@dividend+2,f
  2730     03EC  084C               	movf	___llmod@divisor+3,w
  2731     03ED  3BD0               	subwfb	___llmod@dividend+3,f
  2732     03EE                     l1502:
  2733     03EE  3001               	movlw	1
  2734     03EF                     u975:
  2735     03EF  36CC               	lsrf	___llmod@divisor+3,f
  2736     03F0  0CCB               	rrf	___llmod@divisor+2,f
  2737     03F1  0CCA               	rrf	___llmod@divisor+1,f
  2738     03F2  0CC9               	rrf	___llmod@divisor,f
  2739     03F3  0B89               	decfsz	9,f
  2740     03F4  2BEF               	goto	u975
  2741     03F5                     l1504:
  2742     03F5  3001               	movlw	1
  2743     03F6  02FB               	subwf	___llmod@counter,f
  2744     03F7  1D03               	btfss	3,2
  2745     03F8  2BFA               	goto	u981
  2746     03F9  2BFB               	goto	u980
  2747     03FA                     u981:
  2748     03FA  2BD4               	goto	l1498
  2749     03FB                     u980:
  2750     03FB                     l1506:
  2751     03FB  0850               	movf	___llmod@dividend+3,w
  2752     03FC  00CC               	movwf	?___llmod+3
  2753     03FD  084F               	movf	___llmod@dividend+2,w
  2754     03FE  00CB               	movwf	?___llmod+2
  2755     03FF  084E               	movf	___llmod@dividend+1,w
  2756     0400  00CA               	movwf	?___llmod+1
  2757     0401  084D               	movf	___llmod@dividend,w
  2758     0402  00C9               	movwf	?___llmod
  2759     0403                     l644:
  2760     0403  0008               	return
  2761     0404                     __end_of___llmod:
  2762                           
  2763                           	psect	text6
  2764     035E                     __ptext6:	
  2765 ;; *************** function ___lldiv *****************
  2766 ;; Defined at:
  2767 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\__lldiv.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  divisor         4    1[COMMON] unsigned long 
  2770 ;;  dividend        4    5[COMMON] unsigned long 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  quotient        4    0[BANK0 ] unsigned long 
  2773 ;;  counter         1    4[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  4    1[COMMON] unsigned long 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2783 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;Total ram usage:       14 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 2
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797     035E                     ___lldiv:	
  2798                           ;psect for function ___lldiv
  2799                           
  2800     035E                     l1466:	
  2801                           ;incstack = 0
  2802                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2803                           
  2804     035E  3000               	movlw	0
  2805     035F  0020               	movlb	0	; select bank0
  2806     0360  00C7               	movwf	___lldiv@quotient+3
  2807     0361  3000               	movlw	0
  2808     0362  00C6               	movwf	___lldiv@quotient+2
  2809     0363  3000               	movlw	0
  2810     0364  00C5               	movwf	___lldiv@quotient+1
  2811     0365  3000               	movlw	0
  2812     0366  00C4               	movwf	___lldiv@quotient
  2813     0367  0874               	movf	___lldiv@divisor+3,w
  2814     0368  0473               	iorwf	___lldiv@divisor+2,w
  2815     0369  0472               	iorwf	___lldiv@divisor+1,w
  2816     036A  0471               	iorwf	___lldiv@divisor,w
  2817     036B  1903               	skipnz
  2818     036C  2B6E               	goto	u861
  2819     036D  2B6F               	goto	u860
  2820     036E                     u861:
  2821     036E  2BB0               	goto	l1486
  2822     036F                     u860:
  2823     036F                     l1468:
  2824     036F  01C8               	clrf	___lldiv@counter
  2825     0370  0AC8               	incf	___lldiv@counter,f
  2826     0371  2B7D               	goto	l1472
  2827     0372                     l1470:
  2828     0372  3001               	movlw	1
  2829     0373                     u875:
  2830     0373  35F1               	lslf	___lldiv@divisor,f
  2831     0374  0DF2               	rlf	___lldiv@divisor+1,f
  2832     0375  0DF3               	rlf	___lldiv@divisor+2,f
  2833     0376  0DF4               	rlf	___lldiv@divisor+3,f
  2834     0377  0B89               	decfsz	9,f
  2835     0378  2B73               	goto	u875
  2836     0379  3001               	movlw	1
  2837     037A  00F9               	movwf	??___lldiv
  2838     037B  0879               	movf	??___lldiv,w
  2839     037C  07C8               	addwf	___lldiv@counter,f
  2840     037D                     l1472:
  2841     037D  1FF4               	btfss	___lldiv@divisor+3,7
  2842     037E  2B80               	goto	u881
  2843     037F  2B81               	goto	u880
  2844     0380                     u881:
  2845     0380  2B72               	goto	l1470
  2846     0381                     u880:
  2847     0381                     l1474:
  2848     0381  3001               	movlw	1
  2849     0382                     u895:
  2850     0382  35C4               	lslf	___lldiv@quotient,f
  2851     0383  0DC5               	rlf	___lldiv@quotient+1,f
  2852     0384  0DC6               	rlf	___lldiv@quotient+2,f
  2853     0385  0DC7               	rlf	___lldiv@quotient+3,f
  2854     0386  0B89               	decfsz	9,f
  2855     0387  2B82               	goto	u895
  2856     0388                     l1476:
  2857     0388  0874               	movf	___lldiv@divisor+3,w
  2858     0389  0278               	subwf	___lldiv@dividend+3,w
  2859     038A  1D03               	skipz
  2860     038B  2B96               	goto	u905
  2861     038C  0873               	movf	___lldiv@divisor+2,w
  2862     038D  0277               	subwf	___lldiv@dividend+2,w
  2863     038E  1D03               	skipz
  2864     038F  2B96               	goto	u905
  2865     0390  0872               	movf	___lldiv@divisor+1,w
  2866     0391  0276               	subwf	___lldiv@dividend+1,w
  2867     0392  1D03               	skipz
  2868     0393  2B96               	goto	u905
  2869     0394  0871               	movf	___lldiv@divisor,w
  2870     0395  0275               	subwf	___lldiv@dividend,w
  2871     0396                     u905:
  2872     0396  1C03               	skipc
  2873     0397  2B99               	goto	u901
  2874     0398  2B9A               	goto	u900
  2875     0399                     u901:
  2876     0399  2BA3               	goto	l1482
  2877     039A                     u900:
  2878     039A                     l1478:
  2879     039A  0871               	movf	___lldiv@divisor,w
  2880     039B  02F5               	subwf	___lldiv@dividend,f
  2881     039C  0872               	movf	___lldiv@divisor+1,w
  2882     039D  3BF6               	subwfb	___lldiv@dividend+1,f
  2883     039E  0873               	movf	___lldiv@divisor+2,w
  2884     039F  3BF7               	subwfb	___lldiv@dividend+2,f
  2885     03A0  0874               	movf	___lldiv@divisor+3,w
  2886     03A1  3BF8               	subwfb	___lldiv@dividend+3,f
  2887     03A2                     l1480:
  2888     03A2  1444               	bsf	___lldiv@quotient,0
  2889     03A3                     l1482:
  2890     03A3  3001               	movlw	1
  2891     03A4                     u915:
  2892     03A4  36F4               	lsrf	___lldiv@divisor+3,f
  2893     03A5  0CF3               	rrf	___lldiv@divisor+2,f
  2894     03A6  0CF2               	rrf	___lldiv@divisor+1,f
  2895     03A7  0CF1               	rrf	___lldiv@divisor,f
  2896     03A8  0B89               	decfsz	9,f
  2897     03A9  2BA4               	goto	u915
  2898     03AA                     l1484:
  2899     03AA  3001               	movlw	1
  2900     03AB  02C8               	subwf	___lldiv@counter,f
  2901     03AC  1D03               	btfss	3,2
  2902     03AD  2BAF               	goto	u921
  2903     03AE  2BB0               	goto	u920
  2904     03AF                     u921:
  2905     03AF  2B81               	goto	l1474
  2906     03B0                     u920:
  2907     03B0                     l1486:
  2908     03B0  0847               	movf	___lldiv@quotient+3,w
  2909     03B1  00F4               	movwf	?___lldiv+3
  2910     03B2  0846               	movf	___lldiv@quotient+2,w
  2911     03B3  00F3               	movwf	?___lldiv+2
  2912     03B4  0845               	movf	___lldiv@quotient+1,w
  2913     03B5  00F2               	movwf	?___lldiv+1
  2914     03B6  0844               	movf	___lldiv@quotient,w
  2915     03B7  00F1               	movwf	?___lldiv
  2916     03B8                     l450:
  2917     03B8  0008               	return
  2918     03B9                     __end_of___lldiv:
  2919                           
  2920                           	psect	text7
  2921     04D0                     __ptext7:	
  2922 ;; *************** function _USART_TransmitString *****************
  2923 ;; Defined at:
  2924 ;;		line 23 in file "tv_uart.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  out             1    wreg     PTR unsigned char 
  2927 ;;		 -> bf_tx(20), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  out             1    3[COMMON] PTR unsigned char 
  2930 ;;		 -> bf_tx(20), 
  2931 ;;  i               1    4[COMMON] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2945 ;;Total ram usage:        3 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 3
  2948 ;; This function calls:
  2949 ;;		_USART_TransmitChar
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955     04D0                     _USART_TransmitString:	
  2956                           ;psect for function _USART_TransmitString
  2957                           
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _USART_TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2961                           ;USART_TransmitString@out stored from wreg
  2962     04D0  00F3               	movwf	USART_TransmitString@out
  2963     04D1                     l1440:
  2964                           
  2965                           ;tv_uart.c: 24:     for (unsigned char i = 0; i < 17; i++) {
  2966     04D1  01F4               	clrf	USART_TransmitString@i
  2967     04D2                     l1446:
  2968                           
  2969                           ;tv_uart.c: 25:         USART_TransmitChar(out[i]);
  2970     04D2  0874               	movf	USART_TransmitString@i,w
  2971     04D3  0773               	addwf	USART_TransmitString@out,w
  2972     04D4  00F2               	movwf	??_USART_TransmitString
  2973     04D5  0872               	movf	??_USART_TransmitString,w
  2974     04D6  0086               	movwf	6
  2975     04D7  0187               	clrf	7
  2976     04D8  0801               	movf	1,w
  2977     04D9  3185  2509  3184   	fcall	_USART_TransmitChar
  2978     04DC                     l1448:
  2979                           
  2980                           ;tv_uart.c: 26:     }
  2981     04DC  3001               	movlw	1
  2982     04DD  00F2               	movwf	??_USART_TransmitString
  2983     04DE  0872               	movf	??_USART_TransmitString,w
  2984     04DF  07F4               	addwf	USART_TransmitString@i,f
  2985     04E0                     l1450:
  2986     04E0  3011               	movlw	17
  2987     04E1  0274               	subwf	USART_TransmitString@i,w
  2988     04E2  1C03               	skipc
  2989     04E3  2CE5               	goto	u831
  2990     04E4  2CE6               	goto	u830
  2991     04E5                     u831:
  2992     04E5  2CD2               	goto	l1446
  2993     04E6                     u830:
  2994     04E6                     l247:
  2995     04E6  0008               	return
  2996     04E7                     __end_of_USART_TransmitString:
  2997                           
  2998                           	psect	text8
  2999     0509                     __ptext8:	
  3000 ;; *************** function _USART_TransmitChar *****************
  3001 ;; Defined at:
  3002 ;;		line 18 in file "tv_uart.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  out             1    wreg     unsigned char 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  out             1    1[COMMON] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;Total ram usage:        1 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 2
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_USART_TransmitString
  3027 ;;		_putch
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031     0509                     _USART_TransmitChar:	
  3032                           ;psect for function _USART_TransmitChar
  3033                           
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _USART_TransmitChar: [wreg]
  3037                           ;USART_TransmitChar@out stored from wreg
  3038     0509  00F1               	movwf	USART_TransmitChar@out
  3039     050A                     l1330:
  3040     050A                     l239:	
  3041                           ;tv_uart.c: 19:     while (TXIF == 0);
  3042                           
  3043     050A  0020               	movlb	0	; select bank0
  3044     050B  1E11               	btfss	17,4	;volatile
  3045     050C  2D0E               	goto	u701
  3046     050D  2D0F               	goto	u700
  3047     050E                     u701:
  3048     050E  2D0A               	goto	l239
  3049     050F                     u700:
  3050     050F                     l1332:
  3051                           
  3052                           ;tv_uart.c: 20:     TXREG = out;
  3053     050F  0871               	movf	USART_TransmitChar@out,w
  3054     0510  0023               	movlb	3	; select bank3
  3055     0511  009A               	movwf	26	;volatile
  3056     0512                     l242:
  3057     0512  0008               	return
  3058     0513                     __end_of_USART_TransmitChar:
  3059                           
  3060                           	psect	text9
  3061     04E7                     __ptext9:	
  3062 ;; *************** function _USART_Init *****************
  3063 ;; Defined at:
  3064 ;;		line 5 in file "tv_uart.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3082 ;;Total ram usage:        0 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 2
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092     04E7                     _USART_Init:	
  3093                           ;psect for function _USART_Init
  3094                           
  3095     04E7                     l1420:	
  3096                           ;incstack = 0
  3097                           ; Regs used in _USART_Init: [wreg]
  3098                           
  3099                           
  3100                           ;tv_uart.c: 6:     TRISC4 = 0;
  3101     04E7  0021               	movlb	1	; select bank1
  3102     04E8  120E               	bcf	14,4	;volatile
  3103                           
  3104                           ;tv_uart.c: 7:     TRISC5 = 1;
  3105     04E9  168E               	bsf	14,5	;volatile
  3106                           
  3107                           ;tv_uart.c: 8:     SPBRG = 34;
  3108     04EA  3000               	movlw	0
  3109     04EB  0023               	movlb	3	; select bank3
  3110     04EC  009C               	movwf	28	;volatile
  3111     04ED  3022               	movlw	34
  3112     04EE  009B               	movwf	27	;volatile
  3113     04EF                     l1422:
  3114                           
  3115                           ;tv_uart.c: 9:     TXSTA = 0x20;
  3116     04EF  3020               	movlw	32
  3117     04F0  009E               	movwf	30	;volatile
  3118                           
  3119                           ;tv_uart.c: 10:     RCSTA = 0x90;
  3120     04F1  3090               	movlw	144
  3121     04F2  009D               	movwf	29	;volatile
  3122     04F3                     l1424:
  3123                           
  3124                           ;tv_uart.c: 11:     BRG16 = 1;
  3125     04F3  159F               	bsf	31,3	;volatile
  3126     04F4                     l1426:
  3127                           
  3128                           ;tv_uart.c: 12:     BRGH = 1;
  3129     04F4  151E               	bsf	30,2	;volatile
  3130     04F5                     l1428:
  3131                           
  3132                           ;tv_uart.c: 13:     INTCONbits.GIE = 1;
  3133     04F5  178B               	bsf	11,7	;volatile
  3134     04F6                     l1430:
  3135                           
  3136                           ;tv_uart.c: 14:     INTCONbits.PEIE = 1;
  3137     04F6  170B               	bsf	11,6	;volatile
  3138     04F7                     l1432:
  3139                           
  3140                           ;tv_uart.c: 15:     PIE1bits.RCIE = 1;
  3141     04F7  0021               	movlb	1	; select bank1
  3142     04F8  1691               	bsf	17,5	;volatile
  3143     04F9                     l236:
  3144     04F9  0008               	return
  3145     04FA                     __end_of_USART_Init:
  3146                           
  3147                           	psect	text10
  3148     04FA                     __ptext10:	
  3149 ;; *************** function _Cmd_Aht10 *****************
  3150 ;; Defined at:
  3151 ;;		line 4 in file "tv_aht10.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0, pclath, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used: 1
  3171 ;; Hardware stack levels required when called: 3
  3172 ;; This function calls:
  3173 ;;		_i2c_start
  3174 ;;		_i2c_stop
  3175 ;;		_i2c_write
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181     04FA                     _Cmd_Aht10:	
  3182                           ;psect for function _Cmd_Aht10
  3183                           
  3184     04FA                     l1434:	
  3185                           ;incstack = 0
  3186                           ; Regs used in _Cmd_Aht10: [wreg+status,2+status,0+pclath+cstack]
  3187                           
  3188                           
  3189                           ;tv_aht10.c: 5:     i2c_start();
  3190     04FA  3185  251C  3184   	fcall	_i2c_start
  3191     04FD                     l1436:
  3192                           
  3193                           ;tv_aht10.c: 6:     i2c_write(0x70);
  3194     04FD  3070               	movlw	112
  3195     04FE  3184  24A9  3184   	fcall	_i2c_write
  3196     0501                     l1438:
  3197                           
  3198                           ;tv_aht10.c: 7:     i2c_write(0xac);
  3199     0501  30AC               	movlw	172
  3200     0502  3184  24A9  3184   	fcall	_i2c_write
  3201                           
  3202                           ;tv_aht10.c: 10:     i2c_stop();
  3203     0505  3185  2513  3184   	fcall	_i2c_stop
  3204     0508                     l116:
  3205     0508  0008               	return
  3206     0509                     __end_of_Cmd_Aht10:
  3207                           
  3208                           	psect	text11
  3209     04A9                     __ptext11:	
  3210 ;; *************** function _i2c_write *****************
  3211 ;; Defined at:
  3212 ;;		line 23 in file "tv_i2c.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  DATA            1    wreg     unsigned char 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  DATA            1    3[COMMON] unsigned char 
  3217 ;;  i               1    4[COMMON] unsigned char 
  3218 ;;  j               1    0        unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;Total ram usage:        4 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 2
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_read_temp
  3239 ;;		_Cmd_Aht10
  3240 ;;		_READ_T_H_AHT10
  3241 ;;		_SEND_TO_LCD_I2C
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245     04A9                     _i2c_write:	
  3246                           ;psect for function _i2c_write
  3247                           
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  3251                           ;i2c_write@DATA stored from wreg
  3252     04A9  00F3               	movwf	i2c_write@DATA
  3253     04AA                     l1336:
  3254                           
  3255                           ;tv_i2c.c: 23: void i2c_write(unsigned char DATA);tv_i2c.c: 24: {;tv_i2c.c: 25:     unsi
      +                          gned char i,j;;tv_i2c.c: 26:     TRISC2=0;
  3256     04AA  0021               	movlb	1	; select bank1
  3257     04AB  110E               	bcf	14,2	;volatile
  3258                           
  3259                           ;tv_i2c.c: 27:     TRISC1=0;
  3260     04AC  108E               	bcf	14,1	;volatile
  3261     04AD                     l1338:
  3262                           
  3263                           ;tv_i2c.c: 28:     for(i=0;i<=8;i++)
  3264     04AD  01F4               	clrf	i2c_write@i
  3265     04AE                     l1344:
  3266                           
  3267                           ;tv_i2c.c: 29:     {;tv_i2c.c: 30:         if((DATA<<i) & 0x80) LATC2=1;
  3268     04AE  0873               	movf	i2c_write@DATA,w
  3269     04AF  00F1               	movwf	??_i2c_write
  3270     04B0  01F2               	clrf	??_i2c_write+1
  3271     04B1  0A74               	incf	i2c_write@i,w
  3272     04B2  2CB5               	goto	u714
  3273     04B3                     u715:
  3274     04B3  35F1               	lslf	??_i2c_write,f
  3275     04B4  0DF2               	rlf	??_i2c_write+1,f
  3276     04B5                     u714:
  3277     04B5  0B89               	decfsz	9,f
  3278     04B6  2CB3               	goto	u715
  3279     04B7  1FF1               	btfss	??_i2c_write,7
  3280     04B8  2CBA               	goto	u721
  3281     04B9  2CBB               	goto	u720
  3282     04BA                     u721:
  3283     04BA  2CBE               	goto	l147
  3284     04BB                     u720:
  3285     04BB                     l1346:
  3286     04BB  0022               	movlb	2	; select bank2
  3287     04BC  150E               	bsf	14,2	;volatile
  3288     04BD  2CC0               	goto	l148
  3289     04BE                     l147:	
  3290                           ;tv_i2c.c: 31:         else LATC2=0;
  3291                           
  3292     04BE  0022               	movlb	2	; select bank2
  3293     04BF  110E               	bcf	14,2	;volatile
  3294     04C0                     l148:
  3295                           
  3296                           ;tv_i2c.c: 32:         LATC1=1;
  3297     04C0  148E               	bsf	14,1	;volatile
  3298                           
  3299                           ;tv_i2c.c: 34:         _delay((unsigned long)((1)*(16000000/4000000.0)));
  3300     04C1  3200               	nop2	;2 cycle nop
  3301     04C2  3200               	nop2	;2 cycle nop
  3302                           
  3303                           ;tv_i2c.c: 35:         LATC1=0;
  3304     04C3  0022               	movlb	2	; select bank2
  3305     04C4  108E               	bcf	14,1	;volatile
  3306     04C5                     l1348:
  3307                           
  3308                           ;tv_i2c.c: 36:     }
  3309     04C5  3001               	movlw	1
  3310     04C6  00F1               	movwf	??_i2c_write
  3311     04C7  0871               	movf	??_i2c_write,w
  3312     04C8  07F4               	addwf	i2c_write@i,f
  3313     04C9                     l1350:
  3314     04C9  3009               	movlw	9
  3315     04CA  0274               	subwf	i2c_write@i,w
  3316     04CB  1C03               	skipc
  3317     04CC  2CCE               	goto	u731
  3318     04CD  2CCF               	goto	u730
  3319     04CE                     u731:
  3320     04CE  2CAE               	goto	l1344
  3321     04CF                     u730:
  3322     04CF                     l149:
  3323     04CF  0008               	return
  3324     04D0                     __end_of_i2c_write:
  3325                           
  3326                           	psect	text12
  3327     0513                     __ptext12:	
  3328 ;; *************** function _i2c_stop *****************
  3329 ;; Defined at:
  3330 ;;		line 13 in file "tv_i2c.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		None
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 2
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_read_temp
  3355 ;;		_Cmd_Aht10
  3356 ;;		_READ_T_H_AHT10
  3357 ;;		_SEND_TO_LCD_I2C
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361     0513                     _i2c_stop:	
  3362                           ;psect for function _i2c_stop
  3363                           
  3364     0513                     l1378:	
  3365                           ;incstack = 0
  3366                           ; Regs used in _i2c_stop: []
  3367                           
  3368                           
  3369                           ;tv_i2c.c: 15:     TRISC2 = 0;
  3370     0513  0021               	movlb	1	; select bank1
  3371     0514  110E               	bcf	14,2	;volatile
  3372                           
  3373                           ;tv_i2c.c: 16:     TRISC1 = 0;
  3374     0515  108E               	bcf	14,1	;volatile
  3375                           
  3376                           ;tv_i2c.c: 17:     LATC2 = 0;
  3377     0516  0022               	movlb	2	; select bank2
  3378     0517  110E               	bcf	14,2	;volatile
  3379                           
  3380                           ;tv_i2c.c: 18:     LATC1 = 0;
  3381     0518  108E               	bcf	14,1	;volatile
  3382                           
  3383                           ;tv_i2c.c: 19:     LATC1 = 1;
  3384     0519  148E               	bsf	14,1	;volatile
  3385                           
  3386                           ;tv_i2c.c: 20:     LATC2 = 1;
  3387     051A  150E               	bsf	14,2	;volatile
  3388     051B                     l142:
  3389     051B  0008               	return
  3390     051C                     __end_of_i2c_stop:
  3391                           
  3392                           	psect	text13
  3393     051C                     __ptext13:	
  3394 ;; *************** function _i2c_start *****************
  3395 ;; Defined at:
  3396 ;;		line 3 in file "tv_i2c.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		None
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 2
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_read_temp
  3421 ;;		_Cmd_Aht10
  3422 ;;		_READ_T_H_AHT10
  3423 ;;		_SEND_TO_LCD_I2C
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427     051C                     _i2c_start:	
  3428                           ;psect for function _i2c_start
  3429                           
  3430     051C                     l1334:	
  3431                           ;incstack = 0
  3432                           ; Regs used in _i2c_start: []
  3433                           
  3434                           
  3435                           ;tv_i2c.c: 5:     TRISC2 = 0;
  3436     051C  0021               	movlb	1	; select bank1
  3437     051D  110E               	bcf	14,2	;volatile
  3438                           
  3439                           ;tv_i2c.c: 6:     TRISC1 = 0;
  3440     051E  108E               	bcf	14,1	;volatile
  3441                           
  3442                           ;tv_i2c.c: 7:     LATC2 = 1;
  3443     051F  0022               	movlb	2	; select bank2
  3444     0520  150E               	bsf	14,2	;volatile
  3445                           
  3446                           ;tv_i2c.c: 8:     LATC1 = 1;
  3447     0521  148E               	bsf	14,1	;volatile
  3448                           
  3449                           ;tv_i2c.c: 9:     LATC2 = 0;
  3450     0522  110E               	bcf	14,2	;volatile
  3451                           
  3452                           ;tv_i2c.c: 10:     LATC1 = 0;
  3453     0523  108E               	bcf	14,1	;volatile
  3454     0524                     l139:
  3455     0524  0008               	return
  3456     0525                     __end_of_i2c_start:
  3457                           
  3458                           	psect	intentry
  3459     0004                     __pintentry:	
  3460 ;; *************** function _ngat_uart *****************
  3461 ;; Defined at:
  3462 ;;		line 114 in file "main.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;Total ram usage:        1 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 1
  3483 ;; This function calls:
  3484 ;;		_USART_ReceiveChar
  3485 ;; This function is called by:
  3486 ;;		Interrupt level 1
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490     0004                     _ngat_uart:
  3491                           
  3492                           ;incstack = 0
  3493     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3494                           
  3495                           ; Regs used in _ngat_uart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3496     0005  3180               	pagesel	$
  3497     0006                     i1l1650:
  3498                           
  3499                           ;main.c: 115:     byte_rx = USART_ReceiveChar();
  3500     0006  3185  2525  3180   	fcall	_USART_ReceiveChar
  3501     0009  0020               	movlb	0	; select bank0
  3502     000A  00AE               	movwf	_byte_rx	;volatile
  3503     000B                     i1l1652:
  3504                           
  3505                           ;main.c: 116:     if (byte_rx == 'S') {
  3506     000B  3053               	movlw	83
  3507     000C  062E               	xorwf	_byte_rx,w	;volatile
  3508     000D  1D03               	btfss	3,2
  3509     000E  2810               	goto	u118_21
  3510     000F  2811               	goto	u118_20
  3511     0010                     u118_21:
  3512     0010  2814               	goto	i1l1658
  3513     0011                     u118_20:
  3514     0011                     i1l1654:
  3515                           
  3516                           ;main.c: 117:         ena_rx = 1;
  3517     0011  14FC               	bsf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3518     0012                     i1l1656:
  3519                           
  3520                           ;main.c: 118:         rx_index = 0;
  3521     0012  01AD               	clrf	_rx_index	;volatile
  3522                           
  3523                           ;main.c: 119:     } else if (byte_rx != 'P' && ena_rx == 1) {
  3524     0013  2843               	goto	i1l103
  3525     0014                     i1l1658:
  3526     0014  3050               	movlw	80
  3527     0015  062E               	xorwf	_byte_rx,w	;volatile
  3528     0016  1903               	btfsc	3,2
  3529     0017  2819               	goto	u119_21
  3530     0018  281A               	goto	u119_20
  3531     0019                     u119_21:
  3532     0019  2830               	goto	i1l1670
  3533     001A                     u119_20:
  3534     001A                     i1l1660:
  3535     001A  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3536     001B  281D               	goto	u120_21
  3537     001C  281E               	goto	u120_20
  3538     001D                     u120_21:
  3539     001D  2830               	goto	i1l1670
  3540     001E                     u120_20:
  3541     001E                     i1l1662:
  3542                           
  3543                           ;main.c: 120:         bf_rx[rx_index] = byte_rx;
  3544     001E  082D               	movf	_rx_index,w
  3545     001F  3E28               	addlw	(low (_bf_rx| 0))& (0+255)
  3546     0020  0086               	movwf	6
  3547     0021  0187               	clrf	7
  3548     0022  082E               	movf	_byte_rx,w	;volatile
  3549     0023  0081               	movwf	1
  3550     0024                     i1l1664:
  3551                           
  3552                           ;main.c: 121:         rx_index++;
  3553     0024  3001               	movlw	1
  3554     0025  00F0               	movwf	??_ngat_uart
  3555     0026  0870               	movf	??_ngat_uart,w
  3556     0027  07AD               	addwf	_rx_index,f	;volatile
  3557     0028                     i1l1666:
  3558                           
  3559                           ;main.c: 122:         if (rx_index > 1) ena_rx = 0;
  3560     0028  3002               	movlw	2
  3561     0029  022D               	subwf	_rx_index,w	;volatile
  3562     002A  1C03               	skipc
  3563     002B  282D               	goto	u121_21
  3564     002C  282E               	goto	u121_20
  3565     002D                     u121_21:
  3566     002D  2843               	goto	i1l103
  3567     002E                     u121_20:
  3568     002E                     i1l1668:
  3569     002E  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3570     002F  2843               	goto	i1l103
  3571     0030                     i1l1670:
  3572     0030  3050               	movlw	80
  3573     0031  062E               	xorwf	_byte_rx,w	;volatile
  3574     0032  1D03               	btfss	3,2
  3575     0033  2835               	goto	u122_21
  3576     0034  2836               	goto	u122_20
  3577     0035                     u122_21:
  3578     0035  2843               	goto	i1l103
  3579     0036                     u122_20:
  3580     0036                     i1l1672:
  3581     0036  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3582     0037  2839               	goto	u123_21
  3583     0038  283A               	goto	u123_20
  3584     0039                     u123_21:
  3585     0039  2843               	goto	i1l103
  3586     003A                     u123_20:
  3587     003A                     i1l1674:
  3588                           
  3589                           ;main.c: 124:         if (bf_rx[0] == '1') {
  3590     003A  3031               	movlw	49
  3591     003B  0628               	xorwf	_bf_rx,w
  3592     003C  1D03               	btfss	3,2
  3593     003D  283F               	goto	u124_21
  3594     003E  2840               	goto	u124_20
  3595     003F                     u124_21:
  3596     003F  2843               	goto	i1l100
  3597     0040                     u124_20:
  3598     0040                     i1l1676:
  3599                           
  3600                           ;main.c: 125:             ena_send = 1;
  3601     0040  147C               	bsf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  3602                           
  3603                           ;main.c: 126:             ena_rx = 0;
  3604     0041  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3605     0042  2843               	goto	i1l103
  3606     0043                     i1l100:
  3607     0043                     i1l103:
  3608     0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3609     0044  0009               	retfie
  3610     0045                     __end_of_ngat_uart:
  3611                           
  3612                           	psect	text15
  3613     0525                     __ptext15:	
  3614 ;; *************** function _USART_ReceiveChar *****************
  3615 ;; Defined at:
  3616 ;;		line 29 in file "tv_uart.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      unsigned char 
  3623 ;; Registers used:
  3624 ;;		wreg
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;Total ram usage:        0 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_ngat_uart
  3640 ;;		_USART_ReceiveString
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644     0525                     _USART_ReceiveChar:	
  3645                           ;psect for function _USART_ReceiveChar
  3646                           
  3647     0525                     i1l1452:	
  3648                           ;incstack = 0
  3649                           ; Regs used in _USART_ReceiveChar: [wreg]
  3650                           
  3651     0525                     i1l250:	
  3652                           ;tv_uart.c: 34:     };
  3653                           
  3654                           
  3655                           ;tv_uart.c: 33:     while (PIR1bits.RCIF == 0) {
  3656     0525  0020               	movlb	0	; select bank0
  3657     0526  1E91               	btfss	17,5	;volatile
  3658     0527  2D29               	goto	u84_21
  3659     0528  2D2A               	goto	u84_20
  3660     0529                     u84_21:
  3661     0529  2D25               	goto	i1l250
  3662     052A                     u84_20:
  3663     052A                     i1l1454:
  3664                           
  3665                           ;tv_uart.c: 36:     return (RCREG);
  3666     052A  0023               	movlb	3	; select bank3
  3667     052B  0819               	movf	25,w	;volatile
  3668     052C                     i1l253:
  3669     052C  0008               	return
  3670     052D                     __end_of_USART_ReceiveChar:
  3671     007E                     btemp	set	126	;btemp
  3672     007E                     int$flags	set	126
  3673     007E                     wtemp0	set	126
  3674                           
  3675                           	psect	config
  3676                           
  3677                           ;Config register CONFIG1 @ 0x8007
  3678                           ;	Oscillator Selection
  3679                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3680                           ;	Watchdog Timer Enable
  3681                           ;	WDTE = OFF, WDT disabled
  3682                           ;	Power-up Timer Enable
  3683                           ;	PWRTE = OFF, PWRT disabled
  3684                           ;	MCLR Pin Function Select
  3685                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3686                           ;	Flash Program Memory Code Protection
  3687                           ;	CP = OFF, Program memory code protection is disabled
  3688                           ;	Data Memory Code Protection
  3689                           ;	CPD = OFF, Data memory code protection is disabled
  3690                           ;	Brown-out Reset Enable
  3691                           ;	BOREN = OFF, Brown-out Reset disabled
  3692                           ;	Clock Out Enable
  3693                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3694                           ;	Internal/External Switchover
  3695                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3696                           ;	Fail-Safe Clock Monitor Enable
  3697                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3698     8007                     	org	32775
  3699     8007  09A4               	dw	2468
  3700                           
  3701                           ;Config register CONFIG2 @ 0x8008
  3702                           ;	Flash Memory Self-Write Protection
  3703                           ;	WRT = OFF, Write protection off
  3704                           ;	PLL Enable
  3705                           ;	PLLEN = OFF, 4x PLL disabled
  3706                           ;	Stack Overflow/Underflow Reset Enable
  3707                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  3708                           ;	Brown-out Reset Voltage Selection
  3709                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3710                           ;	Low-Voltage Programming Enable
  3711                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3712     8008                     	org	32776
  3713     8008  1CFF               	dw	7423

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         36
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     26      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USART_TransmitString@out	PTR unsigned char  size(1) Largest target is 20
		 -> bf_tx(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->___llmod
    _read_temp->_i2c_read
    _read_temp->_i2c_write
    ___lwmod->___lwdiv
    ___llmod->___lldiv
    _USART_TransmitString->_USART_TransmitChar
    _Cmd_Aht10->_i2c_write

Critical Paths under _ngat_uart in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_temp
    ___llmod->___lldiv

Critical Paths under _ngat_uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ngat_uart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ngat_uart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ngat_uart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ngat_uart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ngat_uart in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ngat_uart in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ngat_uart in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ngat_uart in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ngat_uart in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ngat_uart in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ngat_uart in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ngat_uart in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5338
                                             24 BANK0      2     2      0
                          _Cmd_Aht10
                         _USART_Init
               _USART_TransmitString
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                          _read_temp
 ---------------------------------------------------------------------------------
 (1) _read_temp                                           28    24      4     364
                                              5 COMMON     4     0      4
                                              0 BANK0     24    24      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             4     4      0     136
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1672
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1074
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8    1071
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     922
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USART_TransmitString                                 3     3      0     145
                                              2 COMMON     3     3      0
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Cmd_Aht10                                            0     0      0      90
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            5     5      0      90
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ngat_uart                                            1     1      0       0
                                              0 COMMON     1     1      0
                  _USART_ReceiveChar
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cmd_Aht10
     _i2c_start
     _i2c_stop
     _i2c_write
   _USART_Init
   _USART_TransmitString
     _USART_TransmitChar
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _read_temp
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write

 _ngat_uart (ROOT)
   _USART_ReceiveChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun 21 05:41:44 2024

                          l72 0354                            l73 035D                           l116 0508  
                         l142 051B                           l152 047D                           l153 0499  
                         l242 0512                           l139 0524                           l147 04BE  
                         l148 04C0                           l236 04F9                           l156 04A3  
                         l149 04CF                           l157 04A5                           l158 04A8  
                         l239 050A                           l247 04E6                           l450 03B8  
                         l704 0474                           l644 0403                           l694 043F  
                         u700 050F                           u701 050E                           u720 04BB  
                         u800 0311                           u721 04BA                           u730 04CF  
                         u714 04B5                           u810 0334                           u731 04CE  
                         u715 04B3                           u811 0333                           u900 039A  
                         u740 0484                           u820 034B                           u901 0399  
                         u741 0483                           u821 034A                           u805 030D  
                         u830 04E6                           u750 0499                           u831 04E5  
                         u751 0498                           u920 03B0                           u760 04A0  
                         u921 03AF                           u905 0396                           u761 049F  
                         u930 03C2                           u915 03A4                           u931 03C1  
                         u860 036F                           u861 036E                           u950 03D4  
                         u790 02FE                           u951 03D3                           u880 0381  
                         u960 03E6                           u881 0380                           u961 03E5  
                         u945 03C6                           u875 0373                           u795 02FA  
                         u980 03FB                           u981 03FA                           u965 03E2  
                         u990 040C                           u895 0382                           u975 03EF  
                         u991 040B                           _mp2 005E                           _mq2 002B  
                         wreg 0009                          l1400 02B9                          l1330 050A  
                        l1410 0327                          l1402 02CB                          l1420 04E7  
                        l1332 050F                          l1500 03E6                          l1412 0334  
                        l1404 02DC                          l1334 051C                          l1350 04C9  
                        l1430 04F6                          l1422 04EF                          l1502 03EE  
                        l1510 0404                          l1414 033D                          l1406 02ED  
                        l1344 04AE                          l1336 04AA                          l1432 04F7  
                        l1424 04F3                          l1440 04D1                          l1504 03F5  
                        l1520 0418                          l1512 0406                          l1360 0484  
                        l1352 0476                          l1416 034B                          l1408 02F0  
                        l1346 04BB                          l1338 04AD                          l1434 04FA  
                        l1426 04F4                          l1450 04E0                          l1506 03FB  
                        l1530 0435                          l1522 041C                          l1514 040C  
                        l1370 049B                          l1362 0487                          l1354 047C  
                        l1348 04C5                          l1436 04FD                          l1428 04F5  
                        l1524 042B                          l1516 040F                          l1532 043B  
                        l1372 04A0                          l1364 0489                          l1438 0501  
                        l1446 04D2                          l1470 0372                          l1526 042F  
                        l1518 0414                          l1374 04A7                          l1366 048B  
                        l1390 02A6                          l1448 04DC                          l1480 03A2  
                        l1472 037D                          l1528 0430                          l1368 048F  
                        l1392 02A9                          l1800 0066                          l1378 0513  
                        l1482 03A3                          l1474 0381                          l1466 035E  
                        l1490 03B9                          l1394 02AD                          l1810 0072  
                        l1802 0068                          l1484 03AA                          l1476 0388  
                        l1468 036F                          l1492 03C2                          l1396 02B1  
                        l1820 00B0                          l1812 0074                          l1804 006B  
                        l1478 039A                          l1486 03B0                          l1494 03C5  
                        l1398 02B5                          l1830 00F7                          l1822 00CB  
                        l1814 0076                          l1806 006E                          l1496 03D0  
                        l1840 012E                          l1832 0104                          l1824 00DB  
                        l1816 007A                          l1808 0070                          l1498 03D4  
                        l1770 044F                          l1850 0205                          l1842 0159  
                        l1834 0112                          l1826 00DE                          l1818 0095  
                        l1780 046A                          l1772 0453                          l1764 0440  
                        l1860 028B                          l1852 0223                          l1844 0184  
                        l1836 0115                          l1828 00EB                          l1774 0457  
                        l1766 0447                          l1782 0470                          l1862 029A  
                        l1854 023A                          l1846 01AF                          l1838 0122  
                        l1790 005C                          l1776 0461                          l1768 044A  
                        l1864 029E                          l1856 0255                          l1848 01DA  
                        l1792 005E                          l1778 0465                          l1866 029F  
                        l1858 0270                          l1794 0060                          l1786 0058  
                        l1796 0062                          l1788 005B                          l1798 0064  
                        _BRGH 0CF2                          u1010 041C                          u1011 041B  
                        u1005 0410                          u1030 042B                          u1031 042A  
                        u1025 041D                          u1050 043B                          u1051 043A  
                        u1035 0427                          u1045 0431                          u1410 0457  
                        u1411 0456                          u1420 0461                          u1421 0460  
                        u1405 044B                          u1440 0470                          u1441 046F  
                        u1425 045D                          u1450 0104                          u1435 0466  
                        u1507 0220                          u1451 0103                          u1460 0112  
                        u1517 022B                          u1461 0111                          u1390 0447  
                        u1470 029E                          u1391 0446                          u1527 048C  
                        u1471 029D                          u1487 00E4                          u1497 011B  
                        _TXIF 008C                          _main 0058                          _temp 0020  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                          start 0045                    i2c_write@i 0074  
                 i2c_read@ACK 0072                         ?_main 0070                         _ADRES 009B  
                       _BRG16 0CFB               __end_of___lldiv 03B9               __end_of___llmod 0404  
                       _LATC1 0871                         _LATC2 0872               __end_of___lwdiv 0440  
                       i1l100 0043                         i1l103 0043                         i1l250 0525  
                       i1l253 052C               __end_of___lwmod 0475                         _RCREG 0199  
                       _RCSTA 019D                         _SPBRG 019B                         u84_20 052A  
                       u84_21 0529                         _TXREG 019A                         _TXSTA 019E  
                       _bf_rx 0028                         _bf_tx 0030          _USART_TransmitString 04D0  
              __pbitbssCOMMON 03E0                         status 0003                         wtemp0 007E  
                 ?_USART_Init 0070               __initialization 0047                  __end_of_main 02A6  
            __end_of_i2c_read 04A9              __end_of_i2c_stop 051C                        ??_main 005C  
                i2c_read@DATA 0074                        _ADCON0 009D                        _ADCON1 009E  
       ?_USART_TransmitString 0070              ___llmod@dividend 004D                        u120_20 001E  
                      u120_21 001D                        i1l1452 0525                        i1l1454 052A  
                      u121_20 002E                        u121_21 002D                        i1l1650 0006  
                      i1l1660 001A                        i1l1652 000B                        i1l1662 001E  
                      i1l1670 0030                        i1l1654 0011                        i1l1672 0036  
                      u122_20 0036                        i1l1664 0024                        i1l1656 0012  
                      u122_21 0035                        i1l1674 003A                        i1l1666 0028  
                      i1l1658 0014                        i1l1676 0040                        i1l1668 002E  
                      u123_20 003A                        u123_21 0039                        u124_20 0040  
                      u124_21 003F                        u118_20 0011                        u118_21 0010  
                      u119_20 001A                        u119_21 0019                        _OSCCON 0099  
                      _TRISC1 0471                        _TRISC2 0472                        _TRISC4 0474  
                      _TRISC5 0475                     ??___lldiv 0079                     ??___llmod 007A  
                      _ena_rx 03E1                     ??___lwdiv 0075                     ??___lwmod 0079  
  __end_of_USART_TransmitChar 0513             __end_of_Cmd_Aht10 0509       __end_of__initialization 0054  
              __pcstackCOMMON 0070                  __pidataBANK0 0533             __end_of_i2c_start 0525  
           __end_of_i2c_write 04D0       USART_TransmitString@out 0073        ??_USART_TransmitString 0072  
                  __pbssBANK0 0020                     ?_i2c_read 0070                     ?_i2c_stop 0070  
                  __pmaintext 0058                    __pintentry 0004                    ??_i2c_read 0071  
                  ??_i2c_stop 0071                  ??_USART_Init 0071                       ___lldiv 035E  
                     ___llmod 03B9                       ___lwdiv 0404                       ___lwmod 0440  
                     __ptext1 02A6                       __ptext2 0475                       __ptext3 0440  
                     __ptext4 0404                       __ptext5 03B9                       __ptext6 035E  
                     __ptext7 04D0                       __ptext8 0509                       __ptext9 04E7  
           __end_of_ngat_uart 0045                       _byte_rx 002E             __end_of_read_temp 035E  
          __end_of_USART_Init 04FA                       clrloop0 052E          end_of_initialization 0054  
             ___lldiv@divisor 0071               ___lldiv@counter 0048                     _PORTCbits 000E  
               i2c_write@DATA 0073                  read_temp@dt1 004C                  read_temp@dt2 0050  
                read_temp@dt3 0054                     _TRISAbits 008C                     _TRISCbits 008E  
       USART_TransmitChar@out 0071                     _Cmd_Aht10 04FA                     i2c_read@i 0073  
          _USART_TransmitChar 0509           ?_USART_TransmitChar 0070           start_initialization 0047  
                   _i2c_start 051C                     _i2c_write 04A9          ??_USART_TransmitChar 0071  
       USART_TransmitString@i 0074                    ?_Cmd_Aht10 0070               ___llmod@divisor 0049  
             ___llmod@counter 007B             _USART_ReceiveChar 0525            ?_USART_ReceiveChar 0070  
                 __pdataBANK0 0060           ??_USART_ReceiveChar 0070                     ___latbits 0002  
               __pcstackBANK0 0044                    ?_i2c_start 0070                    ?_i2c_write 0070  
   __end_of_USART_ReceiveChar 052D                     __pnvBANK0 005E              ___lwdiv@dividend 0073  
                    ?___lldiv 0071                      ?___llmod 0049                      ?___lwdiv 0071  
                    ?___lwmod 0044              ___lwdiv@quotient 0076                     _ngat_uart 0004  
                   _read_temp 02A6                   ??_Cmd_Aht10 0075                      _LATAbits 010C  
                    _LATCbits 010E                     clear_ram0 052D                      _PIE1bits 0091  
                    _PIR1bits 0011                    _ADCON0bits 009D                   ??_i2c_start 0071  
                 ??_i2c_write 0071                    ?_ngat_uart 0070                    ?_read_temp 0075  
                    _i2c_read 0475                      _i2c_stop 0513                 _LCD_BACKLIGHT 0060  
                  _ANSELAbits 018C                    _ANSELCbits 018E               ___lwdiv@divisor 0071  
             ___lwdiv@counter 0078                      __ptext10 04FA                      __ptext11 04A9  
                    __ptext12 0513                      __ptext13 051C                      __ptext15 0525  
                    _ena_send 03E0                      _temp_glo 0024                      int$flags 007E  
                    _rx_index 002D                    _INTCONbits 000B                   ??_ngat_uart 0070  
                 ??_read_temp 0044                      intlevel1 0000              ___lwmod@dividend 0046  
            ___lldiv@dividend 0075  __end_of_USART_TransmitString 04E7              ___lldiv@quotient 0044  
             ___lwmod@divisor 0044               ___lwmod@counter 007A                 read_temp@temp 0058  
                 _printf_mode 002F                    _USART_Init 04E7  
