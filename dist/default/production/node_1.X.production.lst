

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 19 17:25:16 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1825
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1825 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000E                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     010E                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     011A                     	;# 
   122     011B                     	;# 
   123     011D                     	;# 
   124     011E                     	;# 
   125     018C                     	;# 
   126     018E                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0194                     	;# 
   134     0195                     	;# 
   135     0196                     	;# 
   136     0199                     	;# 
   137     019A                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019C                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019F                     	;# 
   144     020C                     	;# 
   145     020E                     	;# 
   146     0211                     	;# 
   147     0211                     	;# 
   148     0212                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0213                     	;# 
   152     0214                     	;# 
   153     0214                     	;# 
   154     0215                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0216                     	;# 
   158     0216                     	;# 
   159     0217                     	;# 
   160     0217                     	;# 
   161     0291                     	;# 
   162     0291                     	;# 
   163     0292                     	;# 
   164     0293                     	;# 
   165     0294                     	;# 
   166     0295                     	;# 
   167     0295                     	;# 
   168     0296                     	;# 
   169     0298                     	;# 
   170     0298                     	;# 
   171     0299                     	;# 
   172     029A                     	;# 
   173     029B                     	;# 
   174     029C                     	;# 
   175     029D                     	;# 
   176     029E                     	;# 
   177     0311                     	;# 
   178     0311                     	;# 
   179     0312                     	;# 
   180     0313                     	;# 
   181     0318                     	;# 
   182     0318                     	;# 
   183     0319                     	;# 
   184     031A                     	;# 
   185     038C                     	;# 
   186     038E                     	;# 
   187     0391                     	;# 
   188     0392                     	;# 
   189     0393                     	;# 
   190     039A                     	;# 
   191     039C                     	;# 
   192     039D                     	;# 
   193     039E                     	;# 
   194     039F                     	;# 
   195     0415                     	;# 
   196     0416                     	;# 
   197     0417                     	;# 
   198     041C                     	;# 
   199     041D                     	;# 
   200     041E                     	;# 
   201     0FE4                     	;# 
   202     0FE5                     	;# 
   203     0FE6                     	;# 
   204     0FE7                     	;# 
   205     0FE8                     	;# 
   206     0FE9                     	;# 
   207     0FEA                     	;# 
   208     0FEB                     	;# 
   209     0FED                     	;# 
   210     0FEE                     	;# 
   211     0FEF                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000E                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0015                     	;# 
   230     0016                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001C                     	;# 
   238     001E                     	;# 
   239     001F                     	;# 
   240     008C                     	;# 
   241     008E                     	;# 
   242     0091                     	;# 
   243     0092                     	;# 
   244     0093                     	;# 
   245     0095                     	;# 
   246     0096                     	;# 
   247     0097                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009A                     	;# 
   251     009B                     	;# 
   252     009B                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     010C                     	;# 
   257     010E                     	;# 
   258     0111                     	;# 
   259     0112                     	;# 
   260     0113                     	;# 
   261     0114                     	;# 
   262     0115                     	;# 
   263     0116                     	;# 
   264     0117                     	;# 
   265     0118                     	;# 
   266     0119                     	;# 
   267     011A                     	;# 
   268     011B                     	;# 
   269     011D                     	;# 
   270     011E                     	;# 
   271     018C                     	;# 
   272     018E                     	;# 
   273     0191                     	;# 
   274     0191                     	;# 
   275     0192                     	;# 
   276     0193                     	;# 
   277     0193                     	;# 
   278     0193                     	;# 
   279     0194                     	;# 
   280     0195                     	;# 
   281     0196                     	;# 
   282     0199                     	;# 
   283     019A                     	;# 
   284     019B                     	;# 
   285     019B                     	;# 
   286     019C                     	;# 
   287     019D                     	;# 
   288     019E                     	;# 
   289     019F                     	;# 
   290     020C                     	;# 
   291     020E                     	;# 
   292     0211                     	;# 
   293     0211                     	;# 
   294     0212                     	;# 
   295     0212                     	;# 
   296     0213                     	;# 
   297     0213                     	;# 
   298     0214                     	;# 
   299     0214                     	;# 
   300     0215                     	;# 
   301     0215                     	;# 
   302     0215                     	;# 
   303     0216                     	;# 
   304     0216                     	;# 
   305     0217                     	;# 
   306     0217                     	;# 
   307     0291                     	;# 
   308     0291                     	;# 
   309     0292                     	;# 
   310     0293                     	;# 
   311     0294                     	;# 
   312     0295                     	;# 
   313     0295                     	;# 
   314     0296                     	;# 
   315     0298                     	;# 
   316     0298                     	;# 
   317     0299                     	;# 
   318     029A                     	;# 
   319     029B                     	;# 
   320     029C                     	;# 
   321     029D                     	;# 
   322     029E                     	;# 
   323     0311                     	;# 
   324     0311                     	;# 
   325     0312                     	;# 
   326     0313                     	;# 
   327     0318                     	;# 
   328     0318                     	;# 
   329     0319                     	;# 
   330     031A                     	;# 
   331     038C                     	;# 
   332     038E                     	;# 
   333     0391                     	;# 
   334     0392                     	;# 
   335     0393                     	;# 
   336     039A                     	;# 
   337     039C                     	;# 
   338     039D                     	;# 
   339     039E                     	;# 
   340     039F                     	;# 
   341     0415                     	;# 
   342     0416                     	;# 
   343     0417                     	;# 
   344     041C                     	;# 
   345     041D                     	;# 
   346     041E                     	;# 
   347     0FE4                     	;# 
   348     0FE5                     	;# 
   349     0FE6                     	;# 
   350     0FE7                     	;# 
   351     0FE8                     	;# 
   352     0FE9                     	;# 
   353     0FEA                     	;# 
   354     0FEB                     	;# 
   355     0FED                     	;# 
   356     0FEE                     	;# 
   357     0FEF                     	;# 
   358     0000                     	;# 
   359     0001                     	;# 
   360     0002                     	;# 
   361     0003                     	;# 
   362     0004                     	;# 
   363     0005                     	;# 
   364     0006                     	;# 
   365     0007                     	;# 
   366     0008                     	;# 
   367     0009                     	;# 
   368     000A                     	;# 
   369     000B                     	;# 
   370     000C                     	;# 
   371     000E                     	;# 
   372     0011                     	;# 
   373     0012                     	;# 
   374     0013                     	;# 
   375     0015                     	;# 
   376     0016                     	;# 
   377     0016                     	;# 
   378     0017                     	;# 
   379     0018                     	;# 
   380     0019                     	;# 
   381     001A                     	;# 
   382     001B                     	;# 
   383     001C                     	;# 
   384     001E                     	;# 
   385     001F                     	;# 
   386     008C                     	;# 
   387     008E                     	;# 
   388     0091                     	;# 
   389     0092                     	;# 
   390     0093                     	;# 
   391     0095                     	;# 
   392     0096                     	;# 
   393     0097                     	;# 
   394     0098                     	;# 
   395     0099                     	;# 
   396     009A                     	;# 
   397     009B                     	;# 
   398     009B                     	;# 
   399     009C                     	;# 
   400     009D                     	;# 
   401     009E                     	;# 
   402     010C                     	;# 
   403     010E                     	;# 
   404     0111                     	;# 
   405     0112                     	;# 
   406     0113                     	;# 
   407     0114                     	;# 
   408     0115                     	;# 
   409     0116                     	;# 
   410     0117                     	;# 
   411     0118                     	;# 
   412     0119                     	;# 
   413     011A                     	;# 
   414     011B                     	;# 
   415     011D                     	;# 
   416     011E                     	;# 
   417     018C                     	;# 
   418     018E                     	;# 
   419     0191                     	;# 
   420     0191                     	;# 
   421     0192                     	;# 
   422     0193                     	;# 
   423     0193                     	;# 
   424     0193                     	;# 
   425     0194                     	;# 
   426     0195                     	;# 
   427     0196                     	;# 
   428     0199                     	;# 
   429     019A                     	;# 
   430     019B                     	;# 
   431     019B                     	;# 
   432     019C                     	;# 
   433     019D                     	;# 
   434     019E                     	;# 
   435     019F                     	;# 
   436     020C                     	;# 
   437     020E                     	;# 
   438     0211                     	;# 
   439     0211                     	;# 
   440     0212                     	;# 
   441     0212                     	;# 
   442     0213                     	;# 
   443     0213                     	;# 
   444     0214                     	;# 
   445     0214                     	;# 
   446     0215                     	;# 
   447     0215                     	;# 
   448     0215                     	;# 
   449     0216                     	;# 
   450     0216                     	;# 
   451     0217                     	;# 
   452     0217                     	;# 
   453     0291                     	;# 
   454     0291                     	;# 
   455     0292                     	;# 
   456     0293                     	;# 
   457     0294                     	;# 
   458     0295                     	;# 
   459     0295                     	;# 
   460     0296                     	;# 
   461     0298                     	;# 
   462     0298                     	;# 
   463     0299                     	;# 
   464     029A                     	;# 
   465     029B                     	;# 
   466     029C                     	;# 
   467     029D                     	;# 
   468     029E                     	;# 
   469     0311                     	;# 
   470     0311                     	;# 
   471     0312                     	;# 
   472     0313                     	;# 
   473     0318                     	;# 
   474     0318                     	;# 
   475     0319                     	;# 
   476     031A                     	;# 
   477     038C                     	;# 
   478     038E                     	;# 
   479     0391                     	;# 
   480     0392                     	;# 
   481     0393                     	;# 
   482     039A                     	;# 
   483     039C                     	;# 
   484     039D                     	;# 
   485     039E                     	;# 
   486     039F                     	;# 
   487     0415                     	;# 
   488     0416                     	;# 
   489     0417                     	;# 
   490     041C                     	;# 
   491     041D                     	;# 
   492     041E                     	;# 
   493     0FE4                     	;# 
   494     0FE5                     	;# 
   495     0FE6                     	;# 
   496     0FE7                     	;# 
   497     0FE8                     	;# 
   498     0FE9                     	;# 
   499     0FEA                     	;# 
   500     0FEB                     	;# 
   501     0FED                     	;# 
   502     0FEE                     	;# 
   503     0FEF                     	;# 
   504     0000                     	;# 
   505     0001                     	;# 
   506     0002                     	;# 
   507     0003                     	;# 
   508     0004                     	;# 
   509     0005                     	;# 
   510     0006                     	;# 
   511     0007                     	;# 
   512     0008                     	;# 
   513     0009                     	;# 
   514     000A                     	;# 
   515     000B                     	;# 
   516     000C                     	;# 
   517     000E                     	;# 
   518     0011                     	;# 
   519     0012                     	;# 
   520     0013                     	;# 
   521     0015                     	;# 
   522     0016                     	;# 
   523     0016                     	;# 
   524     0017                     	;# 
   525     0018                     	;# 
   526     0019                     	;# 
   527     001A                     	;# 
   528     001B                     	;# 
   529     001C                     	;# 
   530     001E                     	;# 
   531     001F                     	;# 
   532     008C                     	;# 
   533     008E                     	;# 
   534     0091                     	;# 
   535     0092                     	;# 
   536     0093                     	;# 
   537     0095                     	;# 
   538     0096                     	;# 
   539     0097                     	;# 
   540     0098                     	;# 
   541     0099                     	;# 
   542     009A                     	;# 
   543     009B                     	;# 
   544     009B                     	;# 
   545     009C                     	;# 
   546     009D                     	;# 
   547     009E                     	;# 
   548     010C                     	;# 
   549     010E                     	;# 
   550     0111                     	;# 
   551     0112                     	;# 
   552     0113                     	;# 
   553     0114                     	;# 
   554     0115                     	;# 
   555     0116                     	;# 
   556     0117                     	;# 
   557     0118                     	;# 
   558     0119                     	;# 
   559     011A                     	;# 
   560     011B                     	;# 
   561     011D                     	;# 
   562     011E                     	;# 
   563     018C                     	;# 
   564     018E                     	;# 
   565     0191                     	;# 
   566     0191                     	;# 
   567     0192                     	;# 
   568     0193                     	;# 
   569     0193                     	;# 
   570     0193                     	;# 
   571     0194                     	;# 
   572     0195                     	;# 
   573     0196                     	;# 
   574     0199                     	;# 
   575     019A                     	;# 
   576     019B                     	;# 
   577     019B                     	;# 
   578     019C                     	;# 
   579     019D                     	;# 
   580     019E                     	;# 
   581     019F                     	;# 
   582     020C                     	;# 
   583     020E                     	;# 
   584     0211                     	;# 
   585     0211                     	;# 
   586     0212                     	;# 
   587     0212                     	;# 
   588     0213                     	;# 
   589     0213                     	;# 
   590     0214                     	;# 
   591     0214                     	;# 
   592     0215                     	;# 
   593     0215                     	;# 
   594     0215                     	;# 
   595     0216                     	;# 
   596     0216                     	;# 
   597     0217                     	;# 
   598     0217                     	;# 
   599     0291                     	;# 
   600     0291                     	;# 
   601     0292                     	;# 
   602     0293                     	;# 
   603     0294                     	;# 
   604     0295                     	;# 
   605     0295                     	;# 
   606     0296                     	;# 
   607     0298                     	;# 
   608     0298                     	;# 
   609     0299                     	;# 
   610     029A                     	;# 
   611     029B                     	;# 
   612     029C                     	;# 
   613     029D                     	;# 
   614     029E                     	;# 
   615     0311                     	;# 
   616     0311                     	;# 
   617     0312                     	;# 
   618     0313                     	;# 
   619     0318                     	;# 
   620     0318                     	;# 
   621     0319                     	;# 
   622     031A                     	;# 
   623     038C                     	;# 
   624     038E                     	;# 
   625     0391                     	;# 
   626     0392                     	;# 
   627     0393                     	;# 
   628     039A                     	;# 
   629     039C                     	;# 
   630     039D                     	;# 
   631     039E                     	;# 
   632     039F                     	;# 
   633     0415                     	;# 
   634     0416                     	;# 
   635     0417                     	;# 
   636     041C                     	;# 
   637     041D                     	;# 
   638     041E                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     000E                     	;# 
   664     0011                     	;# 
   665     0012                     	;# 
   666     0013                     	;# 
   667     0015                     	;# 
   668     0016                     	;# 
   669     0016                     	;# 
   670     0017                     	;# 
   671     0018                     	;# 
   672     0019                     	;# 
   673     001A                     	;# 
   674     001B                     	;# 
   675     001C                     	;# 
   676     001E                     	;# 
   677     001F                     	;# 
   678     008C                     	;# 
   679     008E                     	;# 
   680     0091                     	;# 
   681     0092                     	;# 
   682     0093                     	;# 
   683     0095                     	;# 
   684     0096                     	;# 
   685     0097                     	;# 
   686     0098                     	;# 
   687     0099                     	;# 
   688     009A                     	;# 
   689     009B                     	;# 
   690     009B                     	;# 
   691     009C                     	;# 
   692     009D                     	;# 
   693     009E                     	;# 
   694     010C                     	;# 
   695     010E                     	;# 
   696     0111                     	;# 
   697     0112                     	;# 
   698     0113                     	;# 
   699     0114                     	;# 
   700     0115                     	;# 
   701     0116                     	;# 
   702     0117                     	;# 
   703     0118                     	;# 
   704     0119                     	;# 
   705     011A                     	;# 
   706     011B                     	;# 
   707     011D                     	;# 
   708     011E                     	;# 
   709     018C                     	;# 
   710     018E                     	;# 
   711     0191                     	;# 
   712     0191                     	;# 
   713     0192                     	;# 
   714     0193                     	;# 
   715     0193                     	;# 
   716     0193                     	;# 
   717     0194                     	;# 
   718     0195                     	;# 
   719     0196                     	;# 
   720     0199                     	;# 
   721     019A                     	;# 
   722     019B                     	;# 
   723     019B                     	;# 
   724     019C                     	;# 
   725     019D                     	;# 
   726     019E                     	;# 
   727     019F                     	;# 
   728     020C                     	;# 
   729     020E                     	;# 
   730     0211                     	;# 
   731     0211                     	;# 
   732     0212                     	;# 
   733     0212                     	;# 
   734     0213                     	;# 
   735     0213                     	;# 
   736     0214                     	;# 
   737     0214                     	;# 
   738     0215                     	;# 
   739     0215                     	;# 
   740     0215                     	;# 
   741     0216                     	;# 
   742     0216                     	;# 
   743     0217                     	;# 
   744     0217                     	;# 
   745     0291                     	;# 
   746     0291                     	;# 
   747     0292                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0295                     	;# 
   752     0296                     	;# 
   753     0298                     	;# 
   754     0298                     	;# 
   755     0299                     	;# 
   756     029A                     	;# 
   757     029B                     	;# 
   758     029C                     	;# 
   759     029D                     	;# 
   760     029E                     	;# 
   761     0311                     	;# 
   762     0311                     	;# 
   763     0312                     	;# 
   764     0313                     	;# 
   765     0318                     	;# 
   766     0318                     	;# 
   767     0319                     	;# 
   768     031A                     	;# 
   769     038C                     	;# 
   770     038E                     	;# 
   771     0391                     	;# 
   772     0392                     	;# 
   773     0393                     	;# 
   774     039A                     	;# 
   775     039C                     	;# 
   776     039D                     	;# 
   777     039E                     	;# 
   778     039F                     	;# 
   779     0415                     	;# 
   780     0416                     	;# 
   781     0417                     	;# 
   782     041C                     	;# 
   783     041D                     	;# 
   784     041E                     	;# 
   785     0FE4                     	;# 
   786     0FE5                     	;# 
   787     0FE6                     	;# 
   788     0FE7                     	;# 
   789     0FE8                     	;# 
   790     0FE9                     	;# 
   791     0FEA                     	;# 
   792     0FEB                     	;# 
   793     0FED                     	;# 
   794     0FEE                     	;# 
   795     0FEF                     	;# 
   796     0000                     	;# 
   797     0001                     	;# 
   798     0002                     	;# 
   799     0003                     	;# 
   800     0004                     	;# 
   801     0005                     	;# 
   802     0006                     	;# 
   803     0007                     	;# 
   804     0008                     	;# 
   805     0009                     	;# 
   806     000A                     	;# 
   807     000B                     	;# 
   808     000C                     	;# 
   809     000E                     	;# 
   810     0011                     	;# 
   811     0012                     	;# 
   812     0013                     	;# 
   813     0015                     	;# 
   814     0016                     	;# 
   815     0016                     	;# 
   816     0017                     	;# 
   817     0018                     	;# 
   818     0019                     	;# 
   819     001A                     	;# 
   820     001B                     	;# 
   821     001C                     	;# 
   822     001E                     	;# 
   823     001F                     	;# 
   824     008C                     	;# 
   825     008E                     	;# 
   826     0091                     	;# 
   827     0092                     	;# 
   828     0093                     	;# 
   829     0095                     	;# 
   830     0096                     	;# 
   831     0097                     	;# 
   832     0098                     	;# 
   833     0099                     	;# 
   834     009A                     	;# 
   835     009B                     	;# 
   836     009B                     	;# 
   837     009C                     	;# 
   838     009D                     	;# 
   839     009E                     	;# 
   840     010C                     	;# 
   841     010E                     	;# 
   842     0111                     	;# 
   843     0112                     	;# 
   844     0113                     	;# 
   845     0114                     	;# 
   846     0115                     	;# 
   847     0116                     	;# 
   848     0117                     	;# 
   849     0118                     	;# 
   850     0119                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011D                     	;# 
   854     011E                     	;# 
   855     018C                     	;# 
   856     018E                     	;# 
   857     0191                     	;# 
   858     0191                     	;# 
   859     0192                     	;# 
   860     0193                     	;# 
   861     0193                     	;# 
   862     0193                     	;# 
   863     0194                     	;# 
   864     0195                     	;# 
   865     0196                     	;# 
   866     0199                     	;# 
   867     019A                     	;# 
   868     019B                     	;# 
   869     019B                     	;# 
   870     019C                     	;# 
   871     019D                     	;# 
   872     019E                     	;# 
   873     019F                     	;# 
   874     020C                     	;# 
   875     020E                     	;# 
   876     0211                     	;# 
   877     0211                     	;# 
   878     0212                     	;# 
   879     0212                     	;# 
   880     0213                     	;# 
   881     0213                     	;# 
   882     0214                     	;# 
   883     0214                     	;# 
   884     0215                     	;# 
   885     0215                     	;# 
   886     0215                     	;# 
   887     0216                     	;# 
   888     0216                     	;# 
   889     0217                     	;# 
   890     0217                     	;# 
   891     0291                     	;# 
   892     0291                     	;# 
   893     0292                     	;# 
   894     0293                     	;# 
   895     0294                     	;# 
   896     0295                     	;# 
   897     0295                     	;# 
   898     0296                     	;# 
   899     0298                     	;# 
   900     0298                     	;# 
   901     0299                     	;# 
   902     029A                     	;# 
   903     029B                     	;# 
   904     029C                     	;# 
   905     029D                     	;# 
   906     029E                     	;# 
   907     0311                     	;# 
   908     0311                     	;# 
   909     0312                     	;# 
   910     0313                     	;# 
   911     0318                     	;# 
   912     0318                     	;# 
   913     0319                     	;# 
   914     031A                     	;# 
   915     038C                     	;# 
   916     038E                     	;# 
   917     0391                     	;# 
   918     0392                     	;# 
   919     0393                     	;# 
   920     039A                     	;# 
   921     039C                     	;# 
   922     039D                     	;# 
   923     039E                     	;# 
   924     039F                     	;# 
   925     0415                     	;# 
   926     0416                     	;# 
   927     0417                     	;# 
   928     041C                     	;# 
   929     041D                     	;# 
   930     041E                     	;# 
   931     0FE4                     	;# 
   932     0FE5                     	;# 
   933     0FE6                     	;# 
   934     0FE7                     	;# 
   935     0FE8                     	;# 
   936     0FE9                     	;# 
   937     0FEA                     	;# 
   938     0FEB                     	;# 
   939     0FED                     	;# 
   940     0FEE                     	;# 
   941     0FEF                     	;# 
   942                           
   943                           	psect	idataBANK0
   944     04FF                     __pidataBANK0:
   945                           
   946                           ;initializer for _LCD_BACKLIGHT
   947     04FF  3408               	retlw	8
   948                           
   949                           	psect	nvBANK0
   950     005E                     __pnvBANK0:
   951     005E                     _mp2:
   952     005E                     	ds	2
   953     0011                     _PIR1bits	set	17
   954     000B                     _INTCONbits	set	11
   955     000E                     _PORTCbits	set	14
   956     008C                     _TXIF	set	140
   957     009B                     _ADRES	set	155
   958     0091                     _PIE1bits	set	145
   959     009D                     _ADCON0bits	set	157
   960     009D                     _ADCON0	set	157
   961     009E                     _ADCON1	set	158
   962     008E                     _TRISCbits	set	142
   963     008C                     _TRISAbits	set	140
   964     0099                     _OSCCON	set	153
   965     0475                     _TRISC5	set	1141
   966     0474                     _TRISC4	set	1140
   967     0471                     _TRISC1	set	1137
   968     0472                     _TRISC2	set	1138
   969     010E                     _LATCbits	set	270
   970     010C                     _LATAbits	set	268
   971     0871                     _LATC1	set	2161
   972     0872                     _LATC2	set	2162
   973     019B                     _SPBRG	set	411
   974     0199                     _RCREG	set	409
   975     019A                     _TXREG	set	410
   976     019D                     _RCSTA	set	413
   977     019E                     _TXSTA	set	414
   978     018C                     _ANSELAbits	set	396
   979     018E                     _ANSELCbits	set	398
   980     0CF2                     _BRGH	set	3314
   981     0CFB                     _BRG16	set	3323
   982                           
   983                           	psect	cinit
   984     0047                     start_initialization:	
   985                           ; #config settings
   986                           
   987     0047                     __initialization:
   988                           
   989                           ; Initialize objects allocated to BANK0
   990     0047  3184  24FF  3180   	fcall	__pidataBANK0	;fetch initializer
   991     004A  00E0               	movwf	__pdataBANK0& (0+127)
   992                           
   993                           ; Clear objects allocated to BITCOMMON
   994     004B  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK0
   997     004C  3020               	movlw	low __pbssBANK0
   998     004D  0084               	movwf	4
   999     004E  3000               	movlw	high __pbssBANK0
  1000     004F  0085               	movwf	5
  1001     0050  3024               	movlw	36
  1002     0051  3184  24F9  3180   	fcall	clear_ram0
  1003     0054                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006     0054                     __end_of__initialization:
  1007     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1008     0055  0020               	movlb	0
  1009     0056  3180  2858         	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bitbssCOMMON
  1012     03E0                     __pbitbssCOMMON:
  1013     03E0                     _ena_send:
  1014     03E0                     	ds	1
  1015     03E1                     _ena_rx:
  1016     03E1                     	ds	1
  1017                           
  1018                           	psect	bssBANK0
  1019     0020                     __pbssBANK0:
  1020     0020                     _temp:
  1021     0020                     	ds	4
  1022     0024                     _temp_glo:
  1023     0024                     	ds	4
  1024     0028                     _bf_rx:
  1025     0028                     	ds	3
  1026     002B                     _mq2:
  1027     002B                     	ds	2
  1028     002D                     _rx_index:
  1029     002D                     	ds	1
  1030     002E                     _byte_rx:
  1031     002E                     	ds	1
  1032     002F                     _printf_mode:
  1033     002F                     	ds	1
  1034     0030                     _bf_tx:
  1035     0030                     	ds	20
  1036                           
  1037                           	psect	dataBANK0
  1038     0060                     __pdataBANK0:
  1039     0060                     _LCD_BACKLIGHT:
  1040     0060                     	ds	1
  1041                           
  1042                           	psect	clrtext
  1043     04F9                     clear_ram0:	
  1044                           ;	Called with FSR0 containing the base address, and
  1045                           ;	WREG with the size to clear
  1046                           
  1047     04F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1048     04FA                     clrloop0:
  1049     04FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1050     04FB  3101               	addfsr 0,1
  1051     04FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1052     04FD  2CFA               	goto	clrloop0	;have we reached the end yet?
  1053     04FE  3400               	retlw	0	;all done for this memory range, return
  1054                           
  1055                           	psect	cstackCOMMON
  1056     0070                     __pcstackCOMMON:
  1057     0070                     ?_USART_TransmitChar:
  1058     0070                     ?_i2c_start:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061     0070                     ?_i2c_write:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064     0070                     ?_i2c_read:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067     0070                     ?_i2c_stop:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070     0070                     ?_USART_Init:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073     0070                     ?_Cmd_Aht10:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076     0070                     ?_USART_TransmitString:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079     0070                     ?_USART_ReceiveChar:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0070                     ??_USART_ReceiveChar:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0070                     ?_main:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0070                     ?_ngat_uart:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091     0070                     ??_ngat_uart:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x0
  1096     0070                     	ds	1
  1097     0071                     ??_USART_TransmitChar:
  1098     0071                     ??_i2c_start:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101     0071                     ??_i2c_write:	
  1102                           ; 1 bytes @ 0x1
  1103                           
  1104     0071                     ??_i2c_read:	
  1105                           ; 1 bytes @ 0x1
  1106                           
  1107     0071                     ??_i2c_stop:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110     0071                     ??_USART_Init:	
  1111                           ; 1 bytes @ 0x1
  1112                           
  1113     0071                     ?___lwdiv:	
  1114                           ; 1 bytes @ 0x1
  1115                           
  1116     0071                     ?___lldiv:	
  1117                           ; 2 bytes @ 0x1
  1118                           
  1119     0071                     USART_TransmitChar@out:	
  1120                           ; 4 bytes @ 0x1
  1121                           
  1122     0071                     ___lwdiv@divisor:	
  1123                           ; 1 bytes @ 0x1
  1124                           
  1125     0071                     ___lldiv@divisor:	
  1126                           ; 2 bytes @ 0x1
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x1
  1130     0071                     	ds	1
  1131     0072                     ??_USART_TransmitString:
  1132     0072                     i2c_read@ACK:	
  1133                           ; 1 bytes @ 0x2
  1134                           
  1135                           
  1136                           ; 1 bytes @ 0x2
  1137     0072                     	ds	1
  1138     0073                     i2c_write@DATA:
  1139     0073                     i2c_read@i:	
  1140                           ; 1 bytes @ 0x3
  1141                           
  1142     0073                     USART_TransmitString@out:	
  1143                           ; 1 bytes @ 0x3
  1144                           
  1145     0073                     ___lwdiv@dividend:	
  1146                           ; 1 bytes @ 0x3
  1147                           
  1148                           
  1149                           ; 2 bytes @ 0x3
  1150     0073                     	ds	1
  1151     0074                     i2c_write@i:
  1152     0074                     i2c_read@DATA:	
  1153                           ; 1 bytes @ 0x4
  1154                           
  1155     0074                     USART_TransmitString@i:	
  1156                           ; 1 bytes @ 0x4
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0x4
  1160     0074                     	ds	1
  1161     0075                     ??_Cmd_Aht10:
  1162     0075                     ??___lwdiv:	
  1163                           ; 1 bytes @ 0x5
  1164                           
  1165     0075                     ?_read_temp:	
  1166                           ; 1 bytes @ 0x5
  1167                           
  1168     0075                     ___lldiv@dividend:	
  1169                           ; 4 bytes @ 0x5
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x5
  1173     0075                     	ds	1
  1174     0076                     ___lwdiv@quotient:
  1175                           
  1176                           ; 2 bytes @ 0x6
  1177     0076                     	ds	2
  1178     0078                     ___lwdiv@counter:
  1179                           
  1180                           ; 1 bytes @ 0x8
  1181     0078                     	ds	1
  1182     0079                     ??___lldiv:
  1183     0079                     ??___lwmod:	
  1184                           ; 1 bytes @ 0x9
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x9
  1188     0079                     	ds	1
  1189     007A                     ??___llmod:
  1190     007A                     ___lwmod@counter:	
  1191                           ; 1 bytes @ 0xA
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0xA
  1195     007A                     	ds	1
  1196     007B                     ___llmod@counter:
  1197                           
  1198                           ; 1 bytes @ 0xB
  1199     007B                     	ds	1
  1200                           
  1201                           	psect	cstackBANK0
  1202     0044                     __pcstackBANK0:
  1203     0044                     ??_read_temp:
  1204     0044                     ?___lwmod:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207     0044                     ___lwmod@divisor:	
  1208                           ; 2 bytes @ 0x0
  1209                           
  1210     0044                     ___lldiv@quotient:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x0
  1215     0044                     	ds	2
  1216     0046                     ___lwmod@dividend:
  1217                           
  1218                           ; 2 bytes @ 0x2
  1219     0046                     	ds	2
  1220     0048                     ___lldiv@counter:
  1221                           
  1222                           ; 1 bytes @ 0x4
  1223     0048                     	ds	1
  1224     0049                     ?___llmod:
  1225     0049                     ___llmod@divisor:	
  1226                           ; 4 bytes @ 0x5
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0x5
  1230     0049                     	ds	3
  1231     004C                     read_temp@dt1:
  1232                           
  1233                           ; 4 bytes @ 0x8
  1234     004C                     	ds	1
  1235     004D                     ___llmod@dividend:
  1236                           
  1237                           ; 4 bytes @ 0x9
  1238     004D                     	ds	3
  1239     0050                     read_temp@dt2:
  1240                           
  1241                           ; 4 bytes @ 0xC
  1242     0050                     	ds	4
  1243     0054                     read_temp@dt3:
  1244                           
  1245                           ; 4 bytes @ 0x10
  1246     0054                     	ds	4
  1247     0058                     read_temp@temp:
  1248                           
  1249                           ; 4 bytes @ 0x14
  1250     0058                     	ds	4
  1251     005C                     ??_main:
  1252                           
  1253                           ; 1 bytes @ 0x18
  1254     005C                     	ds	2
  1255                           
  1256                           	psect	maintext
  1257     0058                     __pmaintext:	
  1258 ;;
  1259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1260 ;;
  1261 ;; *************** function _main *****************
  1262 ;; Defined at:
  1263 ;;		line 47 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : B1F/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;Total ram usage:        2 bytes
  1282 ;; Hardware stack levels required when called: 4
  1283 ;; This function calls:
  1284 ;;		_Cmd_Aht10
  1285 ;;		_USART_Init
  1286 ;;		_USART_TransmitString
  1287 ;;		___lldiv
  1288 ;;		___llmod
  1289 ;;		___lwdiv
  1290 ;;		___lwmod
  1291 ;;		_read_temp
  1292 ;; This function is called by:
  1293 ;;		Startup code after reset
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297     0058                     _main:	
  1298                           ;psect for function _main
  1299                           
  1300     0058                     l1787:	
  1301                           ;incstack = 0
  1302                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1303                           
  1304                           
  1305                           ;main.c: 48:     OSCCON = 0X7f;
  1306     0058  307F               	movlw	127
  1307     0059  0021               	movlb	1	; select bank1
  1308     005A  0099               	movwf	25	;volatile
  1309     005B                     l1789:
  1310                           
  1311                           ;main.c: 50:     TRISAbits.TRISA4 = 0;
  1312     005B  120C               	bcf	12,4	;volatile
  1313     005C                     l1791:
  1314                           
  1315                           ;main.c: 51:     LATAbits.LATA4 = 0;
  1316     005C  0022               	movlb	2	; select bank2
  1317     005D  120C               	bcf	12,4	;volatile
  1318     005E                     l1793:
  1319                           
  1320                           ;main.c: 53:     TRISCbits.TRISC3 = 0;
  1321     005E  0021               	movlb	1	; select bank1
  1322     005F  118E               	bcf	14,3	;volatile
  1323     0060                     l1795:
  1324                           
  1325                           ;main.c: 54:     LATCbits.LATC3 = 0;
  1326     0060  0022               	movlb	2	; select bank2
  1327     0061  118E               	bcf	14,3	;volatile
  1328     0062                     l1797:
  1329                           
  1330                           ;main.c: 56:     ANSELCbits.ANSC2 = 0;
  1331     0062  0023               	movlb	3	; select bank3
  1332     0063  110E               	bcf	14,2	;volatile
  1333     0064                     l1799:
  1334                           
  1335                           ;main.c: 58:     TRISAbits.TRISA2 = 1;
  1336     0064  0021               	movlb	1	; select bank1
  1337     0065  150C               	bsf	12,2	;volatile
  1338     0066                     l1801:
  1339                           
  1340                           ;main.c: 59:     ANSELAbits.ANSA2 = 1;
  1341     0066  0023               	movlb	3	; select bank3
  1342     0067  150C               	bsf	12,2	;volatile
  1343     0068                     l1803:
  1344                           
  1345                           ;main.c: 61:     TRISCbits.TRISC0 = 1;
  1346     0068  0021               	movlb	1	; select bank1
  1347     0069  140E               	bsf	14,0	;volatile
  1348     006A                     l1805:
  1349                           
  1350                           ;main.c: 62:     ANSELCbits.ANSC0 = 1;
  1351     006A  0023               	movlb	3	; select bank3
  1352     006B  140E               	bsf	14,0	;volatile
  1353     006C                     l1807:
  1354                           
  1355                           ;main.c: 64:     USART_Init();
  1356     006C  3184  24B3  3180   	fcall	_USART_Init
  1357     006F                     l1809:
  1358                           
  1359                           ;main.c: 66:     ADCON1 = 0X80;
  1360     006F  3080               	movlw	128
  1361     0070  0021               	movlb	1	; select bank1
  1362     0071  009E               	movwf	30	;volatile
  1363     0072                     l1811:
  1364                           
  1365                           ;main.c: 68:     printf_mode = 0;
  1366     0072  0020               	movlb	0	; select bank0
  1367     0073  01AF               	clrf	_printf_mode
  1368     0074                     l1813:
  1369                           
  1370                           ;main.c: 69:     bf_tx[0] = 'S';
  1371     0074  3053               	movlw	83
  1372     0075  00B0               	movwf	_bf_tx
  1373     0076                     l1815:
  1374                           
  1375                           ;main.c: 70:     bf_tx[1] = 1;
  1376     0076  01B1               	clrf	_bf_tx+1
  1377     0077  0AB1               	incf	_bf_tx+1,f
  1378     0078                     l1817:
  1379                           
  1380                           ;main.c: 71:     bf_tx[16] = 'P';
  1381     0078  3050               	movlw	80
  1382     0079  00C0               	movwf	_bf_tx+16
  1383     007A                     l1819:
  1384                           
  1385                           ;main.c: 72:     mp2 = 1111;
  1386     007A  3057               	movlw	87
  1387     007B  00DE               	movwf	_mp2
  1388     007C  3004               	movlw	4
  1389     007D  00DF               	movwf	_mp2+1
  1390     007E                     l1821:
  1391                           
  1392                           ;main.c: 73:     bf_tx[12] = (unsigned char) (mp2 / 1000 % 10 + 48);
  1393     007E  300A               	movlw	10
  1394     007F  00C4               	movwf	___lwmod@divisor
  1395     0080  3000               	movlw	0
  1396     0081  00C5               	movwf	___lwmod@divisor+1
  1397     0082  30E8               	movlw	232
  1398     0083  00F1               	movwf	___lwdiv@divisor
  1399     0084  3003               	movlw	3
  1400     0085  00F2               	movwf	___lwdiv@divisor+1
  1401     0086  3057               	movlw	87
  1402     0087  00F3               	movwf	___lwdiv@dividend
  1403     0088  3004               	movlw	4
  1404     0089  00F4               	movwf	___lwdiv@dividend+1
  1405     008A  3183  23D0  3180   	fcall	___lwdiv
  1406     008D  0872               	movf	?___lwdiv+1,w
  1407     008E  0020               	movlb	0	; select bank0
  1408     008F  00C7               	movwf	___lwmod@dividend+1
  1409     0090  0871               	movf	?___lwdiv,w
  1410     0091  00C6               	movwf	___lwmod@dividend
  1411     0092  3184  240C  3180   	fcall	___lwmod
  1412     0095  0020               	movlb	0	; select bank0
  1413     0096  0844               	movf	?___lwmod,w
  1414     0097  3E30               	addlw	48
  1415     0098  00BC               	movwf	_bf_tx+12
  1416     0099                     l1823:
  1417                           
  1418                           ;main.c: 74:     bf_tx[13] = (unsigned char) (mp2 / 100 % 10 + 48);
  1419     0099  300A               	movlw	10
  1420     009A  00C4               	movwf	___lwmod@divisor
  1421     009B  3000               	movlw	0
  1422     009C  00C5               	movwf	___lwmod@divisor+1
  1423     009D  3064               	movlw	100
  1424     009E  00F1               	movwf	___lwdiv@divisor
  1425     009F  3000               	movlw	0
  1426     00A0  00F2               	movwf	___lwdiv@divisor+1
  1427     00A1  3057               	movlw	87
  1428     00A2  00F3               	movwf	___lwdiv@dividend
  1429     00A3  3004               	movlw	4
  1430     00A4  00F4               	movwf	___lwdiv@dividend+1
  1431     00A5  3183  23D0  3180   	fcall	___lwdiv
  1432     00A8  0872               	movf	?___lwdiv+1,w
  1433     00A9  0020               	movlb	0	; select bank0
  1434     00AA  00C7               	movwf	___lwmod@dividend+1
  1435     00AB  0871               	movf	?___lwdiv,w
  1436     00AC  00C6               	movwf	___lwmod@dividend
  1437     00AD  3184  240C  3180   	fcall	___lwmod
  1438     00B0  0020               	movlb	0	; select bank0
  1439     00B1  0844               	movf	?___lwmod,w
  1440     00B2  3E30               	addlw	48
  1441     00B3  00BD               	movwf	_bf_tx+13
  1442     00B4                     l1825:
  1443                           
  1444                           ;main.c: 75:     bf_tx[14] = (unsigned char) (mp2 / 10 % 10 + 48);
  1445     00B4  300A               	movlw	10
  1446     00B5  00C4               	movwf	___lwmod@divisor
  1447     00B6  3000               	movlw	0
  1448     00B7  00C5               	movwf	___lwmod@divisor+1
  1449     00B8  300A               	movlw	10
  1450     00B9  00F1               	movwf	___lwdiv@divisor
  1451     00BA  3000               	movlw	0
  1452     00BB  00F2               	movwf	___lwdiv@divisor+1
  1453     00BC  3057               	movlw	87
  1454     00BD  00F3               	movwf	___lwdiv@dividend
  1455     00BE  3004               	movlw	4
  1456     00BF  00F4               	movwf	___lwdiv@dividend+1
  1457     00C0  3183  23D0  3180   	fcall	___lwdiv
  1458     00C3  0872               	movf	?___lwdiv+1,w
  1459     00C4  0020               	movlb	0	; select bank0
  1460     00C5  00C7               	movwf	___lwmod@dividend+1
  1461     00C6  0871               	movf	?___lwdiv,w
  1462     00C7  00C6               	movwf	___lwmod@dividend
  1463     00C8  3184  240C  3180   	fcall	___lwmod
  1464     00CB  0020               	movlb	0	; select bank0
  1465     00CC  0844               	movf	?___lwmod,w
  1466     00CD  3E30               	addlw	48
  1467     00CE  00BE               	movwf	_bf_tx+14
  1468     00CF                     l1827:
  1469                           
  1470                           ;main.c: 76:     bf_tx[15] = (unsigned char) (mp2 / 1 % 10 + 48);
  1471     00CF  300A               	movlw	10
  1472     00D0  00C4               	movwf	___lwmod@divisor
  1473     00D1  3000               	movlw	0
  1474     00D2  00C5               	movwf	___lwmod@divisor+1
  1475     00D3  3057               	movlw	87
  1476     00D4  00C6               	movwf	___lwmod@dividend
  1477     00D5  3004               	movlw	4
  1478     00D6  00C7               	movwf	___lwmod@dividend+1
  1479     00D7  3184  240C  3180   	fcall	___lwmod
  1480     00DA  0020               	movlb	0	; select bank0
  1481     00DB  0844               	movf	?___lwmod,w
  1482     00DC  3E30               	addlw	48
  1483     00DD  00BF               	movwf	_bf_tx+15
  1484     00DE                     l1829:
  1485                           
  1486                           ;main.c: 79:         Cmd_Aht10();
  1487     00DE  3184  24C6  3180   	fcall	_Cmd_Aht10
  1488     00E1                     l1831:
  1489                           
  1490                           ;main.c: 80:         _delay((unsigned long)((80)*(16000000/4000.0)));
  1491     00E1  3002               	movlw	2
  1492     00E2  0020               	movlb	0	; select bank0
  1493     00E3  00DD               	movwf	??_main+1
  1494     00E4  30A0               	movlw	160
  1495     00E5  00DC               	movwf	??_main
  1496     00E6  3092               	movlw	146
  1497     00E7                     u1427:
  1498     00E7  0B89               	decfsz	9,f
  1499     00E8  28E7               	goto	u1427
  1500     00E9  0BDC               	decfsz	??_main,f
  1501     00EA  28E7               	goto	u1427
  1502     00EB  0BDD               	decfsz	??_main+1,f
  1503     00EC  28E7               	goto	u1427
  1504     00ED  0000               	nop
  1505     00EE                     l1833:
  1506                           
  1507                           ;main.c: 81:         temp = read_temp();
  1508     00EE  3182  2272  3180   	fcall	_read_temp
  1509     00F1  0878               	movf	?_read_temp+3,w
  1510     00F2  0020               	movlb	0	; select bank0
  1511     00F3  00A3               	movwf	_temp+3
  1512     00F4  0877               	movf	?_read_temp+2,w
  1513     00F5  00A2               	movwf	_temp+2
  1514     00F6  0876               	movf	?_read_temp+1,w
  1515     00F7  00A1               	movwf	_temp+1
  1516     00F8  0875               	movf	?_read_temp,w
  1517     00F9  00A0               	movwf	_temp
  1518     00FA                     l1835:
  1519                           
  1520                           ;main.c: 82:         bf_tx[2] = (unsigned char) (temp / 100000 % 10 + 48);
  1521     00FA  3000               	movlw	0
  1522     00FB  00CC               	movwf	___llmod@divisor+3
  1523     00FC  3000               	movlw	0
  1524     00FD  00CB               	movwf	___llmod@divisor+2
  1525     00FE  3000               	movlw	0
  1526     00FF  00CA               	movwf	___llmod@divisor+1
  1527     0100  300A               	movlw	10
  1528     0101  00C9               	movwf	___llmod@divisor
  1529     0102  3000               	movlw	0
  1530     0103  00F4               	movwf	___lldiv@divisor+3
  1531     0104  3001               	movlw	1
  1532     0105  00F3               	movwf	___lldiv@divisor+2
  1533     0106  3086               	movlw	134
  1534     0107  00F2               	movwf	___lldiv@divisor+1
  1535     0108  30A0               	movlw	160
  1536     0109  00F1               	movwf	___lldiv@divisor
  1537     010A  0823               	movf	_temp+3,w
  1538     010B  00F8               	movwf	___lldiv@dividend+3
  1539     010C  0822               	movf	_temp+2,w
  1540     010D  00F7               	movwf	___lldiv@dividend+2
  1541     010E  0821               	movf	_temp+1,w
  1542     010F  00F6               	movwf	___lldiv@dividend+1
  1543     0110  0820               	movf	_temp,w
  1544     0111  00F5               	movwf	___lldiv@dividend
  1545     0112  3183  232A  3180   	fcall	___lldiv
  1546     0115  0874               	movf	?___lldiv+3,w
  1547     0116  0020               	movlb	0	; select bank0
  1548     0117  00D0               	movwf	___llmod@dividend+3
  1549     0118  0873               	movf	?___lldiv+2,w
  1550     0119  00CF               	movwf	___llmod@dividend+2
  1551     011A  0872               	movf	?___lldiv+1,w
  1552     011B  00CE               	movwf	___llmod@dividend+1
  1553     011C  0871               	movf	?___lldiv,w
  1554     011D  00CD               	movwf	___llmod@dividend
  1555     011E  3183  2385  3180   	fcall	___llmod
  1556     0121  0020               	movlb	0	; select bank0
  1557     0122  0849               	movf	?___llmod,w
  1558     0123  3E30               	addlw	48
  1559     0124  00B2               	movwf	_bf_tx+2
  1560     0125                     l1837:
  1561                           
  1562                           ;main.c: 83:         bf_tx[3] = (unsigned char) (temp / 10000 % 10 + 48);
  1563     0125  3000               	movlw	0
  1564     0126  00CC               	movwf	___llmod@divisor+3
  1565     0127  3000               	movlw	0
  1566     0128  00CB               	movwf	___llmod@divisor+2
  1567     0129  3000               	movlw	0
  1568     012A  00CA               	movwf	___llmod@divisor+1
  1569     012B  300A               	movlw	10
  1570     012C  00C9               	movwf	___llmod@divisor
  1571     012D  3000               	movlw	0
  1572     012E  00F4               	movwf	___lldiv@divisor+3
  1573     012F  3000               	movlw	0
  1574     0130  00F3               	movwf	___lldiv@divisor+2
  1575     0131  3027               	movlw	39
  1576     0132  00F2               	movwf	___lldiv@divisor+1
  1577     0133  3010               	movlw	16
  1578     0134  00F1               	movwf	___lldiv@divisor
  1579     0135  0823               	movf	_temp+3,w
  1580     0136  00F8               	movwf	___lldiv@dividend+3
  1581     0137  0822               	movf	_temp+2,w
  1582     0138  00F7               	movwf	___lldiv@dividend+2
  1583     0139  0821               	movf	_temp+1,w
  1584     013A  00F6               	movwf	___lldiv@dividend+1
  1585     013B  0820               	movf	_temp,w
  1586     013C  00F5               	movwf	___lldiv@dividend
  1587     013D  3183  232A  3180   	fcall	___lldiv
  1588     0140  0874               	movf	?___lldiv+3,w
  1589     0141  0020               	movlb	0	; select bank0
  1590     0142  00D0               	movwf	___llmod@dividend+3
  1591     0143  0873               	movf	?___lldiv+2,w
  1592     0144  00CF               	movwf	___llmod@dividend+2
  1593     0145  0872               	movf	?___lldiv+1,w
  1594     0146  00CE               	movwf	___llmod@dividend+1
  1595     0147  0871               	movf	?___lldiv,w
  1596     0148  00CD               	movwf	___llmod@dividend
  1597     0149  3183  2385  3180   	fcall	___llmod
  1598     014C  0020               	movlb	0	; select bank0
  1599     014D  0849               	movf	?___llmod,w
  1600     014E  3E30               	addlw	48
  1601     014F  00B3               	movwf	_bf_tx+3
  1602     0150                     l1839:
  1603                           
  1604                           ;main.c: 84:         bf_tx[4] = (unsigned char) (temp / 1000 % 10 + 48);
  1605     0150  3000               	movlw	0
  1606     0151  00CC               	movwf	___llmod@divisor+3
  1607     0152  3000               	movlw	0
  1608     0153  00CB               	movwf	___llmod@divisor+2
  1609     0154  3000               	movlw	0
  1610     0155  00CA               	movwf	___llmod@divisor+1
  1611     0156  300A               	movlw	10
  1612     0157  00C9               	movwf	___llmod@divisor
  1613     0158  3000               	movlw	0
  1614     0159  00F4               	movwf	___lldiv@divisor+3
  1615     015A  3000               	movlw	0
  1616     015B  00F3               	movwf	___lldiv@divisor+2
  1617     015C  3003               	movlw	3
  1618     015D  00F2               	movwf	___lldiv@divisor+1
  1619     015E  30E8               	movlw	232
  1620     015F  00F1               	movwf	___lldiv@divisor
  1621     0160  0823               	movf	_temp+3,w
  1622     0161  00F8               	movwf	___lldiv@dividend+3
  1623     0162  0822               	movf	_temp+2,w
  1624     0163  00F7               	movwf	___lldiv@dividend+2
  1625     0164  0821               	movf	_temp+1,w
  1626     0165  00F6               	movwf	___lldiv@dividend+1
  1627     0166  0820               	movf	_temp,w
  1628     0167  00F5               	movwf	___lldiv@dividend
  1629     0168  3183  232A  3180   	fcall	___lldiv
  1630     016B  0874               	movf	?___lldiv+3,w
  1631     016C  0020               	movlb	0	; select bank0
  1632     016D  00D0               	movwf	___llmod@dividend+3
  1633     016E  0873               	movf	?___lldiv+2,w
  1634     016F  00CF               	movwf	___llmod@dividend+2
  1635     0170  0872               	movf	?___lldiv+1,w
  1636     0171  00CE               	movwf	___llmod@dividend+1
  1637     0172  0871               	movf	?___lldiv,w
  1638     0173  00CD               	movwf	___llmod@dividend
  1639     0174  3183  2385  3180   	fcall	___llmod
  1640     0177  0020               	movlb	0	; select bank0
  1641     0178  0849               	movf	?___llmod,w
  1642     0179  3E30               	addlw	48
  1643     017A  00B4               	movwf	_bf_tx+4
  1644     017B                     l1841:
  1645                           
  1646                           ;main.c: 85:         bf_tx[5] = (unsigned char) (temp / 100 % 10 + 48);
  1647     017B  3000               	movlw	0
  1648     017C  00CC               	movwf	___llmod@divisor+3
  1649     017D  3000               	movlw	0
  1650     017E  00CB               	movwf	___llmod@divisor+2
  1651     017F  3000               	movlw	0
  1652     0180  00CA               	movwf	___llmod@divisor+1
  1653     0181  300A               	movlw	10
  1654     0182  00C9               	movwf	___llmod@divisor
  1655     0183  3000               	movlw	0
  1656     0184  00F4               	movwf	___lldiv@divisor+3
  1657     0185  3000               	movlw	0
  1658     0186  00F3               	movwf	___lldiv@divisor+2
  1659     0187  3000               	movlw	0
  1660     0188  00F2               	movwf	___lldiv@divisor+1
  1661     0189  3064               	movlw	100
  1662     018A  00F1               	movwf	___lldiv@divisor
  1663     018B  0823               	movf	_temp+3,w
  1664     018C  00F8               	movwf	___lldiv@dividend+3
  1665     018D  0822               	movf	_temp+2,w
  1666     018E  00F7               	movwf	___lldiv@dividend+2
  1667     018F  0821               	movf	_temp+1,w
  1668     0190  00F6               	movwf	___lldiv@dividend+1
  1669     0191  0820               	movf	_temp,w
  1670     0192  00F5               	movwf	___lldiv@dividend
  1671     0193  3183  232A  3180   	fcall	___lldiv
  1672     0196  0874               	movf	?___lldiv+3,w
  1673     0197  0020               	movlb	0	; select bank0
  1674     0198  00D0               	movwf	___llmod@dividend+3
  1675     0199  0873               	movf	?___lldiv+2,w
  1676     019A  00CF               	movwf	___llmod@dividend+2
  1677     019B  0872               	movf	?___lldiv+1,w
  1678     019C  00CE               	movwf	___llmod@dividend+1
  1679     019D  0871               	movf	?___lldiv,w
  1680     019E  00CD               	movwf	___llmod@dividend
  1681     019F  3183  2385  3180   	fcall	___llmod
  1682     01A2  0020               	movlb	0	; select bank0
  1683     01A3  0849               	movf	?___llmod,w
  1684     01A4  3E30               	addlw	48
  1685     01A5  00B5               	movwf	_bf_tx+5
  1686     01A6                     l1843:
  1687                           
  1688                           ;main.c: 86:         bf_tx[6] = (unsigned char) (temp / 10 % 10 + 48);
  1689     01A6  3000               	movlw	0
  1690     01A7  00CC               	movwf	___llmod@divisor+3
  1691     01A8  3000               	movlw	0
  1692     01A9  00CB               	movwf	___llmod@divisor+2
  1693     01AA  3000               	movlw	0
  1694     01AB  00CA               	movwf	___llmod@divisor+1
  1695     01AC  300A               	movlw	10
  1696     01AD  00C9               	movwf	___llmod@divisor
  1697     01AE  3000               	movlw	0
  1698     01AF  00F4               	movwf	___lldiv@divisor+3
  1699     01B0  3000               	movlw	0
  1700     01B1  00F3               	movwf	___lldiv@divisor+2
  1701     01B2  3000               	movlw	0
  1702     01B3  00F2               	movwf	___lldiv@divisor+1
  1703     01B4  300A               	movlw	10
  1704     01B5  00F1               	movwf	___lldiv@divisor
  1705     01B6  0823               	movf	_temp+3,w
  1706     01B7  00F8               	movwf	___lldiv@dividend+3
  1707     01B8  0822               	movf	_temp+2,w
  1708     01B9  00F7               	movwf	___lldiv@dividend+2
  1709     01BA  0821               	movf	_temp+1,w
  1710     01BB  00F6               	movwf	___lldiv@dividend+1
  1711     01BC  0820               	movf	_temp,w
  1712     01BD  00F5               	movwf	___lldiv@dividend
  1713     01BE  3183  232A  3180   	fcall	___lldiv
  1714     01C1  0874               	movf	?___lldiv+3,w
  1715     01C2  0020               	movlb	0	; select bank0
  1716     01C3  00D0               	movwf	___llmod@dividend+3
  1717     01C4  0873               	movf	?___lldiv+2,w
  1718     01C5  00CF               	movwf	___llmod@dividend+2
  1719     01C6  0872               	movf	?___lldiv+1,w
  1720     01C7  00CE               	movwf	___llmod@dividend+1
  1721     01C8  0871               	movf	?___lldiv,w
  1722     01C9  00CD               	movwf	___llmod@dividend
  1723     01CA  3183  2385  3180   	fcall	___llmod
  1724     01CD  0020               	movlb	0	; select bank0
  1725     01CE  0849               	movf	?___llmod,w
  1726     01CF  3E30               	addlw	48
  1727     01D0  00B6               	movwf	_bf_tx+6
  1728     01D1                     l1845:
  1729                           
  1730                           ;main.c: 87:         bf_tx[7] = (unsigned char) (temp / 1 % 10 + 48);
  1731     01D1  3000               	movlw	0
  1732     01D2  00CC               	movwf	___llmod@divisor+3
  1733     01D3  3000               	movlw	0
  1734     01D4  00CB               	movwf	___llmod@divisor+2
  1735     01D5  3000               	movlw	0
  1736     01D6  00CA               	movwf	___llmod@divisor+1
  1737     01D7  300A               	movlw	10
  1738     01D8  00C9               	movwf	___llmod@divisor
  1739     01D9  0823               	movf	_temp+3,w
  1740     01DA  00D0               	movwf	___llmod@dividend+3
  1741     01DB  0822               	movf	_temp+2,w
  1742     01DC  00CF               	movwf	___llmod@dividend+2
  1743     01DD  0821               	movf	_temp+1,w
  1744     01DE  00CE               	movwf	___llmod@dividend+1
  1745     01DF  0820               	movf	_temp,w
  1746     01E0  00CD               	movwf	___llmod@dividend
  1747     01E1  3183  2385  3180   	fcall	___llmod
  1748     01E4  0020               	movlb	0	; select bank0
  1749     01E5  0849               	movf	?___llmod,w
  1750     01E6  3E30               	addlw	48
  1751     01E7  00B7               	movwf	_bf_tx+7
  1752     01E8                     l1847:
  1753                           
  1754                           ;main.c: 89:         ADCON0 = 0X09;
  1755     01E8  3009               	movlw	9
  1756     01E9  0021               	movlb	1	; select bank1
  1757     01EA  009D               	movwf	29	;volatile
  1758     01EB                     l1849:
  1759                           
  1760                           ;main.c: 90:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  1761     01EB  3042               	movlw	66
  1762     01EC                     u1437:
  1763     01EC  0B89               	decfsz	9,f
  1764     01ED  29EC               	goto	u1437
  1765     01EE  3200               	nop2
  1766     01EF                     l1851:
  1767                           
  1768                           ;main.c: 91:         ADCON0bits.ADGO = 1;
  1769     01EF  0021               	movlb	1	; select bank1
  1770     01F0  149D               	bsf	29,1	;volatile
  1771     01F1                     l1853:
  1772                           
  1773                           ;main.c: 92:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1774     01F1  3002               	movlw	2
  1775     01F2  0020               	movlb	0	; select bank0
  1776     01F3  00DD               	movwf	??_main+1
  1777     01F4  3004               	movlw	4
  1778     01F5  00DC               	movwf	??_main
  1779     01F6  30BA               	movlw	186
  1780     01F7                     u1447:
  1781     01F7  0B89               	decfsz	9,f
  1782     01F8  29F7               	goto	u1447
  1783     01F9  0BDC               	decfsz	??_main,f
  1784     01FA  29F7               	goto	u1447
  1785     01FB  0BDD               	decfsz	??_main+1,f
  1786     01FC  29F7               	goto	u1447
  1787     01FD  0000               	nop
  1788     01FE                     l1855:
  1789                           
  1790                           ;main.c: 93:         mq2 = ADRES;
  1791     01FE  0021               	movlb	1	; select bank1
  1792     01FF  081C               	movf	28,w	;volatile
  1793     0200  0020               	movlb	0	; select bank0
  1794     0201  00AC               	movwf	_mq2+1
  1795     0202  0021               	movlb	1	; select bank1
  1796     0203  081B               	movf	27,w	;volatile
  1797     0204  0020               	movlb	0	; select bank0
  1798     0205  00AB               	movwf	_mq2
  1799     0206                     l1857:
  1800                           
  1801                           ;main.c: 94:         bf_tx[8] = (unsigned char) (mq2 / 1000 % 10 + 48);
  1802     0206  300A               	movlw	10
  1803     0207  00C4               	movwf	___lwmod@divisor
  1804     0208  3000               	movlw	0
  1805     0209  00C5               	movwf	___lwmod@divisor+1
  1806     020A  30E8               	movlw	232
  1807     020B  00F1               	movwf	___lwdiv@divisor
  1808     020C  3003               	movlw	3
  1809     020D  00F2               	movwf	___lwdiv@divisor+1
  1810     020E  082C               	movf	_mq2+1,w
  1811     020F  00F4               	movwf	___lwdiv@dividend+1
  1812     0210  082B               	movf	_mq2,w
  1813     0211  00F3               	movwf	___lwdiv@dividend
  1814     0212  3183  23D0  3180   	fcall	___lwdiv
  1815     0215  0872               	movf	?___lwdiv+1,w
  1816     0216  0020               	movlb	0	; select bank0
  1817     0217  00C7               	movwf	___lwmod@dividend+1
  1818     0218  0871               	movf	?___lwdiv,w
  1819     0219  00C6               	movwf	___lwmod@dividend
  1820     021A  3184  240C  3180   	fcall	___lwmod
  1821     021D  0020               	movlb	0	; select bank0
  1822     021E  0844               	movf	?___lwmod,w
  1823     021F  3E30               	addlw	48
  1824     0220  00B8               	movwf	_bf_tx+8
  1825     0221                     l1859:
  1826                           
  1827                           ;main.c: 95:         bf_tx[9] = (unsigned char) (mq2 / 100 % 10 + 48);
  1828     0221  300A               	movlw	10
  1829     0222  00C4               	movwf	___lwmod@divisor
  1830     0223  3000               	movlw	0
  1831     0224  00C5               	movwf	___lwmod@divisor+1
  1832     0225  3064               	movlw	100
  1833     0226  00F1               	movwf	___lwdiv@divisor
  1834     0227  3000               	movlw	0
  1835     0228  00F2               	movwf	___lwdiv@divisor+1
  1836     0229  082C               	movf	_mq2+1,w
  1837     022A  00F4               	movwf	___lwdiv@dividend+1
  1838     022B  082B               	movf	_mq2,w
  1839     022C  00F3               	movwf	___lwdiv@dividend
  1840     022D  3183  23D0  3180   	fcall	___lwdiv
  1841     0230  0872               	movf	?___lwdiv+1,w
  1842     0231  0020               	movlb	0	; select bank0
  1843     0232  00C7               	movwf	___lwmod@dividend+1
  1844     0233  0871               	movf	?___lwdiv,w
  1845     0234  00C6               	movwf	___lwmod@dividend
  1846     0235  3184  240C  3180   	fcall	___lwmod
  1847     0238  0020               	movlb	0	; select bank0
  1848     0239  0844               	movf	?___lwmod,w
  1849     023A  3E30               	addlw	48
  1850     023B  00B9               	movwf	_bf_tx+9
  1851     023C                     l1861:
  1852                           
  1853                           ;main.c: 96:         bf_tx[10] = (unsigned char) (mq2 / 10 % 10 + 48);
  1854     023C  300A               	movlw	10
  1855     023D  00C4               	movwf	___lwmod@divisor
  1856     023E  3000               	movlw	0
  1857     023F  00C5               	movwf	___lwmod@divisor+1
  1858     0240  300A               	movlw	10
  1859     0241  00F1               	movwf	___lwdiv@divisor
  1860     0242  3000               	movlw	0
  1861     0243  00F2               	movwf	___lwdiv@divisor+1
  1862     0244  082C               	movf	_mq2+1,w
  1863     0245  00F4               	movwf	___lwdiv@dividend+1
  1864     0246  082B               	movf	_mq2,w
  1865     0247  00F3               	movwf	___lwdiv@dividend
  1866     0248  3183  23D0  3180   	fcall	___lwdiv
  1867     024B  0872               	movf	?___lwdiv+1,w
  1868     024C  0020               	movlb	0	; select bank0
  1869     024D  00C7               	movwf	___lwmod@dividend+1
  1870     024E  0871               	movf	?___lwdiv,w
  1871     024F  00C6               	movwf	___lwmod@dividend
  1872     0250  3184  240C  3180   	fcall	___lwmod
  1873     0253  0020               	movlb	0	; select bank0
  1874     0254  0844               	movf	?___lwmod,w
  1875     0255  3E30               	addlw	48
  1876     0256  00BA               	movwf	_bf_tx+10
  1877     0257                     l1863:
  1878                           
  1879                           ;main.c: 97:         bf_tx[11] = (unsigned char) (mq2 / 1 % 10 + 48);
  1880     0257  300A               	movlw	10
  1881     0258  00C4               	movwf	___lwmod@divisor
  1882     0259  3000               	movlw	0
  1883     025A  00C5               	movwf	___lwmod@divisor+1
  1884     025B  082C               	movf	_mq2+1,w
  1885     025C  00C7               	movwf	___lwmod@dividend+1
  1886     025D  082B               	movf	_mq2,w
  1887     025E  00C6               	movwf	___lwmod@dividend
  1888     025F  3184  240C  3180   	fcall	___lwmod
  1889     0262  0020               	movlb	0	; select bank0
  1890     0263  0844               	movf	?___lwmod,w
  1891     0264  3E30               	addlw	48
  1892     0265  00BB               	movwf	_bf_tx+11
  1893     0266                     l1865:
  1894                           
  1895                           ;main.c: 100:         if (ena_send == 1) {
  1896     0266  1C7C               	btfss	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1897     0267  2A69               	goto	u1411
  1898     0268  2A6A               	goto	u1410
  1899     0269                     u1411:
  1900     0269  28DE               	goto	l1829
  1901     026A                     u1410:
  1902     026A                     l1867:
  1903                           
  1904                           ;main.c: 101:             ena_send = 0;
  1905     026A  107C               	bcf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1906     026B                     l1869:
  1907                           
  1908                           ;main.c: 102:             USART_TransmitString(bf_tx);
  1909     026B  3030               	movlw	(low (_bf_tx| 0))& (0+255)
  1910     026C  3184  249C  3180   	fcall	_USART_TransmitString
  1911     026F  28DE               	goto	l1829
  1912     0270  3180  2845         	ljmp	start
  1913     0272                     __end_of_main:
  1914                           
  1915                           	psect	text1
  1916     0272                     __ptext1:	
  1917 ;; *************** function _read_temp *****************
  1918 ;; Defined at:
  1919 ;;		line 26 in file "main.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  temp            4   20[BANK0 ] unsigned long 
  1924 ;;  dt3             4   16[BANK0 ] unsigned long 
  1925 ;;  dt2             4   12[BANK0 ] unsigned long 
  1926 ;;  dt1             4    8[BANK0 ] unsigned long 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  4    5[COMMON] unsigned long 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;Total ram usage:       28 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 3
  1943 ;; This function calls:
  1944 ;;		_i2c_read
  1945 ;;		_i2c_start
  1946 ;;		_i2c_stop
  1947 ;;		_i2c_write
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953     0272                     _read_temp:	
  1954                           ;psect for function _read_temp
  1955                           
  1956     0272                     l1389:	
  1957                           ;incstack = 0
  1958                           ; Regs used in _read_temp: [wreg+status,2+status,0+pclath+cstack]
  1959                           
  1960                           
  1961                           ;main.c: 27:     unsigned long dt1, dt2, dt3, temp;;main.c: 28:     i2c_start();
  1962     0272  3184  24E8  3182   	fcall	_i2c_start
  1963     0275                     l1391:
  1964                           
  1965                           ;main.c: 29:     i2c_write(0x71);
  1966     0275  3071               	movlw	113
  1967     0276  3184  2475  3182   	fcall	_i2c_write
  1968     0279                     l1393:
  1969                           
  1970                           ;main.c: 30:     i2c_read(1);
  1971     0279  3001               	movlw	1
  1972     027A  3184  2441  3182   	fcall	_i2c_read
  1973     027D                     l1395:
  1974                           
  1975                           ;main.c: 31:     i2c_read(1);
  1976     027D  3001               	movlw	1
  1977     027E  3184  2441  3182   	fcall	_i2c_read
  1978     0281                     l1397:
  1979                           
  1980                           ;main.c: 32:     i2c_read(1);
  1981     0281  3001               	movlw	1
  1982     0282  3184  2441  3182   	fcall	_i2c_read
  1983     0285                     l1399:
  1984                           
  1985                           ;main.c: 33:     dt1 = i2c_read(1) & 0x0f;
  1986     0285  3001               	movlw	1
  1987     0286  3184  2441  3182   	fcall	_i2c_read
  1988     0289  390F               	andlw	15
  1989     028A  0020               	movlb	0	; select bank0
  1990     028B  00C4               	movwf	??_read_temp
  1991     028C  01C5               	clrf	??_read_temp+1
  1992     028D  01C6               	clrf	??_read_temp+2
  1993     028E  01C7               	clrf	??_read_temp+3
  1994     028F  0847               	movf	??_read_temp+3,w
  1995     0290  00CF               	movwf	read_temp@dt1+3
  1996     0291  0846               	movf	??_read_temp+2,w
  1997     0292  00CE               	movwf	read_temp@dt1+2
  1998     0293  0845               	movf	??_read_temp+1,w
  1999     0294  00CD               	movwf	read_temp@dt1+1
  2000     0295  0844               	movf	??_read_temp,w
  2001     0296  00CC               	movwf	read_temp@dt1
  2002     0297                     l1401:
  2003                           
  2004                           ;main.c: 34:     dt2 = i2c_read(1);
  2005     0297  3001               	movlw	1
  2006     0298  3184  2441  3182   	fcall	_i2c_read
  2007     029B  0020               	movlb	0	; select bank0
  2008     029C  00C4               	movwf	??_read_temp
  2009     029D  01C5               	clrf	??_read_temp+1
  2010     029E  01C6               	clrf	??_read_temp+2
  2011     029F  01C7               	clrf	??_read_temp+3
  2012     02A0  0847               	movf	??_read_temp+3,w
  2013     02A1  00D3               	movwf	read_temp@dt2+3
  2014     02A2  0846               	movf	??_read_temp+2,w
  2015     02A3  00D2               	movwf	read_temp@dt2+2
  2016     02A4  0845               	movf	??_read_temp+1,w
  2017     02A5  00D1               	movwf	read_temp@dt2+1
  2018     02A6  0844               	movf	??_read_temp,w
  2019     02A7  00D0               	movwf	read_temp@dt2
  2020     02A8                     l1403:
  2021                           
  2022                           ;main.c: 35:     dt3 = i2c_read(0);
  2023     02A8  3000               	movlw	0
  2024     02A9  3184  2441  3182   	fcall	_i2c_read
  2025     02AC  0020               	movlb	0	; select bank0
  2026     02AD  00C4               	movwf	??_read_temp
  2027     02AE  01C5               	clrf	??_read_temp+1
  2028     02AF  01C6               	clrf	??_read_temp+2
  2029     02B0  01C7               	clrf	??_read_temp+3
  2030     02B1  0847               	movf	??_read_temp+3,w
  2031     02B2  00D7               	movwf	read_temp@dt3+3
  2032     02B3  0846               	movf	??_read_temp+2,w
  2033     02B4  00D6               	movwf	read_temp@dt3+2
  2034     02B5  0845               	movf	??_read_temp+1,w
  2035     02B6  00D5               	movwf	read_temp@dt3+1
  2036     02B7  0844               	movf	??_read_temp,w
  2037     02B8  00D4               	movwf	read_temp@dt3
  2038     02B9                     l1405:
  2039                           
  2040                           ;main.c: 36:     i2c_stop();
  2041     02B9  3184  24DF  3182   	fcall	_i2c_stop
  2042     02BC                     l1407:
  2043                           
  2044                           ;main.c: 37:     temp = (dt1 & 0x0f) << 16 | dt2 << 8 | dt3;
  2045     02BC  0020               	movlb	0	; select bank0
  2046     02BD  0850               	movf	read_temp@dt2,w
  2047     02BE  00C4               	movwf	??_read_temp
  2048     02BF  0851               	movf	read_temp@dt2+1,w
  2049     02C0  00C5               	movwf	??_read_temp+1
  2050     02C1  0852               	movf	read_temp@dt2+2,w
  2051     02C2  00C6               	movwf	??_read_temp+2
  2052     02C3  0853               	movf	read_temp@dt2+3,w
  2053     02C4  00C7               	movwf	??_read_temp+3
  2054     02C5  3008               	movlw	8
  2055     02C6                     u775:
  2056     02C6  35C4               	lslf	??_read_temp,f
  2057     02C7  0DC5               	rlf	??_read_temp+1,f
  2058     02C8  0DC6               	rlf	??_read_temp+2,f
  2059     02C9  0DC7               	rlf	??_read_temp+3,f
  2060     02CA                     u770:
  2061     02CA  0B89               	decfsz	9,f
  2062     02CB  2AC6               	goto	u775
  2063     02CC  300F               	movlw	15
  2064     02CD  054C               	andwf	read_temp@dt1,w
  2065     02CE  00C8               	movwf	??_read_temp+4
  2066     02CF  3000               	movlw	0
  2067     02D0  054D               	andwf	read_temp@dt1+1,w
  2068     02D1  00C9               	movwf	??_read_temp+5
  2069     02D2  3000               	movlw	0
  2070     02D3  054E               	andwf	read_temp@dt1+2,w
  2071     02D4  00CA               	movwf	??_read_temp+6
  2072     02D5  3000               	movlw	0
  2073     02D6  054F               	andwf	read_temp@dt1+3,w
  2074     02D7  00CB               	movwf	??_read_temp+7
  2075     02D8  3010               	movlw	16
  2076     02D9                     u785:
  2077     02D9  35C8               	lslf	??_read_temp+4,f
  2078     02DA  0DC9               	rlf	??_read_temp+5,f
  2079     02DB  0DCA               	rlf	??_read_temp+6,f
  2080     02DC  0DCB               	rlf	??_read_temp+7,f
  2081     02DD                     u780:
  2082     02DD  0B89               	decfsz	9,f
  2083     02DE  2AD9               	goto	u785
  2084     02DF  0848               	movf	??_read_temp+4,w
  2085     02E0  04C4               	iorwf	??_read_temp,f
  2086     02E1  0849               	movf	??_read_temp+5,w
  2087     02E2  04C5               	iorwf	??_read_temp+1,f
  2088     02E3  084A               	movf	??_read_temp+6,w
  2089     02E4  04C6               	iorwf	??_read_temp+2,f
  2090     02E5  084B               	movf	??_read_temp+7,w
  2091     02E6  04C7               	iorwf	??_read_temp+3,f
  2092     02E7  0854               	movf	read_temp@dt3,w
  2093     02E8  0444               	iorwf	??_read_temp,w
  2094     02E9  00D8               	movwf	read_temp@temp
  2095     02EA  0855               	movf	read_temp@dt3+1,w
  2096     02EB  0445               	iorwf	??_read_temp+1,w
  2097     02EC  00D9               	movwf	read_temp@temp+1
  2098     02ED  0856               	movf	read_temp@dt3+2,w
  2099     02EE  0446               	iorwf	??_read_temp+2,w
  2100     02EF  00DA               	movwf	read_temp@temp+2
  2101     02F0  0857               	movf	read_temp@dt3+3,w
  2102     02F1  0447               	iorwf	??_read_temp+3,w
  2103     02F2  00DB               	movwf	read_temp@temp+3
  2104     02F3                     l1409:
  2105                           
  2106                           ;main.c: 38:     if (temp > 781189) temp = 781189;
  2107     02F3  085B               	movf	read_temp@temp+3,w
  2108     02F4  1D03               	btfss	3,2
  2109     02F5  2B00               	goto	u790
  2110     02F6  3086               	movlw	134
  2111     02F7  0258               	subwf	read_temp@temp,w
  2112     02F8  30EB               	movlw	235
  2113     02F9  3B59               	subwfb	read_temp@temp+1,w
  2114     02FA  300B               	movlw	11
  2115     02FB  3B5A               	subwfb	read_temp@temp+2,w
  2116     02FC  1C03               	btfss	3,0
  2117     02FD  2AFF               	goto	u791
  2118     02FE  2B00               	goto	u790
  2119     02FF                     u791:
  2120     02FF  2B09               	goto	l1413
  2121     0300                     u790:
  2122     0300                     l1411:
  2123     0300  3000               	movlw	0
  2124     0301  0020               	movlb	0	; select bank0
  2125     0302  00DB               	movwf	read_temp@temp+3
  2126     0303  300B               	movlw	11
  2127     0304  00DA               	movwf	read_temp@temp+2
  2128     0305  30EB               	movlw	235
  2129     0306  00D9               	movwf	read_temp@temp+1
  2130     0307  3085               	movlw	133
  2131     0308  00D8               	movwf	read_temp@temp
  2132     0309                     l1413:
  2133                           
  2134                           ;main.c: 39:     if (temp < 314573) temp = 314573;
  2135     0309  0020               	movlb	0	; select bank0
  2136     030A  085B               	movf	read_temp@temp+3,w
  2137     030B  1D03               	btfss	3,2
  2138     030C  2B16               	goto	u801
  2139     030D  30CD               	movlw	205
  2140     030E  0258               	subwf	read_temp@temp,w
  2141     030F  30CC               	movlw	204
  2142     0310  3B59               	subwfb	read_temp@temp+1,w
  2143     0311  3004               	movlw	4
  2144     0312  3B5A               	subwfb	read_temp@temp+2,w
  2145     0313  1803               	btfsc	3,0
  2146     0314  2B16               	goto	u801
  2147     0315  2B17               	goto	u800
  2148     0316                     u801:
  2149     0316  2B20               	goto	l72
  2150     0317                     u800:
  2151     0317                     l1415:
  2152     0317  3000               	movlw	0
  2153     0318  0020               	movlb	0	; select bank0
  2154     0319  00DB               	movwf	read_temp@temp+3
  2155     031A  3004               	movlw	4
  2156     031B  00DA               	movwf	read_temp@temp+2
  2157     031C  30CC               	movlw	204
  2158     031D  00D9               	movwf	read_temp@temp+1
  2159     031E  30CD               	movlw	205
  2160     031F  00D8               	movwf	read_temp@temp
  2161     0320                     l72:
  2162                           
  2163                           ;main.c: 40:     return temp;
  2164     0320  0020               	movlb	0	; select bank0
  2165     0321  085B               	movf	read_temp@temp+3,w
  2166     0322  00F8               	movwf	?_read_temp+3
  2167     0323  085A               	movf	read_temp@temp+2,w
  2168     0324  00F7               	movwf	?_read_temp+2
  2169     0325  0859               	movf	read_temp@temp+1,w
  2170     0326  00F6               	movwf	?_read_temp+1
  2171     0327  0858               	movf	read_temp@temp,w
  2172     0328  00F5               	movwf	?_read_temp
  2173     0329                     l73:
  2174     0329  0008               	return
  2175     032A                     __end_of_read_temp:
  2176                           
  2177                           	psect	text2
  2178     0441                     __ptext2:	
  2179 ;; *************** function _i2c_read *****************
  2180 ;; Defined at:
  2181 ;;		line 39 in file "tv_i2c.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  ACK             1    wreg     unsigned char 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  ACK             1    2[COMMON] unsigned char 
  2186 ;;  i               1    3[COMMON] unsigned char 
  2187 ;;  DATA            1    4[COMMON] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      unsigned char 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;Total ram usage:        4 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 2
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_read_temp
  2208 ;;		_READ_T_H_AHT10
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     0441                     _i2c_read:	
  2213                           ;psect for function _i2c_read
  2214                           
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2218                           ;i2c_read@ACK stored from wreg
  2219     0441  00F2               	movwf	i2c_read@ACK
  2220     0442                     l1351:
  2221                           
  2222                           ;tv_i2c.c: 39: unsigned char i2c_read(unsigned char ACK);tv_i2c.c: 40: {;tv_i2c.c: 41:  
      +                             unsigned char DATA;;tv_i2c.c: 42:     TRISC1=0;
  2223     0442  0021               	movlb	1	; select bank1
  2224     0443  108E               	bcf	14,1	;volatile
  2225                           
  2226                           ;tv_i2c.c: 43:     LATC1=0;
  2227     0444  0022               	movlb	2	; select bank2
  2228     0445  108E               	bcf	14,1	;volatile
  2229                           
  2230                           ;tv_i2c.c: 44:     TRISC2=1;
  2231     0446  0021               	movlb	1	; select bank1
  2232     0447  150E               	bsf	14,2	;volatile
  2233     0448                     l1353:
  2234                           
  2235                           ;tv_i2c.c: 45:     for (unsigned char i=0;i<8;i++)
  2236     0448  01F3               	clrf	i2c_read@i
  2237     0449                     l149:
  2238                           
  2239                           ;tv_i2c.c: 46:     {;tv_i2c.c: 47:         LATC1 = 1;
  2240     0449  0022               	movlb	2	; select bank2
  2241     044A  148E               	bsf	14,1	;volatile
  2242                           
  2243                           ;tv_i2c.c: 48:         if(PORTCbits.RC2 == 1) DATA = (unsigned char)(DATA << 1) | 1;
  2244     044B  0020               	movlb	0	; select bank0
  2245     044C  1D0E               	btfss	14,2	;volatile
  2246     044D  2C4F               	goto	u721
  2247     044E  2C50               	goto	u720
  2248     044F                     u721:
  2249     044F  2C53               	goto	l1361
  2250     0450                     u720:
  2251     0450                     l1359:
  2252     0450  1403               	setc
  2253     0451  0DF4               	rlf	i2c_read@DATA,f
  2254     0452  2C55               	goto	l1363
  2255     0453                     l1361:
  2256     0453  3574               	lslf	i2c_read@DATA,w
  2257     0454  00F4               	movwf	i2c_read@DATA
  2258     0455                     l1363:
  2259                           
  2260                           ;tv_i2c.c: 50:         LATC1=0;
  2261     0455  0022               	movlb	2	; select bank2
  2262     0456  108E               	bcf	14,1	;volatile
  2263     0457                     l1365:
  2264                           
  2265                           ;tv_i2c.c: 51:         _delay((unsigned long)((10)*(16000000/4000000.0)));
  2266     0457  300D               	movlw	13
  2267     0458                     u1457:
  2268     0458  0B89               	decfsz	9,f
  2269     0459  2C58               	goto	u1457
  2270     045A  0000               	nop
  2271     045B                     l1367:
  2272                           
  2273                           ;tv_i2c.c: 52:     }
  2274     045B  3001               	movlw	1
  2275     045C  00F1               	movwf	??_i2c_read
  2276     045D  0871               	movf	??_i2c_read,w
  2277     045E  07F3               	addwf	i2c_read@i,f
  2278     045F  3008               	movlw	8
  2279     0460  0273               	subwf	i2c_read@i,w
  2280     0461  1C03               	skipc
  2281     0462  2C64               	goto	u731
  2282     0463  2C65               	goto	u730
  2283     0464                     u731:
  2284     0464  2C49               	goto	l149
  2285     0465                     u730:
  2286     0465                     l150:
  2287                           
  2288                           ;tv_i2c.c: 53:     TRISC2=0;
  2289     0465  0021               	movlb	1	; select bank1
  2290     0466  110E               	bcf	14,2	;volatile
  2291     0467                     l1369:
  2292                           
  2293                           ;tv_i2c.c: 54:     if (ACK == 1) LATC2 = 0;
  2294     0467  0372               	decf	i2c_read@ACK,w
  2295     0468  1D03               	btfss	3,2
  2296     0469  2C6B               	goto	u741
  2297     046A  2C6C               	goto	u740
  2298     046B                     u741:
  2299     046B  2C6F               	goto	l153
  2300     046C                     u740:
  2301     046C                     l1371:
  2302     046C  0022               	movlb	2	; select bank2
  2303     046D  110E               	bcf	14,2	;volatile
  2304     046E  2C71               	goto	l154
  2305     046F                     l153:	
  2306                           ;tv_i2c.c: 55:     else LATC2 = 1;
  2307                           
  2308     046F  0022               	movlb	2	; select bank2
  2309     0470  150E               	bsf	14,2	;volatile
  2310     0471                     l154:
  2311                           
  2312                           ;tv_i2c.c: 56:     LATC1=1;
  2313     0471  148E               	bsf	14,1	;volatile
  2314                           
  2315                           ;tv_i2c.c: 57:     LATC1=0;
  2316     0472  108E               	bcf	14,1	;volatile
  2317     0473                     l1373:
  2318                           
  2319                           ;tv_i2c.c: 58:     return DATA;
  2320     0473  0874               	movf	i2c_read@DATA,w
  2321     0474                     l155:
  2322     0474  0008               	return
  2323     0475                     __end_of_i2c_read:
  2324                           
  2325                           	psect	text3
  2326     040C                     __ptext3:	
  2327 ;; *************** function ___lwmod *****************
  2328 ;; Defined at:
  2329 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwmod.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  divisor         2    0[BANK0 ] unsigned int 
  2332 ;;  dividend        2    2[BANK0 ] unsigned int 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  counter         1   10[COMMON] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2    0[BANK0 ] unsigned int 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2344 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;Total ram usage:        6 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 2
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358     040C                     ___lwmod:	
  2359                           ;psect for function ___lwmod
  2360                           
  2361     040C                     l1765:	
  2362                           ;incstack = 0
  2363                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2364                           
  2365     040C  0020               	movlb	0	; select bank0
  2366     040D  0844               	movf	___lwmod@divisor,w
  2367     040E  0445               	iorwf	___lwmod@divisor+1,w
  2368     040F  1903               	btfsc	3,2
  2369     0410  2C12               	goto	u1351
  2370     0411  2C13               	goto	u1350
  2371     0412                     u1351:
  2372     0412  2C3C               	goto	l1783
  2373     0413                     u1350:
  2374     0413                     l1767:
  2375     0413  01FA               	clrf	___lwmod@counter
  2376     0414  0AFA               	incf	___lwmod@counter,f
  2377     0415  2C1F               	goto	l1773
  2378     0416                     l1769:
  2379     0416  3001               	movlw	1
  2380     0417                     u1365:
  2381     0417  35C4               	lslf	___lwmod@divisor,f
  2382     0418  0DC5               	rlf	___lwmod@divisor+1,f
  2383     0419  0B89               	decfsz	9,f
  2384     041A  2C17               	goto	u1365
  2385     041B                     l1771:
  2386     041B  3001               	movlw	1
  2387     041C  00F9               	movwf	??___lwmod
  2388     041D  0879               	movf	??___lwmod,w
  2389     041E  07FA               	addwf	___lwmod@counter,f
  2390     041F                     l1773:
  2391     041F  1FC5               	btfss	___lwmod@divisor+1,7
  2392     0420  2C22               	goto	u1371
  2393     0421  2C23               	goto	u1370
  2394     0422                     u1371:
  2395     0422  2C16               	goto	l1769
  2396     0423                     u1370:
  2397     0423                     l1775:
  2398     0423  0845               	movf	___lwmod@divisor+1,w
  2399     0424  0247               	subwf	___lwmod@dividend+1,w
  2400     0425  1D03               	skipz
  2401     0426  2C29               	goto	u1385
  2402     0427  0844               	movf	___lwmod@divisor,w
  2403     0428  0246               	subwf	___lwmod@dividend,w
  2404     0429                     u1385:
  2405     0429  1C03               	skipc
  2406     042A  2C2C               	goto	u1381
  2407     042B  2C2D               	goto	u1380
  2408     042C                     u1381:
  2409     042C  2C31               	goto	l1779
  2410     042D                     u1380:
  2411     042D                     l1777:
  2412     042D  0844               	movf	___lwmod@divisor,w
  2413     042E  02C6               	subwf	___lwmod@dividend,f
  2414     042F  0845               	movf	___lwmod@divisor+1,w
  2415     0430  3BC7               	subwfb	___lwmod@dividend+1,f
  2416     0431                     l1779:
  2417     0431  3001               	movlw	1
  2418     0432                     u1395:
  2419     0432  36C5               	lsrf	___lwmod@divisor+1,f
  2420     0433  0CC4               	rrf	___lwmod@divisor,f
  2421     0434  0B89               	decfsz	9,f
  2422     0435  2C32               	goto	u1395
  2423     0436                     l1781:
  2424     0436  3001               	movlw	1
  2425     0437  02FA               	subwf	___lwmod@counter,f
  2426     0438  1D03               	btfss	3,2
  2427     0439  2C3B               	goto	u1401
  2428     043A  2C3C               	goto	u1400
  2429     043B                     u1401:
  2430     043B  2C23               	goto	l1775
  2431     043C                     u1400:
  2432     043C                     l1783:
  2433     043C  0847               	movf	___lwmod@dividend+1,w
  2434     043D  00C5               	movwf	?___lwmod+1
  2435     043E  0846               	movf	___lwmod@dividend,w
  2436     043F  00C4               	movwf	?___lwmod
  2437     0440                     l701:
  2438     0440  0008               	return
  2439     0441                     __end_of___lwmod:
  2440                           
  2441                           	psect	text4
  2442     03D0                     __ptext4:	
  2443 ;; *************** function ___lwdiv *****************
  2444 ;; Defined at:
  2445 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwdiv.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  divisor         2    1[COMMON] unsigned int 
  2448 ;;  dividend        2    3[COMMON] unsigned int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  quotient        2    6[COMMON] unsigned int 
  2451 ;;  counter         1    8[COMMON] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2    1[COMMON] unsigned int 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;Total ram usage:        8 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 2
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475     03D0                     ___lwdiv:	
  2476                           ;psect for function ___lwdiv
  2477                           
  2478     03D0                     l1509:	
  2479                           ;incstack = 0
  2480                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2481                           
  2482     03D0  01F6               	clrf	___lwdiv@quotient
  2483     03D1  01F7               	clrf	___lwdiv@quotient+1
  2484     03D2                     l1511:
  2485     03D2  0871               	movf	___lwdiv@divisor,w
  2486     03D3  0472               	iorwf	___lwdiv@divisor+1,w
  2487     03D4  1903               	btfsc	3,2
  2488     03D5  2BD7               	goto	u971
  2489     03D6  2BD8               	goto	u970
  2490     03D7                     u971:
  2491     03D7  2C07               	goto	l1531
  2492     03D8                     u970:
  2493     03D8                     l1513:
  2494     03D8  01F8               	clrf	___lwdiv@counter
  2495     03D9  0AF8               	incf	___lwdiv@counter,f
  2496     03DA  2BE4               	goto	l1519
  2497     03DB                     l1515:
  2498     03DB  3001               	movlw	1
  2499     03DC                     u985:
  2500     03DC  35F1               	lslf	___lwdiv@divisor,f
  2501     03DD  0DF2               	rlf	___lwdiv@divisor+1,f
  2502     03DE  0B89               	decfsz	9,f
  2503     03DF  2BDC               	goto	u985
  2504     03E0                     l1517:
  2505     03E0  3001               	movlw	1
  2506     03E1  00F5               	movwf	??___lwdiv
  2507     03E2  0875               	movf	??___lwdiv,w
  2508     03E3  07F8               	addwf	___lwdiv@counter,f
  2509     03E4                     l1519:
  2510     03E4  1FF2               	btfss	___lwdiv@divisor+1,7
  2511     03E5  2BE7               	goto	u991
  2512     03E6  2BE8               	goto	u990
  2513     03E7                     u991:
  2514     03E7  2BDB               	goto	l1515
  2515     03E8                     u990:
  2516     03E8                     l1521:
  2517     03E8  3001               	movlw	1
  2518     03E9                     u1005:
  2519     03E9  35F6               	lslf	___lwdiv@quotient,f
  2520     03EA  0DF7               	rlf	___lwdiv@quotient+1,f
  2521     03EB  0B89               	decfsz	9,f
  2522     03EC  2BE9               	goto	u1005
  2523     03ED  0872               	movf	___lwdiv@divisor+1,w
  2524     03EE  0274               	subwf	___lwdiv@dividend+1,w
  2525     03EF  1D03               	skipz
  2526     03F0  2BF3               	goto	u1015
  2527     03F1  0871               	movf	___lwdiv@divisor,w
  2528     03F2  0273               	subwf	___lwdiv@dividend,w
  2529     03F3                     u1015:
  2530     03F3  1C03               	skipc
  2531     03F4  2BF6               	goto	u1011
  2532     03F5  2BF7               	goto	u1010
  2533     03F6                     u1011:
  2534     03F6  2BFC               	goto	l1527
  2535     03F7                     u1010:
  2536     03F7                     l1523:
  2537     03F7  0871               	movf	___lwdiv@divisor,w
  2538     03F8  02F3               	subwf	___lwdiv@dividend,f
  2539     03F9  0872               	movf	___lwdiv@divisor+1,w
  2540     03FA  3BF4               	subwfb	___lwdiv@dividend+1,f
  2541     03FB                     l1525:
  2542     03FB  1476               	bsf	___lwdiv@quotient,0
  2543     03FC                     l1527:
  2544     03FC  3001               	movlw	1
  2545     03FD                     u1025:
  2546     03FD  36F2               	lsrf	___lwdiv@divisor+1,f
  2547     03FE  0CF1               	rrf	___lwdiv@divisor,f
  2548     03FF  0B89               	decfsz	9,f
  2549     0400  2BFD               	goto	u1025
  2550     0401                     l1529:
  2551     0401  3001               	movlw	1
  2552     0402  02F8               	subwf	___lwdiv@counter,f
  2553     0403  1D03               	btfss	3,2
  2554     0404  2C06               	goto	u1031
  2555     0405  2C07               	goto	u1030
  2556     0406                     u1031:
  2557     0406  2BE8               	goto	l1521
  2558     0407                     u1030:
  2559     0407                     l1531:
  2560     0407  0877               	movf	___lwdiv@quotient+1,w
  2561     0408  00F2               	movwf	?___lwdiv+1
  2562     0409  0876               	movf	___lwdiv@quotient,w
  2563     040A  00F1               	movwf	?___lwdiv
  2564     040B                     l691:
  2565     040B  0008               	return
  2566     040C                     __end_of___lwdiv:
  2567                           
  2568                           	psect	text5
  2569     0385                     __ptext5:	
  2570 ;; *************** function ___llmod *****************
  2571 ;; Defined at:
  2572 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\llmod.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  divisor         4    5[BANK0 ] unsigned long 
  2575 ;;  dividend        4    9[BANK0 ] unsigned long 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  counter         1   11[COMMON] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  4    5[BANK0 ] unsigned long 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;Total ram usage:       10 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 2
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601     0385                     ___llmod:	
  2602                           ;psect for function ___llmod
  2603                           
  2604     0385                     l1489:	
  2605                           ;incstack = 0
  2606                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2607                           
  2608     0385  0020               	movlb	0	; select bank0
  2609     0386  084C               	movf	___llmod@divisor+3,w
  2610     0387  044B               	iorwf	___llmod@divisor+2,w
  2611     0388  044A               	iorwf	___llmod@divisor+1,w
  2612     0389  0449               	iorwf	___llmod@divisor,w
  2613     038A  1903               	skipnz
  2614     038B  2B8D               	goto	u911
  2615     038C  2B8E               	goto	u910
  2616     038D                     u911:
  2617     038D  2BC7               	goto	l1505
  2618     038E                     u910:
  2619     038E                     l1491:
  2620     038E  01FB               	clrf	___llmod@counter
  2621     038F  0AFB               	incf	___llmod@counter,f
  2622     0390  2B9C               	goto	l1495
  2623     0391                     l1493:
  2624     0391  3001               	movlw	1
  2625     0392                     u925:
  2626     0392  35C9               	lslf	___llmod@divisor,f
  2627     0393  0DCA               	rlf	___llmod@divisor+1,f
  2628     0394  0DCB               	rlf	___llmod@divisor+2,f
  2629     0395  0DCC               	rlf	___llmod@divisor+3,f
  2630     0396  0B89               	decfsz	9,f
  2631     0397  2B92               	goto	u925
  2632     0398  3001               	movlw	1
  2633     0399  00FA               	movwf	??___llmod
  2634     039A  087A               	movf	??___llmod,w
  2635     039B  07FB               	addwf	___llmod@counter,f
  2636     039C                     l1495:
  2637     039C  1FCC               	btfss	___llmod@divisor+3,7
  2638     039D  2B9F               	goto	u931
  2639     039E  2BA0               	goto	u930
  2640     039F                     u931:
  2641     039F  2B91               	goto	l1493
  2642     03A0                     u930:
  2643     03A0                     l1497:
  2644     03A0  084C               	movf	___llmod@divisor+3,w
  2645     03A1  0250               	subwf	___llmod@dividend+3,w
  2646     03A2  1D03               	skipz
  2647     03A3  2BAE               	goto	u945
  2648     03A4  084B               	movf	___llmod@divisor+2,w
  2649     03A5  024F               	subwf	___llmod@dividend+2,w
  2650     03A6  1D03               	skipz
  2651     03A7  2BAE               	goto	u945
  2652     03A8  084A               	movf	___llmod@divisor+1,w
  2653     03A9  024E               	subwf	___llmod@dividend+1,w
  2654     03AA  1D03               	skipz
  2655     03AB  2BAE               	goto	u945
  2656     03AC  0849               	movf	___llmod@divisor,w
  2657     03AD  024D               	subwf	___llmod@dividend,w
  2658     03AE                     u945:
  2659     03AE  1C03               	skipc
  2660     03AF  2BB1               	goto	u941
  2661     03B0  2BB2               	goto	u940
  2662     03B1                     u941:
  2663     03B1  2BBA               	goto	l1501
  2664     03B2                     u940:
  2665     03B2                     l1499:
  2666     03B2  0849               	movf	___llmod@divisor,w
  2667     03B3  02CD               	subwf	___llmod@dividend,f
  2668     03B4  084A               	movf	___llmod@divisor+1,w
  2669     03B5  3BCE               	subwfb	___llmod@dividend+1,f
  2670     03B6  084B               	movf	___llmod@divisor+2,w
  2671     03B7  3BCF               	subwfb	___llmod@dividend+2,f
  2672     03B8  084C               	movf	___llmod@divisor+3,w
  2673     03B9  3BD0               	subwfb	___llmod@dividend+3,f
  2674     03BA                     l1501:
  2675     03BA  3001               	movlw	1
  2676     03BB                     u955:
  2677     03BB  36CC               	lsrf	___llmod@divisor+3,f
  2678     03BC  0CCB               	rrf	___llmod@divisor+2,f
  2679     03BD  0CCA               	rrf	___llmod@divisor+1,f
  2680     03BE  0CC9               	rrf	___llmod@divisor,f
  2681     03BF  0B89               	decfsz	9,f
  2682     03C0  2BBB               	goto	u955
  2683     03C1                     l1503:
  2684     03C1  3001               	movlw	1
  2685     03C2  02FB               	subwf	___llmod@counter,f
  2686     03C3  1D03               	btfss	3,2
  2687     03C4  2BC6               	goto	u961
  2688     03C5  2BC7               	goto	u960
  2689     03C6                     u961:
  2690     03C6  2BA0               	goto	l1497
  2691     03C7                     u960:
  2692     03C7                     l1505:
  2693     03C7  0850               	movf	___llmod@dividend+3,w
  2694     03C8  00CC               	movwf	?___llmod+3
  2695     03C9  084F               	movf	___llmod@dividend+2,w
  2696     03CA  00CB               	movwf	?___llmod+2
  2697     03CB  084E               	movf	___llmod@dividend+1,w
  2698     03CC  00CA               	movwf	?___llmod+1
  2699     03CD  084D               	movf	___llmod@dividend,w
  2700     03CE  00C9               	movwf	?___llmod
  2701     03CF                     l641:
  2702     03CF  0008               	return
  2703     03D0                     __end_of___llmod:
  2704                           
  2705                           	psect	text6
  2706     032A                     __ptext6:	
  2707 ;; *************** function ___lldiv *****************
  2708 ;; Defined at:
  2709 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\__lldiv.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  divisor         4    1[COMMON] unsigned long 
  2712 ;;  dividend        4    5[COMMON] unsigned long 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  quotient        4    0[BANK0 ] unsigned long 
  2715 ;;  counter         1    4[BANK0 ] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  4    1[COMMON] unsigned long 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2725 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;Total ram usage:       14 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 2
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739     032A                     ___lldiv:	
  2740                           ;psect for function ___lldiv
  2741                           
  2742     032A                     l1465:	
  2743                           ;incstack = 0
  2744                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2745                           
  2746     032A  3000               	movlw	0
  2747     032B  0020               	movlb	0	; select bank0
  2748     032C  00C7               	movwf	___lldiv@quotient+3
  2749     032D  3000               	movlw	0
  2750     032E  00C6               	movwf	___lldiv@quotient+2
  2751     032F  3000               	movlw	0
  2752     0330  00C5               	movwf	___lldiv@quotient+1
  2753     0331  3000               	movlw	0
  2754     0332  00C4               	movwf	___lldiv@quotient
  2755     0333  0874               	movf	___lldiv@divisor+3,w
  2756     0334  0473               	iorwf	___lldiv@divisor+2,w
  2757     0335  0472               	iorwf	___lldiv@divisor+1,w
  2758     0336  0471               	iorwf	___lldiv@divisor,w
  2759     0337  1903               	skipnz
  2760     0338  2B3A               	goto	u841
  2761     0339  2B3B               	goto	u840
  2762     033A                     u841:
  2763     033A  2B7C               	goto	l1485
  2764     033B                     u840:
  2765     033B                     l1467:
  2766     033B  01C8               	clrf	___lldiv@counter
  2767     033C  0AC8               	incf	___lldiv@counter,f
  2768     033D  2B49               	goto	l1471
  2769     033E                     l1469:
  2770     033E  3001               	movlw	1
  2771     033F                     u855:
  2772     033F  35F1               	lslf	___lldiv@divisor,f
  2773     0340  0DF2               	rlf	___lldiv@divisor+1,f
  2774     0341  0DF3               	rlf	___lldiv@divisor+2,f
  2775     0342  0DF4               	rlf	___lldiv@divisor+3,f
  2776     0343  0B89               	decfsz	9,f
  2777     0344  2B3F               	goto	u855
  2778     0345  3001               	movlw	1
  2779     0346  00F9               	movwf	??___lldiv
  2780     0347  0879               	movf	??___lldiv,w
  2781     0348  07C8               	addwf	___lldiv@counter,f
  2782     0349                     l1471:
  2783     0349  1FF4               	btfss	___lldiv@divisor+3,7
  2784     034A  2B4C               	goto	u861
  2785     034B  2B4D               	goto	u860
  2786     034C                     u861:
  2787     034C  2B3E               	goto	l1469
  2788     034D                     u860:
  2789     034D                     l1473:
  2790     034D  3001               	movlw	1
  2791     034E                     u875:
  2792     034E  35C4               	lslf	___lldiv@quotient,f
  2793     034F  0DC5               	rlf	___lldiv@quotient+1,f
  2794     0350  0DC6               	rlf	___lldiv@quotient+2,f
  2795     0351  0DC7               	rlf	___lldiv@quotient+3,f
  2796     0352  0B89               	decfsz	9,f
  2797     0353  2B4E               	goto	u875
  2798     0354                     l1475:
  2799     0354  0874               	movf	___lldiv@divisor+3,w
  2800     0355  0278               	subwf	___lldiv@dividend+3,w
  2801     0356  1D03               	skipz
  2802     0357  2B62               	goto	u885
  2803     0358  0873               	movf	___lldiv@divisor+2,w
  2804     0359  0277               	subwf	___lldiv@dividend+2,w
  2805     035A  1D03               	skipz
  2806     035B  2B62               	goto	u885
  2807     035C  0872               	movf	___lldiv@divisor+1,w
  2808     035D  0276               	subwf	___lldiv@dividend+1,w
  2809     035E  1D03               	skipz
  2810     035F  2B62               	goto	u885
  2811     0360  0871               	movf	___lldiv@divisor,w
  2812     0361  0275               	subwf	___lldiv@dividend,w
  2813     0362                     u885:
  2814     0362  1C03               	skipc
  2815     0363  2B65               	goto	u881
  2816     0364  2B66               	goto	u880
  2817     0365                     u881:
  2818     0365  2B6F               	goto	l1481
  2819     0366                     u880:
  2820     0366                     l1477:
  2821     0366  0871               	movf	___lldiv@divisor,w
  2822     0367  02F5               	subwf	___lldiv@dividend,f
  2823     0368  0872               	movf	___lldiv@divisor+1,w
  2824     0369  3BF6               	subwfb	___lldiv@dividend+1,f
  2825     036A  0873               	movf	___lldiv@divisor+2,w
  2826     036B  3BF7               	subwfb	___lldiv@dividend+2,f
  2827     036C  0874               	movf	___lldiv@divisor+3,w
  2828     036D  3BF8               	subwfb	___lldiv@dividend+3,f
  2829     036E                     l1479:
  2830     036E  1444               	bsf	___lldiv@quotient,0
  2831     036F                     l1481:
  2832     036F  3001               	movlw	1
  2833     0370                     u895:
  2834     0370  36F4               	lsrf	___lldiv@divisor+3,f
  2835     0371  0CF3               	rrf	___lldiv@divisor+2,f
  2836     0372  0CF2               	rrf	___lldiv@divisor+1,f
  2837     0373  0CF1               	rrf	___lldiv@divisor,f
  2838     0374  0B89               	decfsz	9,f
  2839     0375  2B70               	goto	u895
  2840     0376                     l1483:
  2841     0376  3001               	movlw	1
  2842     0377  02C8               	subwf	___lldiv@counter,f
  2843     0378  1D03               	btfss	3,2
  2844     0379  2B7B               	goto	u901
  2845     037A  2B7C               	goto	u900
  2846     037B                     u901:
  2847     037B  2B4D               	goto	l1473
  2848     037C                     u900:
  2849     037C                     l1485:
  2850     037C  0847               	movf	___lldiv@quotient+3,w
  2851     037D  00F4               	movwf	?___lldiv+3
  2852     037E  0846               	movf	___lldiv@quotient+2,w
  2853     037F  00F3               	movwf	?___lldiv+2
  2854     0380  0845               	movf	___lldiv@quotient+1,w
  2855     0381  00F2               	movwf	?___lldiv+1
  2856     0382  0844               	movf	___lldiv@quotient,w
  2857     0383  00F1               	movwf	?___lldiv
  2858     0384                     l447:
  2859     0384  0008               	return
  2860     0385                     __end_of___lldiv:
  2861                           
  2862                           	psect	text7
  2863     049C                     __ptext7:	
  2864 ;; *************** function _USART_TransmitString *****************
  2865 ;; Defined at:
  2866 ;;		line 23 in file "tv_uart.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  out             1    wreg     PTR unsigned char 
  2869 ;;		 -> bf_tx(20), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  out             1    3[COMMON] PTR unsigned char 
  2872 ;;		 -> bf_tx(20), 
  2873 ;;  i               1    4[COMMON] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;Total ram usage:        3 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 3
  2890 ;; This function calls:
  2891 ;;		_USART_TransmitChar
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897     049C                     _USART_TransmitString:	
  2898                           ;psect for function _USART_TransmitString
  2899                           
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in _USART_TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2903                           ;USART_TransmitString@out stored from wreg
  2904     049C  00F3               	movwf	USART_TransmitString@out
  2905     049D                     l1439:
  2906                           
  2907                           ;tv_uart.c: 24:     for (unsigned char i = 0; i < 17; i++) {
  2908     049D  01F4               	clrf	USART_TransmitString@i
  2909     049E                     l1445:
  2910                           
  2911                           ;tv_uart.c: 25:         USART_TransmitChar(out[i]);
  2912     049E  0874               	movf	USART_TransmitString@i,w
  2913     049F  0773               	addwf	USART_TransmitString@out,w
  2914     04A0  00F2               	movwf	??_USART_TransmitString
  2915     04A1  0872               	movf	??_USART_TransmitString,w
  2916     04A2  0086               	movwf	6
  2917     04A3  0187               	clrf	7
  2918     04A4  0801               	movf	1,w
  2919     04A5  3184  24D5  3184   	fcall	_USART_TransmitChar
  2920     04A8                     l1447:
  2921                           
  2922                           ;tv_uart.c: 26:     }
  2923     04A8  3001               	movlw	1
  2924     04A9  00F2               	movwf	??_USART_TransmitString
  2925     04AA  0872               	movf	??_USART_TransmitString,w
  2926     04AB  07F4               	addwf	USART_TransmitString@i,f
  2927     04AC                     l1449:
  2928     04AC  3011               	movlw	17
  2929     04AD  0274               	subwf	USART_TransmitString@i,w
  2930     04AE  1C03               	skipc
  2931     04AF  2CB1               	goto	u811
  2932     04B0  2CB2               	goto	u810
  2933     04B1                     u811:
  2934     04B1  2C9E               	goto	l1445
  2935     04B2                     u810:
  2936     04B2                     l244:
  2937     04B2  0008               	return
  2938     04B3                     __end_of_USART_TransmitString:
  2939                           
  2940                           	psect	text8
  2941     04D5                     __ptext8:	
  2942 ;; *************** function _USART_TransmitChar *****************
  2943 ;; Defined at:
  2944 ;;		line 18 in file "tv_uart.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  out             1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  out             1    1[COMMON] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 2
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_USART_TransmitString
  2969 ;;		_putch
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973     04D5                     _USART_TransmitChar:	
  2974                           ;psect for function _USART_TransmitChar
  2975                           
  2976                           
  2977                           ;incstack = 0
  2978                           ; Regs used in _USART_TransmitChar: [wreg]
  2979                           ;USART_TransmitChar@out stored from wreg
  2980     04D5  00F1               	movwf	USART_TransmitChar@out
  2981     04D6                     l1329:
  2982     04D6                     l236:	
  2983                           ;tv_uart.c: 19:     while (TXIF == 0);
  2984                           
  2985     04D6  0020               	movlb	0	; select bank0
  2986     04D7  1E11               	btfss	17,4	;volatile
  2987     04D8  2CDA               	goto	u681
  2988     04D9  2CDB               	goto	u680
  2989     04DA                     u681:
  2990     04DA  2CD6               	goto	l236
  2991     04DB                     u680:
  2992     04DB                     l1331:
  2993                           
  2994                           ;tv_uart.c: 20:     TXREG = out;
  2995     04DB  0871               	movf	USART_TransmitChar@out,w
  2996     04DC  0023               	movlb	3	; select bank3
  2997     04DD  009A               	movwf	26	;volatile
  2998     04DE                     l239:
  2999     04DE  0008               	return
  3000     04DF                     __end_of_USART_TransmitChar:
  3001                           
  3002                           	psect	text9
  3003     04B3                     __ptext9:	
  3004 ;; *************** function _USART_Init *****************
  3005 ;; Defined at:
  3006 ;;		line 5 in file "tv_uart.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 2
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034     04B3                     _USART_Init:	
  3035                           ;psect for function _USART_Init
  3036                           
  3037     04B3                     l1419:	
  3038                           ;incstack = 0
  3039                           ; Regs used in _USART_Init: [wreg]
  3040                           
  3041                           
  3042                           ;tv_uart.c: 6:     TRISC4 = 0;
  3043     04B3  0021               	movlb	1	; select bank1
  3044     04B4  120E               	bcf	14,4	;volatile
  3045                           
  3046                           ;tv_uart.c: 7:     TRISC5 = 1;
  3047     04B5  168E               	bsf	14,5	;volatile
  3048                           
  3049                           ;tv_uart.c: 8:     SPBRG = 34;
  3050     04B6  3000               	movlw	0
  3051     04B7  0023               	movlb	3	; select bank3
  3052     04B8  009C               	movwf	28	;volatile
  3053     04B9  3022               	movlw	34
  3054     04BA  009B               	movwf	27	;volatile
  3055     04BB                     l1421:
  3056                           
  3057                           ;tv_uart.c: 9:     TXSTA = 0x20;
  3058     04BB  3020               	movlw	32
  3059     04BC  009E               	movwf	30	;volatile
  3060                           
  3061                           ;tv_uart.c: 10:     RCSTA = 0x90;
  3062     04BD  3090               	movlw	144
  3063     04BE  009D               	movwf	29	;volatile
  3064     04BF                     l1423:
  3065                           
  3066                           ;tv_uart.c: 11:     BRG16 = 1;
  3067     04BF  159F               	bsf	31,3	;volatile
  3068     04C0                     l1425:
  3069                           
  3070                           ;tv_uart.c: 12:     BRGH = 1;
  3071     04C0  151E               	bsf	30,2	;volatile
  3072     04C1                     l1427:
  3073                           
  3074                           ;tv_uart.c: 13:     INTCONbits.GIE = 1;
  3075     04C1  178B               	bsf	11,7	;volatile
  3076     04C2                     l1429:
  3077                           
  3078                           ;tv_uart.c: 14:     INTCONbits.PEIE = 1;
  3079     04C2  170B               	bsf	11,6	;volatile
  3080     04C3                     l1431:
  3081                           
  3082                           ;tv_uart.c: 15:     PIE1bits.RCIE = 1;
  3083     04C3  0021               	movlb	1	; select bank1
  3084     04C4  1691               	bsf	17,5	;volatile
  3085     04C5                     l233:
  3086     04C5  0008               	return
  3087     04C6                     __end_of_USART_Init:
  3088                           
  3089                           	psect	text10
  3090     04C6                     __ptext10:	
  3091 ;; *************** function _Cmd_Aht10 *****************
  3092 ;; Defined at:
  3093 ;;		line 4 in file "tv_aht10.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 3
  3114 ;; This function calls:
  3115 ;;		_i2c_start
  3116 ;;		_i2c_stop
  3117 ;;		_i2c_write
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123     04C6                     _Cmd_Aht10:	
  3124                           ;psect for function _Cmd_Aht10
  3125                           
  3126     04C6                     l1433:	
  3127                           ;incstack = 0
  3128                           ; Regs used in _Cmd_Aht10: [wreg+status,2+status,0+pclath+cstack]
  3129                           
  3130                           
  3131                           ;tv_aht10.c: 5:     i2c_start();
  3132     04C6  3184  24E8  3184   	fcall	_i2c_start
  3133     04C9                     l1435:
  3134                           
  3135                           ;tv_aht10.c: 6:     i2c_write(0x70);
  3136     04C9  3070               	movlw	112
  3137     04CA  3184  2475  3184   	fcall	_i2c_write
  3138     04CD                     l1437:
  3139                           
  3140                           ;tv_aht10.c: 7:     i2c_write(0xac);
  3141     04CD  30AC               	movlw	172
  3142     04CE  3184  2475  3184   	fcall	_i2c_write
  3143                           
  3144                           ;tv_aht10.c: 10:     i2c_stop();
  3145     04D1  3184  24DF  3184   	fcall	_i2c_stop
  3146     04D4                     l113:
  3147     04D4  0008               	return
  3148     04D5                     __end_of_Cmd_Aht10:
  3149                           
  3150                           	psect	text11
  3151     0475                     __ptext11:	
  3152 ;; *************** function _i2c_write *****************
  3153 ;; Defined at:
  3154 ;;		line 23 in file "tv_i2c.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  DATA            1    wreg     unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  DATA            1    3[COMMON] unsigned char 
  3159 ;;  i               1    4[COMMON] unsigned char 
  3160 ;;  j               1    0        unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 2
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_read_temp
  3181 ;;		_Cmd_Aht10
  3182 ;;		_READ_T_H_AHT10
  3183 ;;		_SEND_TO_LCD_I2C
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187     0475                     _i2c_write:	
  3188                           ;psect for function _i2c_write
  3189                           
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  3193                           ;i2c_write@DATA stored from wreg
  3194     0475  00F3               	movwf	i2c_write@DATA
  3195     0476                     l1335:
  3196                           
  3197                           ;tv_i2c.c: 23: void i2c_write(unsigned char DATA);tv_i2c.c: 24: {;tv_i2c.c: 25:     unsi
      +                          gned char i,j;;tv_i2c.c: 26:     TRISC2=0;
  3198     0476  0021               	movlb	1	; select bank1
  3199     0477  110E               	bcf	14,2	;volatile
  3200                           
  3201                           ;tv_i2c.c: 27:     TRISC1=0;
  3202     0478  108E               	bcf	14,1	;volatile
  3203     0479                     l1337:
  3204                           
  3205                           ;tv_i2c.c: 28:     for(i=0;i<=8;i++)
  3206     0479  01F4               	clrf	i2c_write@i
  3207     047A                     l1343:
  3208                           
  3209                           ;tv_i2c.c: 29:     {;tv_i2c.c: 30:         if((DATA<<i) & 0x80) LATC2=1;
  3210     047A  0873               	movf	i2c_write@DATA,w
  3211     047B  00F1               	movwf	??_i2c_write
  3212     047C  01F2               	clrf	??_i2c_write+1
  3213     047D  0A74               	incf	i2c_write@i,w
  3214     047E  2C81               	goto	u694
  3215     047F                     u695:
  3216     047F  35F1               	lslf	??_i2c_write,f
  3217     0480  0DF2               	rlf	??_i2c_write+1,f
  3218     0481                     u694:
  3219     0481  0B89               	decfsz	9,f
  3220     0482  2C7F               	goto	u695
  3221     0483  1FF1               	btfss	??_i2c_write,7
  3222     0484  2C86               	goto	u701
  3223     0485  2C87               	goto	u700
  3224     0486                     u701:
  3225     0486  2C8A               	goto	l144
  3226     0487                     u700:
  3227     0487                     l1345:
  3228     0487  0022               	movlb	2	; select bank2
  3229     0488  150E               	bsf	14,2	;volatile
  3230     0489  2C8C               	goto	l145
  3231     048A                     l144:	
  3232                           ;tv_i2c.c: 31:         else LATC2=0;
  3233                           
  3234     048A  0022               	movlb	2	; select bank2
  3235     048B  110E               	bcf	14,2	;volatile
  3236     048C                     l145:
  3237                           
  3238                           ;tv_i2c.c: 32:         LATC1=1;
  3239     048C  148E               	bsf	14,1	;volatile
  3240                           
  3241                           ;tv_i2c.c: 34:         _delay((unsigned long)((1)*(16000000/4000000.0)));
  3242     048D  3200               	nop2	;2 cycle nop
  3243     048E  3200               	nop2	;2 cycle nop
  3244                           
  3245                           ;tv_i2c.c: 35:         LATC1=0;
  3246     048F  0022               	movlb	2	; select bank2
  3247     0490  108E               	bcf	14,1	;volatile
  3248     0491                     l1347:
  3249                           
  3250                           ;tv_i2c.c: 36:     }
  3251     0491  3001               	movlw	1
  3252     0492  00F1               	movwf	??_i2c_write
  3253     0493  0871               	movf	??_i2c_write,w
  3254     0494  07F4               	addwf	i2c_write@i,f
  3255     0495                     l1349:
  3256     0495  3009               	movlw	9
  3257     0496  0274               	subwf	i2c_write@i,w
  3258     0497  1C03               	skipc
  3259     0498  2C9A               	goto	u711
  3260     0499  2C9B               	goto	u710
  3261     049A                     u711:
  3262     049A  2C7A               	goto	l1343
  3263     049B                     u710:
  3264     049B                     l146:
  3265     049B  0008               	return
  3266     049C                     __end_of_i2c_write:
  3267                           
  3268                           	psect	text12
  3269     04DF                     __ptext12:	
  3270 ;; *************** function _i2c_stop *****************
  3271 ;; Defined at:
  3272 ;;		line 13 in file "tv_i2c.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		None
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 2
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_read_temp
  3297 ;;		_Cmd_Aht10
  3298 ;;		_READ_T_H_AHT10
  3299 ;;		_SEND_TO_LCD_I2C
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303     04DF                     _i2c_stop:	
  3304                           ;psect for function _i2c_stop
  3305                           
  3306     04DF                     l1377:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _i2c_stop: []
  3309                           
  3310                           
  3311                           ;tv_i2c.c: 15:     TRISC2 = 0;
  3312     04DF  0021               	movlb	1	; select bank1
  3313     04E0  110E               	bcf	14,2	;volatile
  3314                           
  3315                           ;tv_i2c.c: 16:     TRISC1 = 0;
  3316     04E1  108E               	bcf	14,1	;volatile
  3317                           
  3318                           ;tv_i2c.c: 17:     LATC2 = 0;
  3319     04E2  0022               	movlb	2	; select bank2
  3320     04E3  110E               	bcf	14,2	;volatile
  3321                           
  3322                           ;tv_i2c.c: 18:     LATC1 = 0;
  3323     04E4  108E               	bcf	14,1	;volatile
  3324                           
  3325                           ;tv_i2c.c: 19:     LATC1 = 1;
  3326     04E5  148E               	bsf	14,1	;volatile
  3327                           
  3328                           ;tv_i2c.c: 20:     LATC2 = 1;
  3329     04E6  150E               	bsf	14,2	;volatile
  3330     04E7                     l139:
  3331     04E7  0008               	return
  3332     04E8                     __end_of_i2c_stop:
  3333                           
  3334                           	psect	text13
  3335     04E8                     __ptext13:	
  3336 ;; *************** function _i2c_start *****************
  3337 ;; Defined at:
  3338 ;;		line 3 in file "tv_i2c.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		None
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 2
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_read_temp
  3363 ;;		_Cmd_Aht10
  3364 ;;		_READ_T_H_AHT10
  3365 ;;		_SEND_TO_LCD_I2C
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     04E8                     _i2c_start:	
  3370                           ;psect for function _i2c_start
  3371                           
  3372     04E8                     l1333:	
  3373                           ;incstack = 0
  3374                           ; Regs used in _i2c_start: []
  3375                           
  3376                           
  3377                           ;tv_i2c.c: 5:     TRISC2 = 0;
  3378     04E8  0021               	movlb	1	; select bank1
  3379     04E9  110E               	bcf	14,2	;volatile
  3380                           
  3381                           ;tv_i2c.c: 6:     TRISC1 = 0;
  3382     04EA  108E               	bcf	14,1	;volatile
  3383                           
  3384                           ;tv_i2c.c: 7:     LATC2 = 1;
  3385     04EB  0022               	movlb	2	; select bank2
  3386     04EC  150E               	bsf	14,2	;volatile
  3387                           
  3388                           ;tv_i2c.c: 8:     LATC1 = 1;
  3389     04ED  148E               	bsf	14,1	;volatile
  3390                           
  3391                           ;tv_i2c.c: 9:     LATC2 = 0;
  3392     04EE  110E               	bcf	14,2	;volatile
  3393                           
  3394                           ;tv_i2c.c: 10:     LATC1 = 0;
  3395     04EF  108E               	bcf	14,1	;volatile
  3396     04F0                     l136:
  3397     04F0  0008               	return
  3398     04F1                     __end_of_i2c_start:
  3399                           
  3400                           	psect	intentry
  3401     0004                     __pintentry:	
  3402 ;; *************** function _ngat_uart *****************
  3403 ;; Defined at:
  3404 ;;		line 107 in file "main.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 1
  3425 ;; This function calls:
  3426 ;;		_USART_ReceiveChar
  3427 ;; This function is called by:
  3428 ;;		Interrupt level 1
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432     0004                     _ngat_uart:
  3433                           
  3434                           ;incstack = 0
  3435     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3436                           
  3437                           ; Regs used in _ngat_uart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3438     0005  3180               	pagesel	$
  3439     0006                     i1l1651:
  3440                           
  3441                           ;main.c: 108:     byte_rx = USART_ReceiveChar();
  3442     0006  3184  24F1  3180   	fcall	_USART_ReceiveChar
  3443     0009  0020               	movlb	0	; select bank0
  3444     000A  00AE               	movwf	_byte_rx	;volatile
  3445     000B                     i1l1653:
  3446                           
  3447                           ;main.c: 109:     if (byte_rx == 'S') {
  3448     000B  3053               	movlw	83
  3449     000C  062E               	xorwf	_byte_rx,w	;volatile
  3450     000D  1D03               	btfss	3,2
  3451     000E  2810               	goto	u114_21
  3452     000F  2811               	goto	u114_20
  3453     0010                     u114_21:
  3454     0010  2814               	goto	i1l1659
  3455     0011                     u114_20:
  3456     0011                     i1l1655:
  3457                           
  3458                           ;main.c: 110:         ena_rx = 1;
  3459     0011  14FC               	bsf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3460     0012                     i1l1657:
  3461                           
  3462                           ;main.c: 111:         rx_index = 0;
  3463     0012  01AD               	clrf	_rx_index	;volatile
  3464                           
  3465                           ;main.c: 112:     } else if (byte_rx != 'P' && ena_rx == 1) {
  3466     0013  2843               	goto	i1l100
  3467     0014                     i1l1659:
  3468     0014  3050               	movlw	80
  3469     0015  062E               	xorwf	_byte_rx,w	;volatile
  3470     0016  1903               	btfsc	3,2
  3471     0017  2819               	goto	u115_21
  3472     0018  281A               	goto	u115_20
  3473     0019                     u115_21:
  3474     0019  2830               	goto	i1l1671
  3475     001A                     u115_20:
  3476     001A                     i1l1661:
  3477     001A  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3478     001B  281D               	goto	u116_21
  3479     001C  281E               	goto	u116_20
  3480     001D                     u116_21:
  3481     001D  2830               	goto	i1l1671
  3482     001E                     u116_20:
  3483     001E                     i1l1663:
  3484                           
  3485                           ;main.c: 113:         bf_rx[rx_index] = byte_rx;
  3486     001E  082D               	movf	_rx_index,w
  3487     001F  3E28               	addlw	(low (_bf_rx| 0))& (0+255)
  3488     0020  0086               	movwf	6
  3489     0021  0187               	clrf	7
  3490     0022  082E               	movf	_byte_rx,w	;volatile
  3491     0023  0081               	movwf	1
  3492     0024                     i1l1665:
  3493                           
  3494                           ;main.c: 114:         rx_index++;
  3495     0024  3001               	movlw	1
  3496     0025  00F0               	movwf	??_ngat_uart
  3497     0026  0870               	movf	??_ngat_uart,w
  3498     0027  07AD               	addwf	_rx_index,f	;volatile
  3499     0028                     i1l1667:
  3500                           
  3501                           ;main.c: 115:         if (rx_index > 1) ena_rx = 0;
  3502     0028  3002               	movlw	2
  3503     0029  022D               	subwf	_rx_index,w	;volatile
  3504     002A  1C03               	skipc
  3505     002B  282D               	goto	u117_21
  3506     002C  282E               	goto	u117_20
  3507     002D                     u117_21:
  3508     002D  2843               	goto	i1l100
  3509     002E                     u117_20:
  3510     002E                     i1l1669:
  3511     002E  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3512     002F  2843               	goto	i1l100
  3513     0030                     i1l1671:
  3514     0030  3050               	movlw	80
  3515     0031  062E               	xorwf	_byte_rx,w	;volatile
  3516     0032  1D03               	btfss	3,2
  3517     0033  2835               	goto	u118_21
  3518     0034  2836               	goto	u118_20
  3519     0035                     u118_21:
  3520     0035  2843               	goto	i1l100
  3521     0036                     u118_20:
  3522     0036                     i1l1673:
  3523     0036  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3524     0037  2839               	goto	u119_21
  3525     0038  283A               	goto	u119_20
  3526     0039                     u119_21:
  3527     0039  2843               	goto	i1l100
  3528     003A                     u119_20:
  3529     003A                     i1l1675:
  3530                           
  3531                           ;main.c: 117:         if (bf_rx[0] == '1') {
  3532     003A  3031               	movlw	49
  3533     003B  0628               	xorwf	_bf_rx,w
  3534     003C  1D03               	btfss	3,2
  3535     003D  283F               	goto	u120_21
  3536     003E  2840               	goto	u120_20
  3537     003F                     u120_21:
  3538     003F  2843               	goto	i1l97
  3539     0040                     u120_20:
  3540     0040                     i1l1677:
  3541                           
  3542                           ;main.c: 118:             ena_send = 1;
  3543     0040  147C               	bsf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  3544                           
  3545                           ;main.c: 119:             ena_rx = 0;
  3546     0041  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3547     0042  2843               	goto	i1l100
  3548     0043                     i1l97:
  3549     0043                     i1l100:
  3550     0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3551     0044  0009               	retfie
  3552     0045                     __end_of_ngat_uart:
  3553                           
  3554                           	psect	text15
  3555     04F1                     __ptext15:	
  3556 ;; *************** function _USART_ReceiveChar *****************
  3557 ;; Defined at:
  3558 ;;		line 29 in file "tv_uart.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      unsigned char 
  3565 ;; Registers used:
  3566 ;;		wreg
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_ngat_uart
  3582 ;;		_USART_ReceiveString
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586     04F1                     _USART_ReceiveChar:	
  3587                           ;psect for function _USART_ReceiveChar
  3588                           
  3589     04F1                     i1l1451:	
  3590                           ;incstack = 0
  3591                           ; Regs used in _USART_ReceiveChar: [wreg]
  3592                           
  3593     04F1                     i1l247:	
  3594                           ;tv_uart.c: 34:     };
  3595                           
  3596                           
  3597                           ;tv_uart.c: 33:     while (PIR1bits.RCIF == 0) {
  3598     04F1  0020               	movlb	0	; select bank0
  3599     04F2  1E91               	btfss	17,5	;volatile
  3600     04F3  2CF5               	goto	u82_21
  3601     04F4  2CF6               	goto	u82_20
  3602     04F5                     u82_21:
  3603     04F5  2CF1               	goto	i1l247
  3604     04F6                     u82_20:
  3605     04F6                     i1l1453:
  3606                           
  3607                           ;tv_uart.c: 36:     return (RCREG);
  3608     04F6  0023               	movlb	3	; select bank3
  3609     04F7  0819               	movf	25,w	;volatile
  3610     04F8                     i1l250:
  3611     04F8  0008               	return
  3612     04F9                     __end_of_USART_ReceiveChar:
  3613     007E                     btemp	set	126	;btemp
  3614     007E                     int$flags	set	126
  3615     007E                     wtemp0	set	126
  3616                           
  3617                           	psect	config
  3618                           
  3619                           ;Config register CONFIG1 @ 0x8007
  3620                           ;	Oscillator Selection
  3621                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3622                           ;	Watchdog Timer Enable
  3623                           ;	WDTE = OFF, WDT disabled
  3624                           ;	Power-up Timer Enable
  3625                           ;	PWRTE = OFF, PWRT disabled
  3626                           ;	MCLR Pin Function Select
  3627                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3628                           ;	Flash Program Memory Code Protection
  3629                           ;	CP = OFF, Program memory code protection is disabled
  3630                           ;	Data Memory Code Protection
  3631                           ;	CPD = OFF, Data memory code protection is disabled
  3632                           ;	Brown-out Reset Enable
  3633                           ;	BOREN = OFF, Brown-out Reset disabled
  3634                           ;	Clock Out Enable
  3635                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3636                           ;	Internal/External Switchover
  3637                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3638                           ;	Fail-Safe Clock Monitor Enable
  3639                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3640     8007                     	org	32775
  3641     8007  09A4               	dw	2468
  3642                           
  3643                           ;Config register CONFIG2 @ 0x8008
  3644                           ;	Flash Memory Self-Write Protection
  3645                           ;	WRT = OFF, Write protection off
  3646                           ;	PLL Enable
  3647                           ;	PLLEN = OFF, 4x PLL disabled
  3648                           ;	Stack Overflow/Underflow Reset Enable
  3649                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  3650                           ;	Brown-out Reset Voltage Selection
  3651                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3652                           ;	Low-Voltage Programming Enable
  3653                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3654     8008                     	org	32776
  3655     8008  1CFF               	dw	7423

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         36
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     26      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USART_TransmitString@out	PTR unsigned char  size(1) Largest target is 20
		 -> bf_tx(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->___llmod
    _read_temp->_i2c_read
    _read_temp->_i2c_write
    ___lwmod->___lwdiv
    ___llmod->___lldiv
    _USART_TransmitString->_USART_TransmitChar
    _Cmd_Aht10->_i2c_write

Critical Paths under _ngat_uart in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_temp
    ___llmod->___lldiv

Critical Paths under _ngat_uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ngat_uart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ngat_uart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ngat_uart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ngat_uart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ngat_uart in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ngat_uart in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ngat_uart in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ngat_uart in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ngat_uart in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ngat_uart in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ngat_uart in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ngat_uart in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5338
                                             24 BANK0      2     2      0
                          _Cmd_Aht10
                         _USART_Init
               _USART_TransmitString
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                          _read_temp
 ---------------------------------------------------------------------------------
 (1) _read_temp                                           28    24      4     364
                                              5 COMMON     4     0      4
                                              0 BANK0     24    24      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             4     4      0     136
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1672
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1074
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8    1071
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     922
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USART_TransmitString                                 3     3      0     145
                                              2 COMMON     3     3      0
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Cmd_Aht10                                            0     0      0      90
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            5     5      0      90
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ngat_uart                                            1     1      0       0
                                              0 COMMON     1     1      0
                  _USART_ReceiveChar
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cmd_Aht10
     _i2c_start
     _i2c_stop
     _i2c_write
   _USART_Init
   _USART_TransmitString
     _USART_TransmitChar
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _read_temp
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write

 _ngat_uart (ROOT)
   _USART_ReceiveChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 19 17:25:16 2024

                          l72 0320                            l73 0329                           l113 04D4  
                         l150 0465                           l136 04F0                           l144 048A  
                         l145 048C                           l233 04C5                           l153 046F  
                         l146 049B                           l154 0471                           l139 04E7  
                         l155 0474                           l236 04D6                           l244 04B2  
                         l149 0449                           l239 04DE                           l701 0440  
                         l447 0384                           l641 03CF                           l691 040B  
                         u700 0487                           u701 0486                           u710 049B  
                         u711 049A                           u720 0450                           u800 0317  
                         u721 044F                           u801 0316                           u810 04B2  
                         u730 0465                           u811 04B1                           u731 0464  
                         u900 037C                           u740 046C                           u901 037B  
                         u741 046B                           u910 038E                           u911 038D  
                         u680 04DB                           u840 033B                           u681 04DA  
                         u841 033A                           u930 03A0                           u770 02CA  
                         u931 039F                           u860 034D                           u940 03B2  
                         u780 02DD                           u861 034C                           u941 03B1  
                         u925 0392                           u694 0481                           u790 0300  
                         u695 047F                           u855 033F                           u791 02FF  
                         u775 02C6                           u880 0366                           u960 03C7  
                         u881 0365                           u961 03C6                           u945 03AE  
                         u785 02D9                           u970 03D8                           u875 034E  
                         u955 03BB                           u971 03D7                           u885 0362  
                         u990 03E8                           u895 0370                           u991 03E7  
                         u985 03DC                           _mp2 005E                           _mq2 002B  
                         wreg 0009                          l1401 0297                          l1331 04DB  
                        l1411 0300                          l1403 02A8                          l1333 04E8  
                        l1421 04BB                          l1501 03BA                          l1413 0309  
                        l1405 02B9                          l1343 047A                          l1335 0476  
                        l1431 04C3                          l1423 04BF                          l1503 03C1  
                        l1511 03D2                          l1351 0442                          l1415 0317  
                        l1407 02BC                          l1345 0487                          l1337 0479  
                        l1433 04C6                          l1425 04C0                          l1329 04D6  
                        l1505 03C7                          l1521 03E8                          l1513 03D8  
                        l1361 0453                          l1353 0448                          l1409 02F3  
                        l1347 0491                          l1435 04C9                          l1427 04C1  
                        l1419 04B3                          l1523 03F7                          l1515 03DB  
                        l1531 0407                          l1371 046C                          l1363 0455  
                        l1349 0495                          l1437 04CD                          l1429 04C2  
                        l1445 049E                          l1525 03FB                          l1517 03E0  
                        l1509 03D0                          l1373 0473                          l1365 0457  
                        l1447 04A8                          l1439 049D                          l1471 0349  
                        l1527 03FC                          l1519 03E4                          l1367 045B  
                        l1359 0450                          l1391 0275                          l1377 04DF  
                        l1449 04AC                          l1481 036F                          l1473 034D  
                        l1465 032A                          l1529 0401                          l1369 0467  
                        l1393 0279                          l1801 0066                          l1483 0376  
                        l1475 0354                          l1467 033B                          l1491 038E  
                        l1395 027D                          l1811 0072                          l1803 0068  
                        l1477 0366                          l1469 033E                          l1485 037C  
                        l1493 0391                          l1397 0281                          l1389 0272  
                        l1821 007E                          l1813 0074                          l1805 006A  
                        l1479 036E                          l1495 039C                          l1399 0285  
                        l1831 00E1                          l1823 0099                          l1815 0076  
                        l1807 006C                          l1497 03A0                          l1489 0385  
                        l1841 017B                          l1833 00EE                          l1825 00B4  
                        l1817 0078                          l1809 006F                          l1499 03B2  
                        l1771 041B                          l1851 01EF                          l1843 01A6  
                        l1835 00FA                          l1827 00CF                          l1819 007A  
                        l1781 0436                          l1773 041F                          l1765 040C  
                        l1861 023C                          l1853 01F1                          l1845 01D1  
                        l1837 0125                          l1829 00DE                          l1775 0423  
                        l1767 0413                          l1783 043C                          l1863 0257  
                        l1855 01FE                          l1847 01E8                          l1839 0150  
                        l1791 005C                          l1777 042D                          l1769 0416  
                        l1865 0266                          l1857 0206                          l1849 01EB  
                        l1793 005E                          l1779 0431                          l1867 026A  
                        l1859 0221                          l1795 0060                          l1787 0058  
                        l1869 026B                          l1797 0062                          l1789 005B  
                        l1799 0064                          _BRGH 0CF2                          u1010 03F7  
                        u1011 03F6                          u1005 03E9                          u1030 0407  
                        u1031 0406                          u1015 03F3                          u1025 03FD  
                        u1400 043C                          u1401 043B                          u1410 026A  
                        u1411 0269                          u1350 0413                          u1351 0412  
                        u1370 0423                          u1371 0422                          u1427 00E7  
                        u1380 042D                          u1381 042C                          u1365 0417  
                        u1437 01EC                          u1447 01F7                          u1385 0429  
                        u1457 0458                          u1395 0432                          i1l97 0043  
                        _TXIF 008C                          _main 0058                          _temp 0020  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                          start 0045                    i2c_write@i 0074  
                 i2c_read@ACK 0072                         ?_main 0070                         _ADRES 009B  
                       _BRG16 0CFB               __end_of___lldiv 0385               __end_of___llmod 03D0  
                       _LATC1 0871                         _LATC2 0872               __end_of___lwdiv 040C  
                       i1l100 0043                         i1l250 04F8                         i1l247 04F1  
             __end_of___lwmod 0441                         _RCREG 0199                         _RCSTA 019D  
                       _SPBRG 019B                         u82_20 04F6                         u82_21 04F5  
                       _TXREG 019A                         _TXSTA 019E                         _bf_rx 0028  
                       _bf_tx 0030          _USART_TransmitString 049C                __pbitbssCOMMON 03E0  
                       status 0003                         wtemp0 007E                   ?_USART_Init 0070  
             __initialization 0047                  __end_of_main 0272              __end_of_i2c_read 0475  
            __end_of_i2c_stop 04E8                        ??_main 005C                  i2c_read@DATA 0074  
                      _ADCON0 009D                        _ADCON1 009E         ?_USART_TransmitString 0070  
            ___llmod@dividend 004D                        u120_20 0040                        u120_21 003F  
                      i1l1451 04F1                        i1l1453 04F6                        i1l1651 0006  
                      i1l1661 001A                        i1l1653 000B                        i1l1663 001E  
                      i1l1671 0030                        i1l1655 0011                        u114_20 0011  
                      i1l1673 0036                        i1l1665 0024                        i1l1657 0012  
                      u114_21 0010                        i1l1675 003A                        i1l1667 0028  
                      i1l1659 0014                        i1l1677 0040                        i1l1669 002E  
                      u115_20 001A                        u115_21 0019                        u116_20 001E  
                      u116_21 001D                        u117_20 002E                        u117_21 002D  
                      u118_20 0036                        u118_21 0035                        u119_20 003A  
                      u119_21 0039                        _OSCCON 0099                        _TRISC1 0471  
                      _TRISC2 0472                        _TRISC4 0474                        _TRISC5 0475  
                   ??___lldiv 0079                     ??___llmod 007A                        _ena_rx 03E1  
                   ??___lwdiv 0075                     ??___lwmod 0079    __end_of_USART_TransmitChar 04DF  
           __end_of_Cmd_Aht10 04D5       __end_of__initialization 0054                __pcstackCOMMON 0070  
                __pidataBANK0 04FF             __end_of_i2c_start 04F1             __end_of_i2c_write 049C  
     USART_TransmitString@out 0073        ??_USART_TransmitString 0072                    __pbssBANK0 0020  
                   ?_i2c_read 0070                     ?_i2c_stop 0070                    __pmaintext 0058  
                  __pintentry 0004                    ??_i2c_read 0071                    ??_i2c_stop 0071  
                ??_USART_Init 0071                       ___lldiv 032A                       ___llmod 0385  
                     ___lwdiv 03D0                       ___lwmod 040C                       __ptext1 0272  
                     __ptext2 0441                       __ptext3 040C                       __ptext4 03D0  
                     __ptext5 0385                       __ptext6 032A                       __ptext7 049C  
                     __ptext8 04D5                       __ptext9 04B3             __end_of_ngat_uart 0045  
                     _byte_rx 002E             __end_of_read_temp 032A            __end_of_USART_Init 04C6  
                     clrloop0 04FA          end_of_initialization 0054               ___lldiv@divisor 0071  
             ___lldiv@counter 0048                     _PORTCbits 000E                 i2c_write@DATA 0073  
                read_temp@dt1 004C                  read_temp@dt2 0050                  read_temp@dt3 0054  
                   _TRISAbits 008C                     _TRISCbits 008E         USART_TransmitChar@out 0071  
                   _Cmd_Aht10 04C6                     i2c_read@i 0073            _USART_TransmitChar 04D5  
         ?_USART_TransmitChar 0070           start_initialization 0047                     _i2c_start 04E8  
                   _i2c_write 0475          ??_USART_TransmitChar 0071         USART_TransmitString@i 0074  
                  ?_Cmd_Aht10 0070               ___llmod@divisor 0049               ___llmod@counter 007B  
           _USART_ReceiveChar 04F1            ?_USART_ReceiveChar 0070                   __pdataBANK0 0060  
         ??_USART_ReceiveChar 0070                     ___latbits 0002                 __pcstackBANK0 0044  
                  ?_i2c_start 0070                    ?_i2c_write 0070     __end_of_USART_ReceiveChar 04F9  
                   __pnvBANK0 005E              ___lwdiv@dividend 0073                      ?___lldiv 0071  
                    ?___llmod 0049                      ?___lwdiv 0071                      ?___lwmod 0044  
            ___lwdiv@quotient 0076                     _ngat_uart 0004                     _read_temp 0272  
                 ??_Cmd_Aht10 0075                      _LATAbits 010C                      _LATCbits 010E  
                   clear_ram0 04F9                      _PIE1bits 0091                      _PIR1bits 0011  
                  _ADCON0bits 009D                   ??_i2c_start 0071                   ??_i2c_write 0071  
                  ?_ngat_uart 0070                    ?_read_temp 0075                      _i2c_read 0441  
                    _i2c_stop 04DF                 _LCD_BACKLIGHT 0060                    _ANSELAbits 018C  
                  _ANSELCbits 018E               ___lwdiv@divisor 0071               ___lwdiv@counter 0078  
                    __ptext10 04C6                      __ptext11 0475                      __ptext12 04DF  
                    __ptext13 04E8                      __ptext15 04F1                      _ena_send 03E0  
                    _temp_glo 0024                      int$flags 007E                      _rx_index 002D  
                  _INTCONbits 000B                   ??_ngat_uart 0070                   ??_read_temp 0044  
                    intlevel1 0000              ___lwmod@dividend 0046              ___lldiv@dividend 0075  
__end_of_USART_TransmitString 04B3              ___lldiv@quotient 0044               ___lwmod@divisor 0044  
             ___lwmod@counter 007A                 read_temp@temp 0058                   _printf_mode 002F  
                  _USART_Init 04B3  
