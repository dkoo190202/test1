

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 19 23:54:20 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1825
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1825 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000E                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     010C                     	;# 
   111     010E                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     011A                     	;# 
   122     011B                     	;# 
   123     011D                     	;# 
   124     011E                     	;# 
   125     018C                     	;# 
   126     018E                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0193                     	;# 
   133     0194                     	;# 
   134     0195                     	;# 
   135     0196                     	;# 
   136     0199                     	;# 
   137     019A                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019C                     	;# 
   141     019D                     	;# 
   142     019E                     	;# 
   143     019F                     	;# 
   144     020C                     	;# 
   145     020E                     	;# 
   146     0211                     	;# 
   147     0211                     	;# 
   148     0212                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0213                     	;# 
   152     0214                     	;# 
   153     0214                     	;# 
   154     0215                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0216                     	;# 
   158     0216                     	;# 
   159     0217                     	;# 
   160     0217                     	;# 
   161     0291                     	;# 
   162     0291                     	;# 
   163     0292                     	;# 
   164     0293                     	;# 
   165     0294                     	;# 
   166     0295                     	;# 
   167     0295                     	;# 
   168     0296                     	;# 
   169     0298                     	;# 
   170     0298                     	;# 
   171     0299                     	;# 
   172     029A                     	;# 
   173     029B                     	;# 
   174     029C                     	;# 
   175     029D                     	;# 
   176     029E                     	;# 
   177     0311                     	;# 
   178     0311                     	;# 
   179     0312                     	;# 
   180     0313                     	;# 
   181     0318                     	;# 
   182     0318                     	;# 
   183     0319                     	;# 
   184     031A                     	;# 
   185     038C                     	;# 
   186     038E                     	;# 
   187     0391                     	;# 
   188     0392                     	;# 
   189     0393                     	;# 
   190     039A                     	;# 
   191     039C                     	;# 
   192     039D                     	;# 
   193     039E                     	;# 
   194     039F                     	;# 
   195     0415                     	;# 
   196     0416                     	;# 
   197     0417                     	;# 
   198     041C                     	;# 
   199     041D                     	;# 
   200     041E                     	;# 
   201     0FE4                     	;# 
   202     0FE5                     	;# 
   203     0FE6                     	;# 
   204     0FE7                     	;# 
   205     0FE8                     	;# 
   206     0FE9                     	;# 
   207     0FEA                     	;# 
   208     0FEB                     	;# 
   209     0FED                     	;# 
   210     0FEE                     	;# 
   211     0FEF                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000E                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0015                     	;# 
   230     0016                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001C                     	;# 
   238     001E                     	;# 
   239     001F                     	;# 
   240     008C                     	;# 
   241     008E                     	;# 
   242     0091                     	;# 
   243     0092                     	;# 
   244     0093                     	;# 
   245     0095                     	;# 
   246     0096                     	;# 
   247     0097                     	;# 
   248     0098                     	;# 
   249     0099                     	;# 
   250     009A                     	;# 
   251     009B                     	;# 
   252     009B                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     010C                     	;# 
   257     010E                     	;# 
   258     0111                     	;# 
   259     0112                     	;# 
   260     0113                     	;# 
   261     0114                     	;# 
   262     0115                     	;# 
   263     0116                     	;# 
   264     0117                     	;# 
   265     0118                     	;# 
   266     0119                     	;# 
   267     011A                     	;# 
   268     011B                     	;# 
   269     011D                     	;# 
   270     011E                     	;# 
   271     018C                     	;# 
   272     018E                     	;# 
   273     0191                     	;# 
   274     0191                     	;# 
   275     0192                     	;# 
   276     0193                     	;# 
   277     0193                     	;# 
   278     0193                     	;# 
   279     0194                     	;# 
   280     0195                     	;# 
   281     0196                     	;# 
   282     0199                     	;# 
   283     019A                     	;# 
   284     019B                     	;# 
   285     019B                     	;# 
   286     019C                     	;# 
   287     019D                     	;# 
   288     019E                     	;# 
   289     019F                     	;# 
   290     020C                     	;# 
   291     020E                     	;# 
   292     0211                     	;# 
   293     0211                     	;# 
   294     0212                     	;# 
   295     0212                     	;# 
   296     0213                     	;# 
   297     0213                     	;# 
   298     0214                     	;# 
   299     0214                     	;# 
   300     0215                     	;# 
   301     0215                     	;# 
   302     0215                     	;# 
   303     0216                     	;# 
   304     0216                     	;# 
   305     0217                     	;# 
   306     0217                     	;# 
   307     0291                     	;# 
   308     0291                     	;# 
   309     0292                     	;# 
   310     0293                     	;# 
   311     0294                     	;# 
   312     0295                     	;# 
   313     0295                     	;# 
   314     0296                     	;# 
   315     0298                     	;# 
   316     0298                     	;# 
   317     0299                     	;# 
   318     029A                     	;# 
   319     029B                     	;# 
   320     029C                     	;# 
   321     029D                     	;# 
   322     029E                     	;# 
   323     0311                     	;# 
   324     0311                     	;# 
   325     0312                     	;# 
   326     0313                     	;# 
   327     0318                     	;# 
   328     0318                     	;# 
   329     0319                     	;# 
   330     031A                     	;# 
   331     038C                     	;# 
   332     038E                     	;# 
   333     0391                     	;# 
   334     0392                     	;# 
   335     0393                     	;# 
   336     039A                     	;# 
   337     039C                     	;# 
   338     039D                     	;# 
   339     039E                     	;# 
   340     039F                     	;# 
   341     0415                     	;# 
   342     0416                     	;# 
   343     0417                     	;# 
   344     041C                     	;# 
   345     041D                     	;# 
   346     041E                     	;# 
   347     0FE4                     	;# 
   348     0FE5                     	;# 
   349     0FE6                     	;# 
   350     0FE7                     	;# 
   351     0FE8                     	;# 
   352     0FE9                     	;# 
   353     0FEA                     	;# 
   354     0FEB                     	;# 
   355     0FED                     	;# 
   356     0FEE                     	;# 
   357     0FEF                     	;# 
   358     0000                     	;# 
   359     0001                     	;# 
   360     0002                     	;# 
   361     0003                     	;# 
   362     0004                     	;# 
   363     0005                     	;# 
   364     0006                     	;# 
   365     0007                     	;# 
   366     0008                     	;# 
   367     0009                     	;# 
   368     000A                     	;# 
   369     000B                     	;# 
   370     000C                     	;# 
   371     000E                     	;# 
   372     0011                     	;# 
   373     0012                     	;# 
   374     0013                     	;# 
   375     0015                     	;# 
   376     0016                     	;# 
   377     0016                     	;# 
   378     0017                     	;# 
   379     0018                     	;# 
   380     0019                     	;# 
   381     001A                     	;# 
   382     001B                     	;# 
   383     001C                     	;# 
   384     001E                     	;# 
   385     001F                     	;# 
   386     008C                     	;# 
   387     008E                     	;# 
   388     0091                     	;# 
   389     0092                     	;# 
   390     0093                     	;# 
   391     0095                     	;# 
   392     0096                     	;# 
   393     0097                     	;# 
   394     0098                     	;# 
   395     0099                     	;# 
   396     009A                     	;# 
   397     009B                     	;# 
   398     009B                     	;# 
   399     009C                     	;# 
   400     009D                     	;# 
   401     009E                     	;# 
   402     010C                     	;# 
   403     010E                     	;# 
   404     0111                     	;# 
   405     0112                     	;# 
   406     0113                     	;# 
   407     0114                     	;# 
   408     0115                     	;# 
   409     0116                     	;# 
   410     0117                     	;# 
   411     0118                     	;# 
   412     0119                     	;# 
   413     011A                     	;# 
   414     011B                     	;# 
   415     011D                     	;# 
   416     011E                     	;# 
   417     018C                     	;# 
   418     018E                     	;# 
   419     0191                     	;# 
   420     0191                     	;# 
   421     0192                     	;# 
   422     0193                     	;# 
   423     0193                     	;# 
   424     0193                     	;# 
   425     0194                     	;# 
   426     0195                     	;# 
   427     0196                     	;# 
   428     0199                     	;# 
   429     019A                     	;# 
   430     019B                     	;# 
   431     019B                     	;# 
   432     019C                     	;# 
   433     019D                     	;# 
   434     019E                     	;# 
   435     019F                     	;# 
   436     020C                     	;# 
   437     020E                     	;# 
   438     0211                     	;# 
   439     0211                     	;# 
   440     0212                     	;# 
   441     0212                     	;# 
   442     0213                     	;# 
   443     0213                     	;# 
   444     0214                     	;# 
   445     0214                     	;# 
   446     0215                     	;# 
   447     0215                     	;# 
   448     0215                     	;# 
   449     0216                     	;# 
   450     0216                     	;# 
   451     0217                     	;# 
   452     0217                     	;# 
   453     0291                     	;# 
   454     0291                     	;# 
   455     0292                     	;# 
   456     0293                     	;# 
   457     0294                     	;# 
   458     0295                     	;# 
   459     0295                     	;# 
   460     0296                     	;# 
   461     0298                     	;# 
   462     0298                     	;# 
   463     0299                     	;# 
   464     029A                     	;# 
   465     029B                     	;# 
   466     029C                     	;# 
   467     029D                     	;# 
   468     029E                     	;# 
   469     0311                     	;# 
   470     0311                     	;# 
   471     0312                     	;# 
   472     0313                     	;# 
   473     0318                     	;# 
   474     0318                     	;# 
   475     0319                     	;# 
   476     031A                     	;# 
   477     038C                     	;# 
   478     038E                     	;# 
   479     0391                     	;# 
   480     0392                     	;# 
   481     0393                     	;# 
   482     039A                     	;# 
   483     039C                     	;# 
   484     039D                     	;# 
   485     039E                     	;# 
   486     039F                     	;# 
   487     0415                     	;# 
   488     0416                     	;# 
   489     0417                     	;# 
   490     041C                     	;# 
   491     041D                     	;# 
   492     041E                     	;# 
   493     0FE4                     	;# 
   494     0FE5                     	;# 
   495     0FE6                     	;# 
   496     0FE7                     	;# 
   497     0FE8                     	;# 
   498     0FE9                     	;# 
   499     0FEA                     	;# 
   500     0FEB                     	;# 
   501     0FED                     	;# 
   502     0FEE                     	;# 
   503     0FEF                     	;# 
   504     0000                     	;# 
   505     0001                     	;# 
   506     0002                     	;# 
   507     0003                     	;# 
   508     0004                     	;# 
   509     0005                     	;# 
   510     0006                     	;# 
   511     0007                     	;# 
   512     0008                     	;# 
   513     0009                     	;# 
   514     000A                     	;# 
   515     000B                     	;# 
   516     000C                     	;# 
   517     000E                     	;# 
   518     0011                     	;# 
   519     0012                     	;# 
   520     0013                     	;# 
   521     0015                     	;# 
   522     0016                     	;# 
   523     0016                     	;# 
   524     0017                     	;# 
   525     0018                     	;# 
   526     0019                     	;# 
   527     001A                     	;# 
   528     001B                     	;# 
   529     001C                     	;# 
   530     001E                     	;# 
   531     001F                     	;# 
   532     008C                     	;# 
   533     008E                     	;# 
   534     0091                     	;# 
   535     0092                     	;# 
   536     0093                     	;# 
   537     0095                     	;# 
   538     0096                     	;# 
   539     0097                     	;# 
   540     0098                     	;# 
   541     0099                     	;# 
   542     009A                     	;# 
   543     009B                     	;# 
   544     009B                     	;# 
   545     009C                     	;# 
   546     009D                     	;# 
   547     009E                     	;# 
   548     010C                     	;# 
   549     010E                     	;# 
   550     0111                     	;# 
   551     0112                     	;# 
   552     0113                     	;# 
   553     0114                     	;# 
   554     0115                     	;# 
   555     0116                     	;# 
   556     0117                     	;# 
   557     0118                     	;# 
   558     0119                     	;# 
   559     011A                     	;# 
   560     011B                     	;# 
   561     011D                     	;# 
   562     011E                     	;# 
   563     018C                     	;# 
   564     018E                     	;# 
   565     0191                     	;# 
   566     0191                     	;# 
   567     0192                     	;# 
   568     0193                     	;# 
   569     0193                     	;# 
   570     0193                     	;# 
   571     0194                     	;# 
   572     0195                     	;# 
   573     0196                     	;# 
   574     0199                     	;# 
   575     019A                     	;# 
   576     019B                     	;# 
   577     019B                     	;# 
   578     019C                     	;# 
   579     019D                     	;# 
   580     019E                     	;# 
   581     019F                     	;# 
   582     020C                     	;# 
   583     020E                     	;# 
   584     0211                     	;# 
   585     0211                     	;# 
   586     0212                     	;# 
   587     0212                     	;# 
   588     0213                     	;# 
   589     0213                     	;# 
   590     0214                     	;# 
   591     0214                     	;# 
   592     0215                     	;# 
   593     0215                     	;# 
   594     0215                     	;# 
   595     0216                     	;# 
   596     0216                     	;# 
   597     0217                     	;# 
   598     0217                     	;# 
   599     0291                     	;# 
   600     0291                     	;# 
   601     0292                     	;# 
   602     0293                     	;# 
   603     0294                     	;# 
   604     0295                     	;# 
   605     0295                     	;# 
   606     0296                     	;# 
   607     0298                     	;# 
   608     0298                     	;# 
   609     0299                     	;# 
   610     029A                     	;# 
   611     029B                     	;# 
   612     029C                     	;# 
   613     029D                     	;# 
   614     029E                     	;# 
   615     0311                     	;# 
   616     0311                     	;# 
   617     0312                     	;# 
   618     0313                     	;# 
   619     0318                     	;# 
   620     0318                     	;# 
   621     0319                     	;# 
   622     031A                     	;# 
   623     038C                     	;# 
   624     038E                     	;# 
   625     0391                     	;# 
   626     0392                     	;# 
   627     0393                     	;# 
   628     039A                     	;# 
   629     039C                     	;# 
   630     039D                     	;# 
   631     039E                     	;# 
   632     039F                     	;# 
   633     0415                     	;# 
   634     0416                     	;# 
   635     0417                     	;# 
   636     041C                     	;# 
   637     041D                     	;# 
   638     041E                     	;# 
   639     0FE4                     	;# 
   640     0FE5                     	;# 
   641     0FE6                     	;# 
   642     0FE7                     	;# 
   643     0FE8                     	;# 
   644     0FE9                     	;# 
   645     0FEA                     	;# 
   646     0FEB                     	;# 
   647     0FED                     	;# 
   648     0FEE                     	;# 
   649     0FEF                     	;# 
   650     0000                     	;# 
   651     0001                     	;# 
   652     0002                     	;# 
   653     0003                     	;# 
   654     0004                     	;# 
   655     0005                     	;# 
   656     0006                     	;# 
   657     0007                     	;# 
   658     0008                     	;# 
   659     0009                     	;# 
   660     000A                     	;# 
   661     000B                     	;# 
   662     000C                     	;# 
   663     000E                     	;# 
   664     0011                     	;# 
   665     0012                     	;# 
   666     0013                     	;# 
   667     0015                     	;# 
   668     0016                     	;# 
   669     0016                     	;# 
   670     0017                     	;# 
   671     0018                     	;# 
   672     0019                     	;# 
   673     001A                     	;# 
   674     001B                     	;# 
   675     001C                     	;# 
   676     001E                     	;# 
   677     001F                     	;# 
   678     008C                     	;# 
   679     008E                     	;# 
   680     0091                     	;# 
   681     0092                     	;# 
   682     0093                     	;# 
   683     0095                     	;# 
   684     0096                     	;# 
   685     0097                     	;# 
   686     0098                     	;# 
   687     0099                     	;# 
   688     009A                     	;# 
   689     009B                     	;# 
   690     009B                     	;# 
   691     009C                     	;# 
   692     009D                     	;# 
   693     009E                     	;# 
   694     010C                     	;# 
   695     010E                     	;# 
   696     0111                     	;# 
   697     0112                     	;# 
   698     0113                     	;# 
   699     0114                     	;# 
   700     0115                     	;# 
   701     0116                     	;# 
   702     0117                     	;# 
   703     0118                     	;# 
   704     0119                     	;# 
   705     011A                     	;# 
   706     011B                     	;# 
   707     011D                     	;# 
   708     011E                     	;# 
   709     018C                     	;# 
   710     018E                     	;# 
   711     0191                     	;# 
   712     0191                     	;# 
   713     0192                     	;# 
   714     0193                     	;# 
   715     0193                     	;# 
   716     0193                     	;# 
   717     0194                     	;# 
   718     0195                     	;# 
   719     0196                     	;# 
   720     0199                     	;# 
   721     019A                     	;# 
   722     019B                     	;# 
   723     019B                     	;# 
   724     019C                     	;# 
   725     019D                     	;# 
   726     019E                     	;# 
   727     019F                     	;# 
   728     020C                     	;# 
   729     020E                     	;# 
   730     0211                     	;# 
   731     0211                     	;# 
   732     0212                     	;# 
   733     0212                     	;# 
   734     0213                     	;# 
   735     0213                     	;# 
   736     0214                     	;# 
   737     0214                     	;# 
   738     0215                     	;# 
   739     0215                     	;# 
   740     0215                     	;# 
   741     0216                     	;# 
   742     0216                     	;# 
   743     0217                     	;# 
   744     0217                     	;# 
   745     0291                     	;# 
   746     0291                     	;# 
   747     0292                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0295                     	;# 
   752     0296                     	;# 
   753     0298                     	;# 
   754     0298                     	;# 
   755     0299                     	;# 
   756     029A                     	;# 
   757     029B                     	;# 
   758     029C                     	;# 
   759     029D                     	;# 
   760     029E                     	;# 
   761     0311                     	;# 
   762     0311                     	;# 
   763     0312                     	;# 
   764     0313                     	;# 
   765     0318                     	;# 
   766     0318                     	;# 
   767     0319                     	;# 
   768     031A                     	;# 
   769     038C                     	;# 
   770     038E                     	;# 
   771     0391                     	;# 
   772     0392                     	;# 
   773     0393                     	;# 
   774     039A                     	;# 
   775     039C                     	;# 
   776     039D                     	;# 
   777     039E                     	;# 
   778     039F                     	;# 
   779     0415                     	;# 
   780     0416                     	;# 
   781     0417                     	;# 
   782     041C                     	;# 
   783     041D                     	;# 
   784     041E                     	;# 
   785     0FE4                     	;# 
   786     0FE5                     	;# 
   787     0FE6                     	;# 
   788     0FE7                     	;# 
   789     0FE8                     	;# 
   790     0FE9                     	;# 
   791     0FEA                     	;# 
   792     0FEB                     	;# 
   793     0FED                     	;# 
   794     0FEE                     	;# 
   795     0FEF                     	;# 
   796     0000                     	;# 
   797     0001                     	;# 
   798     0002                     	;# 
   799     0003                     	;# 
   800     0004                     	;# 
   801     0005                     	;# 
   802     0006                     	;# 
   803     0007                     	;# 
   804     0008                     	;# 
   805     0009                     	;# 
   806     000A                     	;# 
   807     000B                     	;# 
   808     000C                     	;# 
   809     000E                     	;# 
   810     0011                     	;# 
   811     0012                     	;# 
   812     0013                     	;# 
   813     0015                     	;# 
   814     0016                     	;# 
   815     0016                     	;# 
   816     0017                     	;# 
   817     0018                     	;# 
   818     0019                     	;# 
   819     001A                     	;# 
   820     001B                     	;# 
   821     001C                     	;# 
   822     001E                     	;# 
   823     001F                     	;# 
   824     008C                     	;# 
   825     008E                     	;# 
   826     0091                     	;# 
   827     0092                     	;# 
   828     0093                     	;# 
   829     0095                     	;# 
   830     0096                     	;# 
   831     0097                     	;# 
   832     0098                     	;# 
   833     0099                     	;# 
   834     009A                     	;# 
   835     009B                     	;# 
   836     009B                     	;# 
   837     009C                     	;# 
   838     009D                     	;# 
   839     009E                     	;# 
   840     010C                     	;# 
   841     010E                     	;# 
   842     0111                     	;# 
   843     0112                     	;# 
   844     0113                     	;# 
   845     0114                     	;# 
   846     0115                     	;# 
   847     0116                     	;# 
   848     0117                     	;# 
   849     0118                     	;# 
   850     0119                     	;# 
   851     011A                     	;# 
   852     011B                     	;# 
   853     011D                     	;# 
   854     011E                     	;# 
   855     018C                     	;# 
   856     018E                     	;# 
   857     0191                     	;# 
   858     0191                     	;# 
   859     0192                     	;# 
   860     0193                     	;# 
   861     0193                     	;# 
   862     0193                     	;# 
   863     0194                     	;# 
   864     0195                     	;# 
   865     0196                     	;# 
   866     0199                     	;# 
   867     019A                     	;# 
   868     019B                     	;# 
   869     019B                     	;# 
   870     019C                     	;# 
   871     019D                     	;# 
   872     019E                     	;# 
   873     019F                     	;# 
   874     020C                     	;# 
   875     020E                     	;# 
   876     0211                     	;# 
   877     0211                     	;# 
   878     0212                     	;# 
   879     0212                     	;# 
   880     0213                     	;# 
   881     0213                     	;# 
   882     0214                     	;# 
   883     0214                     	;# 
   884     0215                     	;# 
   885     0215                     	;# 
   886     0215                     	;# 
   887     0216                     	;# 
   888     0216                     	;# 
   889     0217                     	;# 
   890     0217                     	;# 
   891     0291                     	;# 
   892     0291                     	;# 
   893     0292                     	;# 
   894     0293                     	;# 
   895     0294                     	;# 
   896     0295                     	;# 
   897     0295                     	;# 
   898     0296                     	;# 
   899     0298                     	;# 
   900     0298                     	;# 
   901     0299                     	;# 
   902     029A                     	;# 
   903     029B                     	;# 
   904     029C                     	;# 
   905     029D                     	;# 
   906     029E                     	;# 
   907     0311                     	;# 
   908     0311                     	;# 
   909     0312                     	;# 
   910     0313                     	;# 
   911     0318                     	;# 
   912     0318                     	;# 
   913     0319                     	;# 
   914     031A                     	;# 
   915     038C                     	;# 
   916     038E                     	;# 
   917     0391                     	;# 
   918     0392                     	;# 
   919     0393                     	;# 
   920     039A                     	;# 
   921     039C                     	;# 
   922     039D                     	;# 
   923     039E                     	;# 
   924     039F                     	;# 
   925     0415                     	;# 
   926     0416                     	;# 
   927     0417                     	;# 
   928     041C                     	;# 
   929     041D                     	;# 
   930     041E                     	;# 
   931     0FE4                     	;# 
   932     0FE5                     	;# 
   933     0FE6                     	;# 
   934     0FE7                     	;# 
   935     0FE8                     	;# 
   936     0FE9                     	;# 
   937     0FEA                     	;# 
   938     0FEB                     	;# 
   939     0FED                     	;# 
   940     0FEE                     	;# 
   941     0FEF                     	;# 
   942                           
   943                           	psect	idataBANK0
   944     04FB                     __pidataBANK0:
   945                           
   946                           ;initializer for _LCD_BACKLIGHT
   947     04FB  3408               	retlw	8
   948                           
   949                           	psect	nvBANK0
   950     005E                     __pnvBANK0:
   951     005E                     _mp2:
   952     005E                     	ds	2
   953     0011                     _PIR1bits	set	17
   954     000B                     _INTCONbits	set	11
   955     000E                     _PORTCbits	set	14
   956     008C                     _TXIF	set	140
   957     009B                     _ADRES	set	155
   958     0091                     _PIE1bits	set	145
   959     009D                     _ADCON0bits	set	157
   960     009D                     _ADCON0	set	157
   961     009E                     _ADCON1	set	158
   962     008E                     _TRISCbits	set	142
   963     008C                     _TRISAbits	set	140
   964     0099                     _OSCCON	set	153
   965     0475                     _TRISC5	set	1141
   966     0474                     _TRISC4	set	1140
   967     0471                     _TRISC1	set	1137
   968     0472                     _TRISC2	set	1138
   969     010E                     _LATCbits	set	270
   970     010C                     _LATAbits	set	268
   971     0871                     _LATC1	set	2161
   972     0872                     _LATC2	set	2162
   973     019B                     _SPBRG	set	411
   974     0199                     _RCREG	set	409
   975     019A                     _TXREG	set	410
   976     019D                     _RCSTA	set	413
   977     019E                     _TXSTA	set	414
   978     018C                     _ANSELAbits	set	396
   979     018E                     _ANSELCbits	set	398
   980     0CF2                     _BRGH	set	3314
   981     0CFB                     _BRG16	set	3323
   982                           
   983                           	psect	cinit
   984     0047                     start_initialization:	
   985                           ; #config settings
   986                           
   987     0047                     __initialization:
   988                           
   989                           ; Initialize objects allocated to BANK0
   990     0047  3184  24FB  3180   	fcall	__pidataBANK0	;fetch initializer
   991     004A  00E0               	movwf	__pdataBANK0& (0+127)
   992                           
   993                           ; Clear objects allocated to BITCOMMON
   994     004B  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK0
   997     004C  3020               	movlw	low __pbssBANK0
   998     004D  0084               	movwf	4
   999     004E  3000               	movlw	high __pbssBANK0
  1000     004F  0085               	movwf	5
  1001     0050  3024               	movlw	36
  1002     0051  3184  24F5  3180   	fcall	clear_ram0
  1003     0054                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006     0054                     __end_of__initialization:
  1007     0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1008     0055  0020               	movlb	0
  1009     0056  3180  2858         	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bitbssCOMMON
  1012     03E0                     __pbitbssCOMMON:
  1013     03E0                     _ena_send:
  1014     03E0                     	ds	1
  1015     03E1                     _ena_rx:
  1016     03E1                     	ds	1
  1017                           
  1018                           	psect	bssBANK0
  1019     0020                     __pbssBANK0:
  1020     0020                     _temp:
  1021     0020                     	ds	4
  1022     0024                     _temp_glo:
  1023     0024                     	ds	4
  1024     0028                     _bf_rx:
  1025     0028                     	ds	3
  1026     002B                     _mq2:
  1027     002B                     	ds	2
  1028     002D                     _rx_index:
  1029     002D                     	ds	1
  1030     002E                     _byte_rx:
  1031     002E                     	ds	1
  1032     002F                     _printf_mode:
  1033     002F                     	ds	1
  1034     0030                     _bf_tx:
  1035     0030                     	ds	20
  1036                           
  1037                           	psect	dataBANK0
  1038     0060                     __pdataBANK0:
  1039     0060                     _LCD_BACKLIGHT:
  1040     0060                     	ds	1
  1041                           
  1042                           	psect	clrtext
  1043     04F5                     clear_ram0:	
  1044                           ;	Called with FSR0 containing the base address, and
  1045                           ;	WREG with the size to clear
  1046                           
  1047     04F5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1048     04F6                     clrloop0:
  1049     04F6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1050     04F7  3101               	addfsr 0,1
  1051     04F8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1052     04F9  2CF6               	goto	clrloop0	;have we reached the end yet?
  1053     04FA  3400               	retlw	0	;all done for this memory range, return
  1054                           
  1055                           	psect	cstackCOMMON
  1056     0070                     __pcstackCOMMON:
  1057     0070                     ?_USART_TransmitChar:
  1058     0070                     ?_i2c_start:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061     0070                     ?_i2c_write:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064     0070                     ?_i2c_read:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067     0070                     ?_i2c_stop:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070     0070                     ?_USART_Init:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073     0070                     ?_Cmd_Aht10:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076     0070                     ?_USART_TransmitString:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079     0070                     ?_USART_ReceiveChar:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0070                     ??_USART_ReceiveChar:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0070                     ?_main:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088     0070                     ?_ngat_uart:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091     0070                     ??_ngat_uart:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x0
  1096     0070                     	ds	1
  1097     0071                     ??_USART_TransmitChar:
  1098     0071                     ??_i2c_start:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101     0071                     ??_i2c_write:	
  1102                           ; 1 bytes @ 0x1
  1103                           
  1104     0071                     ??_i2c_read:	
  1105                           ; 1 bytes @ 0x1
  1106                           
  1107     0071                     ??_i2c_stop:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110     0071                     ??_USART_Init:	
  1111                           ; 1 bytes @ 0x1
  1112                           
  1113     0071                     ?___lwdiv:	
  1114                           ; 1 bytes @ 0x1
  1115                           
  1116     0071                     ?___lldiv:	
  1117                           ; 2 bytes @ 0x1
  1118                           
  1119     0071                     USART_TransmitChar@out:	
  1120                           ; 4 bytes @ 0x1
  1121                           
  1122     0071                     ___lwdiv@divisor:	
  1123                           ; 1 bytes @ 0x1
  1124                           
  1125     0071                     ___lldiv@divisor:	
  1126                           ; 2 bytes @ 0x1
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x1
  1130     0071                     	ds	1
  1131     0072                     ??_USART_TransmitString:
  1132     0072                     i2c_read@ACK:	
  1133                           ; 1 bytes @ 0x2
  1134                           
  1135                           
  1136                           ; 1 bytes @ 0x2
  1137     0072                     	ds	1
  1138     0073                     i2c_write@DATA:
  1139     0073                     i2c_read@i:	
  1140                           ; 1 bytes @ 0x3
  1141                           
  1142     0073                     USART_TransmitString@out:	
  1143                           ; 1 bytes @ 0x3
  1144                           
  1145     0073                     ___lwdiv@dividend:	
  1146                           ; 1 bytes @ 0x3
  1147                           
  1148                           
  1149                           ; 2 bytes @ 0x3
  1150     0073                     	ds	1
  1151     0074                     i2c_write@i:
  1152     0074                     i2c_read@DATA:	
  1153                           ; 1 bytes @ 0x4
  1154                           
  1155     0074                     USART_TransmitString@i:	
  1156                           ; 1 bytes @ 0x4
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0x4
  1160     0074                     	ds	1
  1161     0075                     ??_Cmd_Aht10:
  1162     0075                     ??___lwdiv:	
  1163                           ; 1 bytes @ 0x5
  1164                           
  1165     0075                     ?_read_temp:	
  1166                           ; 1 bytes @ 0x5
  1167                           
  1168     0075                     ___lldiv@dividend:	
  1169                           ; 4 bytes @ 0x5
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x5
  1173     0075                     	ds	1
  1174     0076                     ___lwdiv@quotient:
  1175                           
  1176                           ; 2 bytes @ 0x6
  1177     0076                     	ds	2
  1178     0078                     ___lwdiv@counter:
  1179                           
  1180                           ; 1 bytes @ 0x8
  1181     0078                     	ds	1
  1182     0079                     ??___lldiv:
  1183     0079                     ??___lwmod:	
  1184                           ; 1 bytes @ 0x9
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x9
  1188     0079                     	ds	1
  1189     007A                     ??___llmod:
  1190     007A                     ___lwmod@counter:	
  1191                           ; 1 bytes @ 0xA
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0xA
  1195     007A                     	ds	1
  1196     007B                     ___llmod@counter:
  1197                           
  1198                           ; 1 bytes @ 0xB
  1199     007B                     	ds	1
  1200                           
  1201                           	psect	cstackBANK0
  1202     0044                     __pcstackBANK0:
  1203     0044                     ??_read_temp:
  1204     0044                     ?___lwmod:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207     0044                     ___lwmod@divisor:	
  1208                           ; 2 bytes @ 0x0
  1209                           
  1210     0044                     ___lldiv@quotient:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x0
  1215     0044                     	ds	2
  1216     0046                     ___lwmod@dividend:
  1217                           
  1218                           ; 2 bytes @ 0x2
  1219     0046                     	ds	2
  1220     0048                     ___lldiv@counter:
  1221                           
  1222                           ; 1 bytes @ 0x4
  1223     0048                     	ds	1
  1224     0049                     ?___llmod:
  1225     0049                     ___llmod@divisor:	
  1226                           ; 4 bytes @ 0x5
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0x5
  1230     0049                     	ds	3
  1231     004C                     read_temp@dt1:
  1232                           
  1233                           ; 4 bytes @ 0x8
  1234     004C                     	ds	1
  1235     004D                     ___llmod@dividend:
  1236                           
  1237                           ; 4 bytes @ 0x9
  1238     004D                     	ds	3
  1239     0050                     read_temp@dt2:
  1240                           
  1241                           ; 4 bytes @ 0xC
  1242     0050                     	ds	4
  1243     0054                     read_temp@dt3:
  1244                           
  1245                           ; 4 bytes @ 0x10
  1246     0054                     	ds	4
  1247     0058                     read_temp@temp:
  1248                           
  1249                           ; 4 bytes @ 0x14
  1250     0058                     	ds	4
  1251     005C                     ??_main:
  1252                           
  1253                           ; 1 bytes @ 0x18
  1254     005C                     	ds	2
  1255                           
  1256                           	psect	maintext
  1257     0058                     __pmaintext:	
  1258 ;;
  1259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1260 ;;
  1261 ;; *************** function _main *****************
  1262 ;; Defined at:
  1263 ;;		line 47 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : B1F/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;Total ram usage:        2 bytes
  1282 ;; Hardware stack levels required when called: 4
  1283 ;; This function calls:
  1284 ;;		_Cmd_Aht10
  1285 ;;		_USART_Init
  1286 ;;		_USART_TransmitString
  1287 ;;		___lldiv
  1288 ;;		___llmod
  1289 ;;		___lwdiv
  1290 ;;		___lwmod
  1291 ;;		_read_temp
  1292 ;; This function is called by:
  1293 ;;		Startup code after reset
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297     0058                     _main:	
  1298                           ;psect for function _main
  1299                           
  1300     0058                     l1779:	
  1301                           ;incstack = 0
  1302                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1303                           
  1304                           
  1305                           ;main.c: 48:     OSCCON = 0X7f;
  1306     0058  307F               	movlw	127
  1307     0059  0021               	movlb	1	; select bank1
  1308     005A  0099               	movwf	25	;volatile
  1309     005B                     l1781:
  1310                           
  1311                           ;main.c: 50:     TRISAbits.TRISA4 = 0;
  1312     005B  120C               	bcf	12,4	;volatile
  1313     005C                     l1783:
  1314                           
  1315                           ;main.c: 51:     LATAbits.LATA4 = 0;
  1316     005C  0022               	movlb	2	; select bank2
  1317     005D  120C               	bcf	12,4	;volatile
  1318     005E                     l1785:
  1319                           
  1320                           ;main.c: 53:     TRISCbits.TRISC3 = 0;
  1321     005E  0021               	movlb	1	; select bank1
  1322     005F  118E               	bcf	14,3	;volatile
  1323     0060                     l1787:
  1324                           
  1325                           ;main.c: 54:     LATCbits.LATC3 = 0;
  1326     0060  0022               	movlb	2	; select bank2
  1327     0061  118E               	bcf	14,3	;volatile
  1328     0062                     l1789:
  1329                           
  1330                           ;main.c: 56:     ANSELCbits.ANSC2 = 0;
  1331     0062  0023               	movlb	3	; select bank3
  1332     0063  110E               	bcf	14,2	;volatile
  1333     0064                     l1791:
  1334                           
  1335                           ;main.c: 58:     TRISAbits.TRISA2 = 1;
  1336     0064  0021               	movlb	1	; select bank1
  1337     0065  150C               	bsf	12,2	;volatile
  1338     0066                     l1793:
  1339                           
  1340                           ;main.c: 59:     ANSELAbits.ANSA2 = 1;
  1341     0066  0023               	movlb	3	; select bank3
  1342     0067  150C               	bsf	12,2	;volatile
  1343     0068                     l1795:
  1344                           
  1345                           ;main.c: 64:     USART_Init();
  1346     0068  3184  24AF  3180   	fcall	_USART_Init
  1347     006B                     l1797:
  1348                           
  1349                           ;main.c: 66:     ADCON1 = 0X80;
  1350     006B  3080               	movlw	128
  1351     006C  0021               	movlb	1	; select bank1
  1352     006D  009E               	movwf	30	;volatile
  1353     006E                     l1799:
  1354                           
  1355                           ;main.c: 68:     printf_mode = 0;
  1356     006E  0020               	movlb	0	; select bank0
  1357     006F  01AF               	clrf	_printf_mode
  1358     0070                     l1801:
  1359                           
  1360                           ;main.c: 69:     bf_tx[0] = 'S';
  1361     0070  3053               	movlw	83
  1362     0071  00B0               	movwf	_bf_tx
  1363     0072                     l1803:
  1364                           
  1365                           ;main.c: 70:     bf_tx[1] = 1;
  1366     0072  01B1               	clrf	_bf_tx+1
  1367     0073  0AB1               	incf	_bf_tx+1,f
  1368     0074                     l1805:
  1369                           
  1370                           ;main.c: 71:     bf_tx[16] = 'P';
  1371     0074  3050               	movlw	80
  1372     0075  00C0               	movwf	_bf_tx+16
  1373     0076                     l1807:
  1374                           
  1375                           ;main.c: 72:     mp2 = 1111;
  1376     0076  3057               	movlw	87
  1377     0077  00DE               	movwf	_mp2
  1378     0078  3004               	movlw	4
  1379     0079  00DF               	movwf	_mp2+1
  1380     007A                     l1809:
  1381                           
  1382                           ;main.c: 73:     bf_tx[12] = (unsigned char) (mp2 / 1000 % 10 + 48);
  1383     007A  300A               	movlw	10
  1384     007B  00C4               	movwf	___lwmod@divisor
  1385     007C  3000               	movlw	0
  1386     007D  00C5               	movwf	___lwmod@divisor+1
  1387     007E  30E8               	movlw	232
  1388     007F  00F1               	movwf	___lwdiv@divisor
  1389     0080  3003               	movlw	3
  1390     0081  00F2               	movwf	___lwdiv@divisor+1
  1391     0082  3057               	movlw	87
  1392     0083  00F3               	movwf	___lwdiv@dividend
  1393     0084  3004               	movlw	4
  1394     0085  00F4               	movwf	___lwdiv@dividend+1
  1395     0086  3183  23CC  3180   	fcall	___lwdiv
  1396     0089  0872               	movf	?___lwdiv+1,w
  1397     008A  0020               	movlb	0	; select bank0
  1398     008B  00C7               	movwf	___lwmod@dividend+1
  1399     008C  0871               	movf	?___lwdiv,w
  1400     008D  00C6               	movwf	___lwmod@dividend
  1401     008E  3184  2408  3180   	fcall	___lwmod
  1402     0091  0020               	movlb	0	; select bank0
  1403     0092  0844               	movf	?___lwmod,w
  1404     0093  3E30               	addlw	48
  1405     0094  00BC               	movwf	_bf_tx+12
  1406     0095                     l1811:
  1407                           
  1408                           ;main.c: 74:     bf_tx[13] = (unsigned char) (mp2 / 100 % 10 + 48);
  1409     0095  300A               	movlw	10
  1410     0096  00C4               	movwf	___lwmod@divisor
  1411     0097  3000               	movlw	0
  1412     0098  00C5               	movwf	___lwmod@divisor+1
  1413     0099  3064               	movlw	100
  1414     009A  00F1               	movwf	___lwdiv@divisor
  1415     009B  3000               	movlw	0
  1416     009C  00F2               	movwf	___lwdiv@divisor+1
  1417     009D  3057               	movlw	87
  1418     009E  00F3               	movwf	___lwdiv@dividend
  1419     009F  3004               	movlw	4
  1420     00A0  00F4               	movwf	___lwdiv@dividend+1
  1421     00A1  3183  23CC  3180   	fcall	___lwdiv
  1422     00A4  0872               	movf	?___lwdiv+1,w
  1423     00A5  0020               	movlb	0	; select bank0
  1424     00A6  00C7               	movwf	___lwmod@dividend+1
  1425     00A7  0871               	movf	?___lwdiv,w
  1426     00A8  00C6               	movwf	___lwmod@dividend
  1427     00A9  3184  2408  3180   	fcall	___lwmod
  1428     00AC  0020               	movlb	0	; select bank0
  1429     00AD  0844               	movf	?___lwmod,w
  1430     00AE  3E30               	addlw	48
  1431     00AF  00BD               	movwf	_bf_tx+13
  1432     00B0                     l1813:
  1433                           
  1434                           ;main.c: 75:     bf_tx[14] = (unsigned char) (mp2 / 10 % 10 + 48);
  1435     00B0  300A               	movlw	10
  1436     00B1  00C4               	movwf	___lwmod@divisor
  1437     00B2  3000               	movlw	0
  1438     00B3  00C5               	movwf	___lwmod@divisor+1
  1439     00B4  300A               	movlw	10
  1440     00B5  00F1               	movwf	___lwdiv@divisor
  1441     00B6  3000               	movlw	0
  1442     00B7  00F2               	movwf	___lwdiv@divisor+1
  1443     00B8  3057               	movlw	87
  1444     00B9  00F3               	movwf	___lwdiv@dividend
  1445     00BA  3004               	movlw	4
  1446     00BB  00F4               	movwf	___lwdiv@dividend+1
  1447     00BC  3183  23CC  3180   	fcall	___lwdiv
  1448     00BF  0872               	movf	?___lwdiv+1,w
  1449     00C0  0020               	movlb	0	; select bank0
  1450     00C1  00C7               	movwf	___lwmod@dividend+1
  1451     00C2  0871               	movf	?___lwdiv,w
  1452     00C3  00C6               	movwf	___lwmod@dividend
  1453     00C4  3184  2408  3180   	fcall	___lwmod
  1454     00C7  0020               	movlb	0	; select bank0
  1455     00C8  0844               	movf	?___lwmod,w
  1456     00C9  3E30               	addlw	48
  1457     00CA  00BE               	movwf	_bf_tx+14
  1458     00CB                     l1815:
  1459                           
  1460                           ;main.c: 76:     bf_tx[15] = (unsigned char) (mp2 / 1 % 10 + 48);
  1461     00CB  300A               	movlw	10
  1462     00CC  00C4               	movwf	___lwmod@divisor
  1463     00CD  3000               	movlw	0
  1464     00CE  00C5               	movwf	___lwmod@divisor+1
  1465     00CF  3057               	movlw	87
  1466     00D0  00C6               	movwf	___lwmod@dividend
  1467     00D1  3004               	movlw	4
  1468     00D2  00C7               	movwf	___lwmod@dividend+1
  1469     00D3  3184  2408  3180   	fcall	___lwmod
  1470     00D6  0020               	movlb	0	; select bank0
  1471     00D7  0844               	movf	?___lwmod,w
  1472     00D8  3E30               	addlw	48
  1473     00D9  00BF               	movwf	_bf_tx+15
  1474     00DA                     l1817:
  1475                           
  1476                           ;main.c: 79:         Cmd_Aht10();
  1477     00DA  3184  24C2  3180   	fcall	_Cmd_Aht10
  1478     00DD                     l1819:
  1479                           
  1480                           ;main.c: 80:         _delay((unsigned long)((80)*(16000000/4000.0)));
  1481     00DD  3002               	movlw	2
  1482     00DE  0020               	movlb	0	; select bank0
  1483     00DF  00DD               	movwf	??_main+1
  1484     00E0  30A0               	movlw	160
  1485     00E1  00DC               	movwf	??_main
  1486     00E2  3092               	movlw	146
  1487     00E3                     u1427:
  1488     00E3  0B89               	decfsz	9,f
  1489     00E4  28E3               	goto	u1427
  1490     00E5  0BDC               	decfsz	??_main,f
  1491     00E6  28E3               	goto	u1427
  1492     00E7  0BDD               	decfsz	??_main+1,f
  1493     00E8  28E3               	goto	u1427
  1494     00E9  0000               	nop
  1495     00EA                     l1821:
  1496                           
  1497                           ;main.c: 81:         temp = read_temp();
  1498     00EA  3182  226E  3180   	fcall	_read_temp
  1499     00ED  0878               	movf	?_read_temp+3,w
  1500     00EE  0020               	movlb	0	; select bank0
  1501     00EF  00A3               	movwf	_temp+3
  1502     00F0  0877               	movf	?_read_temp+2,w
  1503     00F1  00A2               	movwf	_temp+2
  1504     00F2  0876               	movf	?_read_temp+1,w
  1505     00F3  00A1               	movwf	_temp+1
  1506     00F4  0875               	movf	?_read_temp,w
  1507     00F5  00A0               	movwf	_temp
  1508     00F6                     l1823:
  1509                           
  1510                           ;main.c: 82:         bf_tx[2] = (unsigned char) (temp / 100000 % 10 + 48);
  1511     00F6  3000               	movlw	0
  1512     00F7  00CC               	movwf	___llmod@divisor+3
  1513     00F8  3000               	movlw	0
  1514     00F9  00CB               	movwf	___llmod@divisor+2
  1515     00FA  3000               	movlw	0
  1516     00FB  00CA               	movwf	___llmod@divisor+1
  1517     00FC  300A               	movlw	10
  1518     00FD  00C9               	movwf	___llmod@divisor
  1519     00FE  3000               	movlw	0
  1520     00FF  00F4               	movwf	___lldiv@divisor+3
  1521     0100  3001               	movlw	1
  1522     0101  00F3               	movwf	___lldiv@divisor+2
  1523     0102  3086               	movlw	134
  1524     0103  00F2               	movwf	___lldiv@divisor+1
  1525     0104  30A0               	movlw	160
  1526     0105  00F1               	movwf	___lldiv@divisor
  1527     0106  0823               	movf	_temp+3,w
  1528     0107  00F8               	movwf	___lldiv@dividend+3
  1529     0108  0822               	movf	_temp+2,w
  1530     0109  00F7               	movwf	___lldiv@dividend+2
  1531     010A  0821               	movf	_temp+1,w
  1532     010B  00F6               	movwf	___lldiv@dividend+1
  1533     010C  0820               	movf	_temp,w
  1534     010D  00F5               	movwf	___lldiv@dividend
  1535     010E  3183  2326  3180   	fcall	___lldiv
  1536     0111  0874               	movf	?___lldiv+3,w
  1537     0112  0020               	movlb	0	; select bank0
  1538     0113  00D0               	movwf	___llmod@dividend+3
  1539     0114  0873               	movf	?___lldiv+2,w
  1540     0115  00CF               	movwf	___llmod@dividend+2
  1541     0116  0872               	movf	?___lldiv+1,w
  1542     0117  00CE               	movwf	___llmod@dividend+1
  1543     0118  0871               	movf	?___lldiv,w
  1544     0119  00CD               	movwf	___llmod@dividend
  1545     011A  3183  2381  3180   	fcall	___llmod
  1546     011D  0020               	movlb	0	; select bank0
  1547     011E  0849               	movf	?___llmod,w
  1548     011F  3E30               	addlw	48
  1549     0120  00B2               	movwf	_bf_tx+2
  1550     0121                     l1825:
  1551                           
  1552                           ;main.c: 83:         bf_tx[3] = (unsigned char) (temp / 10000 % 10 + 48);
  1553     0121  3000               	movlw	0
  1554     0122  00CC               	movwf	___llmod@divisor+3
  1555     0123  3000               	movlw	0
  1556     0124  00CB               	movwf	___llmod@divisor+2
  1557     0125  3000               	movlw	0
  1558     0126  00CA               	movwf	___llmod@divisor+1
  1559     0127  300A               	movlw	10
  1560     0128  00C9               	movwf	___llmod@divisor
  1561     0129  3000               	movlw	0
  1562     012A  00F4               	movwf	___lldiv@divisor+3
  1563     012B  3000               	movlw	0
  1564     012C  00F3               	movwf	___lldiv@divisor+2
  1565     012D  3027               	movlw	39
  1566     012E  00F2               	movwf	___lldiv@divisor+1
  1567     012F  3010               	movlw	16
  1568     0130  00F1               	movwf	___lldiv@divisor
  1569     0131  0823               	movf	_temp+3,w
  1570     0132  00F8               	movwf	___lldiv@dividend+3
  1571     0133  0822               	movf	_temp+2,w
  1572     0134  00F7               	movwf	___lldiv@dividend+2
  1573     0135  0821               	movf	_temp+1,w
  1574     0136  00F6               	movwf	___lldiv@dividend+1
  1575     0137  0820               	movf	_temp,w
  1576     0138  00F5               	movwf	___lldiv@dividend
  1577     0139  3183  2326  3180   	fcall	___lldiv
  1578     013C  0874               	movf	?___lldiv+3,w
  1579     013D  0020               	movlb	0	; select bank0
  1580     013E  00D0               	movwf	___llmod@dividend+3
  1581     013F  0873               	movf	?___lldiv+2,w
  1582     0140  00CF               	movwf	___llmod@dividend+2
  1583     0141  0872               	movf	?___lldiv+1,w
  1584     0142  00CE               	movwf	___llmod@dividend+1
  1585     0143  0871               	movf	?___lldiv,w
  1586     0144  00CD               	movwf	___llmod@dividend
  1587     0145  3183  2381  3180   	fcall	___llmod
  1588     0148  0020               	movlb	0	; select bank0
  1589     0149  0849               	movf	?___llmod,w
  1590     014A  3E30               	addlw	48
  1591     014B  00B3               	movwf	_bf_tx+3
  1592     014C                     l1827:
  1593                           
  1594                           ;main.c: 84:         bf_tx[4] = (unsigned char) (temp / 1000 % 10 + 48);
  1595     014C  3000               	movlw	0
  1596     014D  00CC               	movwf	___llmod@divisor+3
  1597     014E  3000               	movlw	0
  1598     014F  00CB               	movwf	___llmod@divisor+2
  1599     0150  3000               	movlw	0
  1600     0151  00CA               	movwf	___llmod@divisor+1
  1601     0152  300A               	movlw	10
  1602     0153  00C9               	movwf	___llmod@divisor
  1603     0154  3000               	movlw	0
  1604     0155  00F4               	movwf	___lldiv@divisor+3
  1605     0156  3000               	movlw	0
  1606     0157  00F3               	movwf	___lldiv@divisor+2
  1607     0158  3003               	movlw	3
  1608     0159  00F2               	movwf	___lldiv@divisor+1
  1609     015A  30E8               	movlw	232
  1610     015B  00F1               	movwf	___lldiv@divisor
  1611     015C  0823               	movf	_temp+3,w
  1612     015D  00F8               	movwf	___lldiv@dividend+3
  1613     015E  0822               	movf	_temp+2,w
  1614     015F  00F7               	movwf	___lldiv@dividend+2
  1615     0160  0821               	movf	_temp+1,w
  1616     0161  00F6               	movwf	___lldiv@dividend+1
  1617     0162  0820               	movf	_temp,w
  1618     0163  00F5               	movwf	___lldiv@dividend
  1619     0164  3183  2326  3180   	fcall	___lldiv
  1620     0167  0874               	movf	?___lldiv+3,w
  1621     0168  0020               	movlb	0	; select bank0
  1622     0169  00D0               	movwf	___llmod@dividend+3
  1623     016A  0873               	movf	?___lldiv+2,w
  1624     016B  00CF               	movwf	___llmod@dividend+2
  1625     016C  0872               	movf	?___lldiv+1,w
  1626     016D  00CE               	movwf	___llmod@dividend+1
  1627     016E  0871               	movf	?___lldiv,w
  1628     016F  00CD               	movwf	___llmod@dividend
  1629     0170  3183  2381  3180   	fcall	___llmod
  1630     0173  0020               	movlb	0	; select bank0
  1631     0174  0849               	movf	?___llmod,w
  1632     0175  3E30               	addlw	48
  1633     0176  00B4               	movwf	_bf_tx+4
  1634     0177                     l1829:
  1635                           
  1636                           ;main.c: 85:         bf_tx[5] = (unsigned char) (temp / 100 % 10 + 48);
  1637     0177  3000               	movlw	0
  1638     0178  00CC               	movwf	___llmod@divisor+3
  1639     0179  3000               	movlw	0
  1640     017A  00CB               	movwf	___llmod@divisor+2
  1641     017B  3000               	movlw	0
  1642     017C  00CA               	movwf	___llmod@divisor+1
  1643     017D  300A               	movlw	10
  1644     017E  00C9               	movwf	___llmod@divisor
  1645     017F  3000               	movlw	0
  1646     0180  00F4               	movwf	___lldiv@divisor+3
  1647     0181  3000               	movlw	0
  1648     0182  00F3               	movwf	___lldiv@divisor+2
  1649     0183  3000               	movlw	0
  1650     0184  00F2               	movwf	___lldiv@divisor+1
  1651     0185  3064               	movlw	100
  1652     0186  00F1               	movwf	___lldiv@divisor
  1653     0187  0823               	movf	_temp+3,w
  1654     0188  00F8               	movwf	___lldiv@dividend+3
  1655     0189  0822               	movf	_temp+2,w
  1656     018A  00F7               	movwf	___lldiv@dividend+2
  1657     018B  0821               	movf	_temp+1,w
  1658     018C  00F6               	movwf	___lldiv@dividend+1
  1659     018D  0820               	movf	_temp,w
  1660     018E  00F5               	movwf	___lldiv@dividend
  1661     018F  3183  2326  3180   	fcall	___lldiv
  1662     0192  0874               	movf	?___lldiv+3,w
  1663     0193  0020               	movlb	0	; select bank0
  1664     0194  00D0               	movwf	___llmod@dividend+3
  1665     0195  0873               	movf	?___lldiv+2,w
  1666     0196  00CF               	movwf	___llmod@dividend+2
  1667     0197  0872               	movf	?___lldiv+1,w
  1668     0198  00CE               	movwf	___llmod@dividend+1
  1669     0199  0871               	movf	?___lldiv,w
  1670     019A  00CD               	movwf	___llmod@dividend
  1671     019B  3183  2381  3180   	fcall	___llmod
  1672     019E  0020               	movlb	0	; select bank0
  1673     019F  0849               	movf	?___llmod,w
  1674     01A0  3E30               	addlw	48
  1675     01A1  00B5               	movwf	_bf_tx+5
  1676     01A2                     l1831:
  1677                           
  1678                           ;main.c: 86:         bf_tx[6] = (unsigned char) (temp / 10 % 10 + 48);
  1679     01A2  3000               	movlw	0
  1680     01A3  00CC               	movwf	___llmod@divisor+3
  1681     01A4  3000               	movlw	0
  1682     01A5  00CB               	movwf	___llmod@divisor+2
  1683     01A6  3000               	movlw	0
  1684     01A7  00CA               	movwf	___llmod@divisor+1
  1685     01A8  300A               	movlw	10
  1686     01A9  00C9               	movwf	___llmod@divisor
  1687     01AA  3000               	movlw	0
  1688     01AB  00F4               	movwf	___lldiv@divisor+3
  1689     01AC  3000               	movlw	0
  1690     01AD  00F3               	movwf	___lldiv@divisor+2
  1691     01AE  3000               	movlw	0
  1692     01AF  00F2               	movwf	___lldiv@divisor+1
  1693     01B0  300A               	movlw	10
  1694     01B1  00F1               	movwf	___lldiv@divisor
  1695     01B2  0823               	movf	_temp+3,w
  1696     01B3  00F8               	movwf	___lldiv@dividend+3
  1697     01B4  0822               	movf	_temp+2,w
  1698     01B5  00F7               	movwf	___lldiv@dividend+2
  1699     01B6  0821               	movf	_temp+1,w
  1700     01B7  00F6               	movwf	___lldiv@dividend+1
  1701     01B8  0820               	movf	_temp,w
  1702     01B9  00F5               	movwf	___lldiv@dividend
  1703     01BA  3183  2326  3180   	fcall	___lldiv
  1704     01BD  0874               	movf	?___lldiv+3,w
  1705     01BE  0020               	movlb	0	; select bank0
  1706     01BF  00D0               	movwf	___llmod@dividend+3
  1707     01C0  0873               	movf	?___lldiv+2,w
  1708     01C1  00CF               	movwf	___llmod@dividend+2
  1709     01C2  0872               	movf	?___lldiv+1,w
  1710     01C3  00CE               	movwf	___llmod@dividend+1
  1711     01C4  0871               	movf	?___lldiv,w
  1712     01C5  00CD               	movwf	___llmod@dividend
  1713     01C6  3183  2381  3180   	fcall	___llmod
  1714     01C9  0020               	movlb	0	; select bank0
  1715     01CA  0849               	movf	?___llmod,w
  1716     01CB  3E30               	addlw	48
  1717     01CC  00B6               	movwf	_bf_tx+6
  1718     01CD                     l1833:
  1719                           
  1720                           ;main.c: 87:         bf_tx[7] = (unsigned char) (temp / 1 % 10 + 48);
  1721     01CD  3000               	movlw	0
  1722     01CE  00CC               	movwf	___llmod@divisor+3
  1723     01CF  3000               	movlw	0
  1724     01D0  00CB               	movwf	___llmod@divisor+2
  1725     01D1  3000               	movlw	0
  1726     01D2  00CA               	movwf	___llmod@divisor+1
  1727     01D3  300A               	movlw	10
  1728     01D4  00C9               	movwf	___llmod@divisor
  1729     01D5  0823               	movf	_temp+3,w
  1730     01D6  00D0               	movwf	___llmod@dividend+3
  1731     01D7  0822               	movf	_temp+2,w
  1732     01D8  00CF               	movwf	___llmod@dividend+2
  1733     01D9  0821               	movf	_temp+1,w
  1734     01DA  00CE               	movwf	___llmod@dividend+1
  1735     01DB  0820               	movf	_temp,w
  1736     01DC  00CD               	movwf	___llmod@dividend
  1737     01DD  3183  2381  3180   	fcall	___llmod
  1738     01E0  0020               	movlb	0	; select bank0
  1739     01E1  0849               	movf	?___llmod,w
  1740     01E2  3E30               	addlw	48
  1741     01E3  00B7               	movwf	_bf_tx+7
  1742     01E4                     l1835:
  1743                           
  1744                           ;main.c: 89:         ADCON0 = 0X09;
  1745     01E4  3009               	movlw	9
  1746     01E5  0021               	movlb	1	; select bank1
  1747     01E6  009D               	movwf	29	;volatile
  1748     01E7                     l1837:
  1749                           
  1750                           ;main.c: 90:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  1751     01E7  3042               	movlw	66
  1752     01E8                     u1437:
  1753     01E8  0B89               	decfsz	9,f
  1754     01E9  29E8               	goto	u1437
  1755     01EA  3200               	nop2
  1756     01EB                     l1839:
  1757                           
  1758                           ;main.c: 91:         ADCON0bits.ADGO = 1;
  1759     01EB  0021               	movlb	1	; select bank1
  1760     01EC  149D               	bsf	29,1	;volatile
  1761     01ED                     l1841:
  1762                           
  1763                           ;main.c: 92:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1764     01ED  3002               	movlw	2
  1765     01EE  0020               	movlb	0	; select bank0
  1766     01EF  00DD               	movwf	??_main+1
  1767     01F0  3004               	movlw	4
  1768     01F1  00DC               	movwf	??_main
  1769     01F2  30BA               	movlw	186
  1770     01F3                     u1447:
  1771     01F3  0B89               	decfsz	9,f
  1772     01F4  29F3               	goto	u1447
  1773     01F5  0BDC               	decfsz	??_main,f
  1774     01F6  29F3               	goto	u1447
  1775     01F7  0BDD               	decfsz	??_main+1,f
  1776     01F8  29F3               	goto	u1447
  1777     01F9  0000               	nop
  1778     01FA                     l1843:
  1779                           
  1780                           ;main.c: 93:         mq2 = ADRES;
  1781     01FA  0021               	movlb	1	; select bank1
  1782     01FB  081C               	movf	28,w	;volatile
  1783     01FC  0020               	movlb	0	; select bank0
  1784     01FD  00AC               	movwf	_mq2+1
  1785     01FE  0021               	movlb	1	; select bank1
  1786     01FF  081B               	movf	27,w	;volatile
  1787     0200  0020               	movlb	0	; select bank0
  1788     0201  00AB               	movwf	_mq2
  1789     0202                     l1845:
  1790                           
  1791                           ;main.c: 94:         bf_tx[8] = (unsigned char) (mq2 / 1000 % 10 + 48);
  1792     0202  300A               	movlw	10
  1793     0203  00C4               	movwf	___lwmod@divisor
  1794     0204  3000               	movlw	0
  1795     0205  00C5               	movwf	___lwmod@divisor+1
  1796     0206  30E8               	movlw	232
  1797     0207  00F1               	movwf	___lwdiv@divisor
  1798     0208  3003               	movlw	3
  1799     0209  00F2               	movwf	___lwdiv@divisor+1
  1800     020A  082C               	movf	_mq2+1,w
  1801     020B  00F4               	movwf	___lwdiv@dividend+1
  1802     020C  082B               	movf	_mq2,w
  1803     020D  00F3               	movwf	___lwdiv@dividend
  1804     020E  3183  23CC  3180   	fcall	___lwdiv
  1805     0211  0872               	movf	?___lwdiv+1,w
  1806     0212  0020               	movlb	0	; select bank0
  1807     0213  00C7               	movwf	___lwmod@dividend+1
  1808     0214  0871               	movf	?___lwdiv,w
  1809     0215  00C6               	movwf	___lwmod@dividend
  1810     0216  3184  2408  3180   	fcall	___lwmod
  1811     0219  0020               	movlb	0	; select bank0
  1812     021A  0844               	movf	?___lwmod,w
  1813     021B  3E30               	addlw	48
  1814     021C  00B8               	movwf	_bf_tx+8
  1815     021D                     l1847:
  1816                           
  1817                           ;main.c: 95:         bf_tx[9] = (unsigned char) (mq2 / 100 % 10 + 48);
  1818     021D  300A               	movlw	10
  1819     021E  00C4               	movwf	___lwmod@divisor
  1820     021F  3000               	movlw	0
  1821     0220  00C5               	movwf	___lwmod@divisor+1
  1822     0221  3064               	movlw	100
  1823     0222  00F1               	movwf	___lwdiv@divisor
  1824     0223  3000               	movlw	0
  1825     0224  00F2               	movwf	___lwdiv@divisor+1
  1826     0225  082C               	movf	_mq2+1,w
  1827     0226  00F4               	movwf	___lwdiv@dividend+1
  1828     0227  082B               	movf	_mq2,w
  1829     0228  00F3               	movwf	___lwdiv@dividend
  1830     0229  3183  23CC  3180   	fcall	___lwdiv
  1831     022C  0872               	movf	?___lwdiv+1,w
  1832     022D  0020               	movlb	0	; select bank0
  1833     022E  00C7               	movwf	___lwmod@dividend+1
  1834     022F  0871               	movf	?___lwdiv,w
  1835     0230  00C6               	movwf	___lwmod@dividend
  1836     0231  3184  2408  3180   	fcall	___lwmod
  1837     0234  0020               	movlb	0	; select bank0
  1838     0235  0844               	movf	?___lwmod,w
  1839     0236  3E30               	addlw	48
  1840     0237  00B9               	movwf	_bf_tx+9
  1841     0238                     l1849:
  1842                           
  1843                           ;main.c: 96:         bf_tx[10] = (unsigned char) (mq2 / 10 % 10 + 48);
  1844     0238  300A               	movlw	10
  1845     0239  00C4               	movwf	___lwmod@divisor
  1846     023A  3000               	movlw	0
  1847     023B  00C5               	movwf	___lwmod@divisor+1
  1848     023C  300A               	movlw	10
  1849     023D  00F1               	movwf	___lwdiv@divisor
  1850     023E  3000               	movlw	0
  1851     023F  00F2               	movwf	___lwdiv@divisor+1
  1852     0240  082C               	movf	_mq2+1,w
  1853     0241  00F4               	movwf	___lwdiv@dividend+1
  1854     0242  082B               	movf	_mq2,w
  1855     0243  00F3               	movwf	___lwdiv@dividend
  1856     0244  3183  23CC  3180   	fcall	___lwdiv
  1857     0247  0872               	movf	?___lwdiv+1,w
  1858     0248  0020               	movlb	0	; select bank0
  1859     0249  00C7               	movwf	___lwmod@dividend+1
  1860     024A  0871               	movf	?___lwdiv,w
  1861     024B  00C6               	movwf	___lwmod@dividend
  1862     024C  3184  2408  3180   	fcall	___lwmod
  1863     024F  0020               	movlb	0	; select bank0
  1864     0250  0844               	movf	?___lwmod,w
  1865     0251  3E30               	addlw	48
  1866     0252  00BA               	movwf	_bf_tx+10
  1867     0253                     l1851:
  1868                           
  1869                           ;main.c: 97:         bf_tx[11] = (unsigned char) (mq2 / 1 % 10 + 48);
  1870     0253  300A               	movlw	10
  1871     0254  00C4               	movwf	___lwmod@divisor
  1872     0255  3000               	movlw	0
  1873     0256  00C5               	movwf	___lwmod@divisor+1
  1874     0257  082C               	movf	_mq2+1,w
  1875     0258  00C7               	movwf	___lwmod@dividend+1
  1876     0259  082B               	movf	_mq2,w
  1877     025A  00C6               	movwf	___lwmod@dividend
  1878     025B  3184  2408  3180   	fcall	___lwmod
  1879     025E  0020               	movlb	0	; select bank0
  1880     025F  0844               	movf	?___lwmod,w
  1881     0260  3E30               	addlw	48
  1882     0261  00BB               	movwf	_bf_tx+11
  1883     0262                     l1853:
  1884                           
  1885                           ;main.c: 100:         if (ena_send == 1) {
  1886     0262  1C7C               	btfss	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1887     0263  2A65               	goto	u1411
  1888     0264  2A66               	goto	u1410
  1889     0265                     u1411:
  1890     0265  28DA               	goto	l1817
  1891     0266                     u1410:
  1892     0266                     l1855:
  1893                           
  1894                           ;main.c: 101:             ena_send = 0;
  1895     0266  107C               	bcf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  1896     0267                     l1857:
  1897                           
  1898                           ;main.c: 102:             USART_TransmitString(bf_tx);
  1899     0267  3030               	movlw	(low (_bf_tx| 0))& (0+255)
  1900     0268  3184  2498  3180   	fcall	_USART_TransmitString
  1901     026B  28DA               	goto	l1817
  1902     026C  3180  2845         	ljmp	start
  1903     026E                     __end_of_main:
  1904                           
  1905                           	psect	text1
  1906     026E                     __ptext1:	
  1907 ;; *************** function _read_temp *****************
  1908 ;; Defined at:
  1909 ;;		line 26 in file "main.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  temp            4   20[BANK0 ] unsigned long 
  1914 ;;  dt3             4   16[BANK0 ] unsigned long 
  1915 ;;  dt2             4   12[BANK0 ] unsigned long 
  1916 ;;  dt1             4    8[BANK0 ] unsigned long 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  4    5[COMMON] unsigned long 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1927 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;Total ram usage:       28 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 3
  1933 ;; This function calls:
  1934 ;;		_i2c_read
  1935 ;;		_i2c_start
  1936 ;;		_i2c_stop
  1937 ;;		_i2c_write
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943     026E                     _read_temp:	
  1944                           ;psect for function _read_temp
  1945                           
  1946     026E                     l1385:	
  1947                           ;incstack = 0
  1948                           ; Regs used in _read_temp: [wreg+status,2+status,0+pclath+cstack]
  1949                           
  1950                           
  1951                           ;main.c: 27:     unsigned long dt1, dt2, dt3, temp;;main.c: 28:     i2c_start();
  1952     026E  3184  24E4  3182   	fcall	_i2c_start
  1953     0271                     l1387:
  1954                           
  1955                           ;main.c: 29:     i2c_write(0x71);
  1956     0271  3071               	movlw	113
  1957     0272  3184  2471  3182   	fcall	_i2c_write
  1958     0275                     l1389:
  1959                           
  1960                           ;main.c: 30:     i2c_read(1);
  1961     0275  3001               	movlw	1
  1962     0276  3184  243D  3182   	fcall	_i2c_read
  1963     0279                     l1391:
  1964                           
  1965                           ;main.c: 31:     i2c_read(1);
  1966     0279  3001               	movlw	1
  1967     027A  3184  243D  3182   	fcall	_i2c_read
  1968     027D                     l1393:
  1969                           
  1970                           ;main.c: 32:     i2c_read(1);
  1971     027D  3001               	movlw	1
  1972     027E  3184  243D  3182   	fcall	_i2c_read
  1973     0281                     l1395:
  1974                           
  1975                           ;main.c: 33:     dt1 = i2c_read(1) & 0x0f;
  1976     0281  3001               	movlw	1
  1977     0282  3184  243D  3182   	fcall	_i2c_read
  1978     0285  390F               	andlw	15
  1979     0286  0020               	movlb	0	; select bank0
  1980     0287  00C4               	movwf	??_read_temp
  1981     0288  01C5               	clrf	??_read_temp+1
  1982     0289  01C6               	clrf	??_read_temp+2
  1983     028A  01C7               	clrf	??_read_temp+3
  1984     028B  0847               	movf	??_read_temp+3,w
  1985     028C  00CF               	movwf	read_temp@dt1+3
  1986     028D  0846               	movf	??_read_temp+2,w
  1987     028E  00CE               	movwf	read_temp@dt1+2
  1988     028F  0845               	movf	??_read_temp+1,w
  1989     0290  00CD               	movwf	read_temp@dt1+1
  1990     0291  0844               	movf	??_read_temp,w
  1991     0292  00CC               	movwf	read_temp@dt1
  1992     0293                     l1397:
  1993                           
  1994                           ;main.c: 34:     dt2 = i2c_read(1);
  1995     0293  3001               	movlw	1
  1996     0294  3184  243D  3182   	fcall	_i2c_read
  1997     0297  0020               	movlb	0	; select bank0
  1998     0298  00C4               	movwf	??_read_temp
  1999     0299  01C5               	clrf	??_read_temp+1
  2000     029A  01C6               	clrf	??_read_temp+2
  2001     029B  01C7               	clrf	??_read_temp+3
  2002     029C  0847               	movf	??_read_temp+3,w
  2003     029D  00D3               	movwf	read_temp@dt2+3
  2004     029E  0846               	movf	??_read_temp+2,w
  2005     029F  00D2               	movwf	read_temp@dt2+2
  2006     02A0  0845               	movf	??_read_temp+1,w
  2007     02A1  00D1               	movwf	read_temp@dt2+1
  2008     02A2  0844               	movf	??_read_temp,w
  2009     02A3  00D0               	movwf	read_temp@dt2
  2010     02A4                     l1399:
  2011                           
  2012                           ;main.c: 35:     dt3 = i2c_read(0);
  2013     02A4  3000               	movlw	0
  2014     02A5  3184  243D  3182   	fcall	_i2c_read
  2015     02A8  0020               	movlb	0	; select bank0
  2016     02A9  00C4               	movwf	??_read_temp
  2017     02AA  01C5               	clrf	??_read_temp+1
  2018     02AB  01C6               	clrf	??_read_temp+2
  2019     02AC  01C7               	clrf	??_read_temp+3
  2020     02AD  0847               	movf	??_read_temp+3,w
  2021     02AE  00D7               	movwf	read_temp@dt3+3
  2022     02AF  0846               	movf	??_read_temp+2,w
  2023     02B0  00D6               	movwf	read_temp@dt3+2
  2024     02B1  0845               	movf	??_read_temp+1,w
  2025     02B2  00D5               	movwf	read_temp@dt3+1
  2026     02B3  0844               	movf	??_read_temp,w
  2027     02B4  00D4               	movwf	read_temp@dt3
  2028     02B5                     l1401:
  2029                           
  2030                           ;main.c: 36:     i2c_stop();
  2031     02B5  3184  24DB  3182   	fcall	_i2c_stop
  2032     02B8                     l1403:
  2033                           
  2034                           ;main.c: 37:     temp = (dt1 & 0x0f) << 16 | dt2 << 8 | dt3;
  2035     02B8  0020               	movlb	0	; select bank0
  2036     02B9  0850               	movf	read_temp@dt2,w
  2037     02BA  00C4               	movwf	??_read_temp
  2038     02BB  0851               	movf	read_temp@dt2+1,w
  2039     02BC  00C5               	movwf	??_read_temp+1
  2040     02BD  0852               	movf	read_temp@dt2+2,w
  2041     02BE  00C6               	movwf	??_read_temp+2
  2042     02BF  0853               	movf	read_temp@dt2+3,w
  2043     02C0  00C7               	movwf	??_read_temp+3
  2044     02C1  3008               	movlw	8
  2045     02C2                     u775:
  2046     02C2  35C4               	lslf	??_read_temp,f
  2047     02C3  0DC5               	rlf	??_read_temp+1,f
  2048     02C4  0DC6               	rlf	??_read_temp+2,f
  2049     02C5  0DC7               	rlf	??_read_temp+3,f
  2050     02C6                     u770:
  2051     02C6  0B89               	decfsz	9,f
  2052     02C7  2AC2               	goto	u775
  2053     02C8  300F               	movlw	15
  2054     02C9  054C               	andwf	read_temp@dt1,w
  2055     02CA  00C8               	movwf	??_read_temp+4
  2056     02CB  3000               	movlw	0
  2057     02CC  054D               	andwf	read_temp@dt1+1,w
  2058     02CD  00C9               	movwf	??_read_temp+5
  2059     02CE  3000               	movlw	0
  2060     02CF  054E               	andwf	read_temp@dt1+2,w
  2061     02D0  00CA               	movwf	??_read_temp+6
  2062     02D1  3000               	movlw	0
  2063     02D2  054F               	andwf	read_temp@dt1+3,w
  2064     02D3  00CB               	movwf	??_read_temp+7
  2065     02D4  3010               	movlw	16
  2066     02D5                     u785:
  2067     02D5  35C8               	lslf	??_read_temp+4,f
  2068     02D6  0DC9               	rlf	??_read_temp+5,f
  2069     02D7  0DCA               	rlf	??_read_temp+6,f
  2070     02D8  0DCB               	rlf	??_read_temp+7,f
  2071     02D9                     u780:
  2072     02D9  0B89               	decfsz	9,f
  2073     02DA  2AD5               	goto	u785
  2074     02DB  0848               	movf	??_read_temp+4,w
  2075     02DC  04C4               	iorwf	??_read_temp,f
  2076     02DD  0849               	movf	??_read_temp+5,w
  2077     02DE  04C5               	iorwf	??_read_temp+1,f
  2078     02DF  084A               	movf	??_read_temp+6,w
  2079     02E0  04C6               	iorwf	??_read_temp+2,f
  2080     02E1  084B               	movf	??_read_temp+7,w
  2081     02E2  04C7               	iorwf	??_read_temp+3,f
  2082     02E3  0854               	movf	read_temp@dt3,w
  2083     02E4  0444               	iorwf	??_read_temp,w
  2084     02E5  00D8               	movwf	read_temp@temp
  2085     02E6  0855               	movf	read_temp@dt3+1,w
  2086     02E7  0445               	iorwf	??_read_temp+1,w
  2087     02E8  00D9               	movwf	read_temp@temp+1
  2088     02E9  0856               	movf	read_temp@dt3+2,w
  2089     02EA  0446               	iorwf	??_read_temp+2,w
  2090     02EB  00DA               	movwf	read_temp@temp+2
  2091     02EC  0857               	movf	read_temp@dt3+3,w
  2092     02ED  0447               	iorwf	??_read_temp+3,w
  2093     02EE  00DB               	movwf	read_temp@temp+3
  2094     02EF                     l1405:
  2095                           
  2096                           ;main.c: 38:     if (temp > 781189) temp = 781189;
  2097     02EF  085B               	movf	read_temp@temp+3,w
  2098     02F0  1D03               	btfss	3,2
  2099     02F1  2AFC               	goto	u790
  2100     02F2  3086               	movlw	134
  2101     02F3  0258               	subwf	read_temp@temp,w
  2102     02F4  30EB               	movlw	235
  2103     02F5  3B59               	subwfb	read_temp@temp+1,w
  2104     02F6  300B               	movlw	11
  2105     02F7  3B5A               	subwfb	read_temp@temp+2,w
  2106     02F8  1C03               	btfss	3,0
  2107     02F9  2AFB               	goto	u791
  2108     02FA  2AFC               	goto	u790
  2109     02FB                     u791:
  2110     02FB  2B05               	goto	l1409
  2111     02FC                     u790:
  2112     02FC                     l1407:
  2113     02FC  3000               	movlw	0
  2114     02FD  0020               	movlb	0	; select bank0
  2115     02FE  00DB               	movwf	read_temp@temp+3
  2116     02FF  300B               	movlw	11
  2117     0300  00DA               	movwf	read_temp@temp+2
  2118     0301  30EB               	movlw	235
  2119     0302  00D9               	movwf	read_temp@temp+1
  2120     0303  3085               	movlw	133
  2121     0304  00D8               	movwf	read_temp@temp
  2122     0305                     l1409:
  2123                           
  2124                           ;main.c: 39:     if (temp < 314573) temp = 314573;
  2125     0305  0020               	movlb	0	; select bank0
  2126     0306  085B               	movf	read_temp@temp+3,w
  2127     0307  1D03               	btfss	3,2
  2128     0308  2B12               	goto	u801
  2129     0309  30CD               	movlw	205
  2130     030A  0258               	subwf	read_temp@temp,w
  2131     030B  30CC               	movlw	204
  2132     030C  3B59               	subwfb	read_temp@temp+1,w
  2133     030D  3004               	movlw	4
  2134     030E  3B5A               	subwfb	read_temp@temp+2,w
  2135     030F  1803               	btfsc	3,0
  2136     0310  2B12               	goto	u801
  2137     0311  2B13               	goto	u800
  2138     0312                     u801:
  2139     0312  2B1C               	goto	l72
  2140     0313                     u800:
  2141     0313                     l1411:
  2142     0313  3000               	movlw	0
  2143     0314  0020               	movlb	0	; select bank0
  2144     0315  00DB               	movwf	read_temp@temp+3
  2145     0316  3004               	movlw	4
  2146     0317  00DA               	movwf	read_temp@temp+2
  2147     0318  30CC               	movlw	204
  2148     0319  00D9               	movwf	read_temp@temp+1
  2149     031A  30CD               	movlw	205
  2150     031B  00D8               	movwf	read_temp@temp
  2151     031C                     l72:
  2152                           
  2153                           ;main.c: 40:     return temp;
  2154     031C  0020               	movlb	0	; select bank0
  2155     031D  085B               	movf	read_temp@temp+3,w
  2156     031E  00F8               	movwf	?_read_temp+3
  2157     031F  085A               	movf	read_temp@temp+2,w
  2158     0320  00F7               	movwf	?_read_temp+2
  2159     0321  0859               	movf	read_temp@temp+1,w
  2160     0322  00F6               	movwf	?_read_temp+1
  2161     0323  0858               	movf	read_temp@temp,w
  2162     0324  00F5               	movwf	?_read_temp
  2163     0325                     l73:
  2164     0325  0008               	return
  2165     0326                     __end_of_read_temp:
  2166                           
  2167                           	psect	text2
  2168     043D                     __ptext2:	
  2169 ;; *************** function _i2c_read *****************
  2170 ;; Defined at:
  2171 ;;		line 39 in file "tv_i2c.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  ACK             1    wreg     unsigned char 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  ACK             1    2[COMMON] unsigned char 
  2176 ;;  i               1    3[COMMON] unsigned char 
  2177 ;;  DATA            1    4[COMMON] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      unsigned char 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2188 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;Total ram usage:        4 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 2
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_read_temp
  2198 ;;		_READ_T_H_AHT10
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202     043D                     _i2c_read:	
  2203                           ;psect for function _i2c_read
  2204                           
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2208                           ;i2c_read@ACK stored from wreg
  2209     043D  00F2               	movwf	i2c_read@ACK
  2210     043E                     l1347:
  2211                           
  2212                           ;tv_i2c.c: 39: unsigned char i2c_read(unsigned char ACK);tv_i2c.c: 40: {;tv_i2c.c: 41:  
      +                             unsigned char DATA;;tv_i2c.c: 42:     TRISC1=0;
  2213     043E  0021               	movlb	1	; select bank1
  2214     043F  108E               	bcf	14,1	;volatile
  2215                           
  2216                           ;tv_i2c.c: 43:     LATC1=0;
  2217     0440  0022               	movlb	2	; select bank2
  2218     0441  108E               	bcf	14,1	;volatile
  2219                           
  2220                           ;tv_i2c.c: 44:     TRISC2=1;
  2221     0442  0021               	movlb	1	; select bank1
  2222     0443  150E               	bsf	14,2	;volatile
  2223     0444                     l1349:
  2224                           
  2225                           ;tv_i2c.c: 45:     for (unsigned char i=0;i<8;i++)
  2226     0444  01F3               	clrf	i2c_read@i
  2227     0445                     l149:
  2228                           
  2229                           ;tv_i2c.c: 46:     {;tv_i2c.c: 47:         LATC1 = 1;
  2230     0445  0022               	movlb	2	; select bank2
  2231     0446  148E               	bsf	14,1	;volatile
  2232                           
  2233                           ;tv_i2c.c: 48:         if(PORTCbits.RC2 == 1) DATA = (unsigned char)(DATA << 1) | 1;
  2234     0447  0020               	movlb	0	; select bank0
  2235     0448  1D0E               	btfss	14,2	;volatile
  2236     0449  2C4B               	goto	u721
  2237     044A  2C4C               	goto	u720
  2238     044B                     u721:
  2239     044B  2C4F               	goto	l1357
  2240     044C                     u720:
  2241     044C                     l1355:
  2242     044C  1403               	setc
  2243     044D  0DF4               	rlf	i2c_read@DATA,f
  2244     044E  2C51               	goto	l1359
  2245     044F                     l1357:
  2246     044F  3574               	lslf	i2c_read@DATA,w
  2247     0450  00F4               	movwf	i2c_read@DATA
  2248     0451                     l1359:
  2249                           
  2250                           ;tv_i2c.c: 50:         LATC1=0;
  2251     0451  0022               	movlb	2	; select bank2
  2252     0452  108E               	bcf	14,1	;volatile
  2253     0453                     l1361:
  2254                           
  2255                           ;tv_i2c.c: 51:         _delay((unsigned long)((10)*(16000000/4000000.0)));
  2256     0453  300D               	movlw	13
  2257     0454                     u1457:
  2258     0454  0B89               	decfsz	9,f
  2259     0455  2C54               	goto	u1457
  2260     0456  0000               	nop
  2261     0457                     l1363:
  2262                           
  2263                           ;tv_i2c.c: 52:     }
  2264     0457  3001               	movlw	1
  2265     0458  00F1               	movwf	??_i2c_read
  2266     0459  0871               	movf	??_i2c_read,w
  2267     045A  07F3               	addwf	i2c_read@i,f
  2268     045B  3008               	movlw	8
  2269     045C  0273               	subwf	i2c_read@i,w
  2270     045D  1C03               	skipc
  2271     045E  2C60               	goto	u731
  2272     045F  2C61               	goto	u730
  2273     0460                     u731:
  2274     0460  2C45               	goto	l149
  2275     0461                     u730:
  2276     0461                     l150:
  2277                           
  2278                           ;tv_i2c.c: 53:     TRISC2=0;
  2279     0461  0021               	movlb	1	; select bank1
  2280     0462  110E               	bcf	14,2	;volatile
  2281     0463                     l1365:
  2282                           
  2283                           ;tv_i2c.c: 54:     if (ACK == 1) LATC2 = 0;
  2284     0463  0372               	decf	i2c_read@ACK,w
  2285     0464  1D03               	btfss	3,2
  2286     0465  2C67               	goto	u741
  2287     0466  2C68               	goto	u740
  2288     0467                     u741:
  2289     0467  2C6B               	goto	l153
  2290     0468                     u740:
  2291     0468                     l1367:
  2292     0468  0022               	movlb	2	; select bank2
  2293     0469  110E               	bcf	14,2	;volatile
  2294     046A  2C6D               	goto	l154
  2295     046B                     l153:	
  2296                           ;tv_i2c.c: 55:     else LATC2 = 1;
  2297                           
  2298     046B  0022               	movlb	2	; select bank2
  2299     046C  150E               	bsf	14,2	;volatile
  2300     046D                     l154:
  2301                           
  2302                           ;tv_i2c.c: 56:     LATC1=1;
  2303     046D  148E               	bsf	14,1	;volatile
  2304                           
  2305                           ;tv_i2c.c: 57:     LATC1=0;
  2306     046E  108E               	bcf	14,1	;volatile
  2307     046F                     l1369:
  2308                           
  2309                           ;tv_i2c.c: 58:     return DATA;
  2310     046F  0874               	movf	i2c_read@DATA,w
  2311     0470                     l155:
  2312     0470  0008               	return
  2313     0471                     __end_of_i2c_read:
  2314                           
  2315                           	psect	text3
  2316     0408                     __ptext3:	
  2317 ;; *************** function ___lwmod *****************
  2318 ;; Defined at:
  2319 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwmod.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  divisor         2    0[BANK0 ] unsigned int 
  2322 ;;  dividend        2    2[BANK0 ] unsigned int 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  counter         1   10[COMMON] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  2    0[BANK0 ] unsigned int 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2334 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;Total ram usage:        6 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 2
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348     0408                     ___lwmod:	
  2349                           ;psect for function ___lwmod
  2350                           
  2351     0408                     l1757:	
  2352                           ;incstack = 0
  2353                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2354                           
  2355     0408  0020               	movlb	0	; select bank0
  2356     0409  0844               	movf	___lwmod@divisor,w
  2357     040A  0445               	iorwf	___lwmod@divisor+1,w
  2358     040B  1903               	btfsc	3,2
  2359     040C  2C0E               	goto	u1351
  2360     040D  2C0F               	goto	u1350
  2361     040E                     u1351:
  2362     040E  2C38               	goto	l1775
  2363     040F                     u1350:
  2364     040F                     l1759:
  2365     040F  01FA               	clrf	___lwmod@counter
  2366     0410  0AFA               	incf	___lwmod@counter,f
  2367     0411  2C1B               	goto	l1765
  2368     0412                     l1761:
  2369     0412  3001               	movlw	1
  2370     0413                     u1365:
  2371     0413  35C4               	lslf	___lwmod@divisor,f
  2372     0414  0DC5               	rlf	___lwmod@divisor+1,f
  2373     0415  0B89               	decfsz	9,f
  2374     0416  2C13               	goto	u1365
  2375     0417                     l1763:
  2376     0417  3001               	movlw	1
  2377     0418  00F9               	movwf	??___lwmod
  2378     0419  0879               	movf	??___lwmod,w
  2379     041A  07FA               	addwf	___lwmod@counter,f
  2380     041B                     l1765:
  2381     041B  1FC5               	btfss	___lwmod@divisor+1,7
  2382     041C  2C1E               	goto	u1371
  2383     041D  2C1F               	goto	u1370
  2384     041E                     u1371:
  2385     041E  2C12               	goto	l1761
  2386     041F                     u1370:
  2387     041F                     l1767:
  2388     041F  0845               	movf	___lwmod@divisor+1,w
  2389     0420  0247               	subwf	___lwmod@dividend+1,w
  2390     0421  1D03               	skipz
  2391     0422  2C25               	goto	u1385
  2392     0423  0844               	movf	___lwmod@divisor,w
  2393     0424  0246               	subwf	___lwmod@dividend,w
  2394     0425                     u1385:
  2395     0425  1C03               	skipc
  2396     0426  2C28               	goto	u1381
  2397     0427  2C29               	goto	u1380
  2398     0428                     u1381:
  2399     0428  2C2D               	goto	l1771
  2400     0429                     u1380:
  2401     0429                     l1769:
  2402     0429  0844               	movf	___lwmod@divisor,w
  2403     042A  02C6               	subwf	___lwmod@dividend,f
  2404     042B  0845               	movf	___lwmod@divisor+1,w
  2405     042C  3BC7               	subwfb	___lwmod@dividend+1,f
  2406     042D                     l1771:
  2407     042D  3001               	movlw	1
  2408     042E                     u1395:
  2409     042E  36C5               	lsrf	___lwmod@divisor+1,f
  2410     042F  0CC4               	rrf	___lwmod@divisor,f
  2411     0430  0B89               	decfsz	9,f
  2412     0431  2C2E               	goto	u1395
  2413     0432                     l1773:
  2414     0432  3001               	movlw	1
  2415     0433  02FA               	subwf	___lwmod@counter,f
  2416     0434  1D03               	btfss	3,2
  2417     0435  2C37               	goto	u1401
  2418     0436  2C38               	goto	u1400
  2419     0437                     u1401:
  2420     0437  2C1F               	goto	l1767
  2421     0438                     u1400:
  2422     0438                     l1775:
  2423     0438  0847               	movf	___lwmod@dividend+1,w
  2424     0439  00C5               	movwf	?___lwmod+1
  2425     043A  0846               	movf	___lwmod@dividend,w
  2426     043B  00C4               	movwf	?___lwmod
  2427     043C                     l701:
  2428     043C  0008               	return
  2429     043D                     __end_of___lwmod:
  2430                           
  2431                           	psect	text4
  2432     03CC                     __ptext4:	
  2433 ;; *************** function ___lwdiv *****************
  2434 ;; Defined at:
  2435 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\lwdiv.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  divisor         2    1[COMMON] unsigned int 
  2438 ;;  dividend        2    3[COMMON] unsigned int 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  quotient        2    6[COMMON] unsigned int 
  2441 ;;  counter         1    8[COMMON] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2    1[COMMON] unsigned int 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2452 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;Total ram usage:        8 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     03CC                     ___lwdiv:	
  2466                           ;psect for function ___lwdiv
  2467                           
  2468     03CC                     l1505:	
  2469                           ;incstack = 0
  2470                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2471                           
  2472     03CC  01F6               	clrf	___lwdiv@quotient
  2473     03CD  01F7               	clrf	___lwdiv@quotient+1
  2474     03CE                     l1507:
  2475     03CE  0871               	movf	___lwdiv@divisor,w
  2476     03CF  0472               	iorwf	___lwdiv@divisor+1,w
  2477     03D0  1903               	btfsc	3,2
  2478     03D1  2BD3               	goto	u971
  2479     03D2  2BD4               	goto	u970
  2480     03D3                     u971:
  2481     03D3  2C03               	goto	l1527
  2482     03D4                     u970:
  2483     03D4                     l1509:
  2484     03D4  01F8               	clrf	___lwdiv@counter
  2485     03D5  0AF8               	incf	___lwdiv@counter,f
  2486     03D6  2BE0               	goto	l1515
  2487     03D7                     l1511:
  2488     03D7  3001               	movlw	1
  2489     03D8                     u985:
  2490     03D8  35F1               	lslf	___lwdiv@divisor,f
  2491     03D9  0DF2               	rlf	___lwdiv@divisor+1,f
  2492     03DA  0B89               	decfsz	9,f
  2493     03DB  2BD8               	goto	u985
  2494     03DC                     l1513:
  2495     03DC  3001               	movlw	1
  2496     03DD  00F5               	movwf	??___lwdiv
  2497     03DE  0875               	movf	??___lwdiv,w
  2498     03DF  07F8               	addwf	___lwdiv@counter,f
  2499     03E0                     l1515:
  2500     03E0  1FF2               	btfss	___lwdiv@divisor+1,7
  2501     03E1  2BE3               	goto	u991
  2502     03E2  2BE4               	goto	u990
  2503     03E3                     u991:
  2504     03E3  2BD7               	goto	l1511
  2505     03E4                     u990:
  2506     03E4                     l1517:
  2507     03E4  3001               	movlw	1
  2508     03E5                     u1005:
  2509     03E5  35F6               	lslf	___lwdiv@quotient,f
  2510     03E6  0DF7               	rlf	___lwdiv@quotient+1,f
  2511     03E7  0B89               	decfsz	9,f
  2512     03E8  2BE5               	goto	u1005
  2513     03E9  0872               	movf	___lwdiv@divisor+1,w
  2514     03EA  0274               	subwf	___lwdiv@dividend+1,w
  2515     03EB  1D03               	skipz
  2516     03EC  2BEF               	goto	u1015
  2517     03ED  0871               	movf	___lwdiv@divisor,w
  2518     03EE  0273               	subwf	___lwdiv@dividend,w
  2519     03EF                     u1015:
  2520     03EF  1C03               	skipc
  2521     03F0  2BF2               	goto	u1011
  2522     03F1  2BF3               	goto	u1010
  2523     03F2                     u1011:
  2524     03F2  2BF8               	goto	l1523
  2525     03F3                     u1010:
  2526     03F3                     l1519:
  2527     03F3  0871               	movf	___lwdiv@divisor,w
  2528     03F4  02F3               	subwf	___lwdiv@dividend,f
  2529     03F5  0872               	movf	___lwdiv@divisor+1,w
  2530     03F6  3BF4               	subwfb	___lwdiv@dividend+1,f
  2531     03F7                     l1521:
  2532     03F7  1476               	bsf	___lwdiv@quotient,0
  2533     03F8                     l1523:
  2534     03F8  3001               	movlw	1
  2535     03F9                     u1025:
  2536     03F9  36F2               	lsrf	___lwdiv@divisor+1,f
  2537     03FA  0CF1               	rrf	___lwdiv@divisor,f
  2538     03FB  0B89               	decfsz	9,f
  2539     03FC  2BF9               	goto	u1025
  2540     03FD                     l1525:
  2541     03FD  3001               	movlw	1
  2542     03FE  02F8               	subwf	___lwdiv@counter,f
  2543     03FF  1D03               	btfss	3,2
  2544     0400  2C02               	goto	u1031
  2545     0401  2C03               	goto	u1030
  2546     0402                     u1031:
  2547     0402  2BE4               	goto	l1517
  2548     0403                     u1030:
  2549     0403                     l1527:
  2550     0403  0877               	movf	___lwdiv@quotient+1,w
  2551     0404  00F2               	movwf	?___lwdiv+1
  2552     0405  0876               	movf	___lwdiv@quotient,w
  2553     0406  00F1               	movwf	?___lwdiv
  2554     0407                     l691:
  2555     0407  0008               	return
  2556     0408                     __end_of___lwdiv:
  2557                           
  2558                           	psect	text5
  2559     0381                     __ptext5:	
  2560 ;; *************** function ___llmod *****************
  2561 ;; Defined at:
  2562 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\llmod.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  divisor         4    5[BANK0 ] unsigned long 
  2565 ;;  dividend        4    9[BANK0 ] unsigned long 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  counter         1   11[COMMON] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  4    5[BANK0 ] unsigned long 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2577 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;Total ram usage:       10 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 2
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591     0381                     ___llmod:	
  2592                           ;psect for function ___llmod
  2593                           
  2594     0381                     l1485:	
  2595                           ;incstack = 0
  2596                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2597                           
  2598     0381  0020               	movlb	0	; select bank0
  2599     0382  084C               	movf	___llmod@divisor+3,w
  2600     0383  044B               	iorwf	___llmod@divisor+2,w
  2601     0384  044A               	iorwf	___llmod@divisor+1,w
  2602     0385  0449               	iorwf	___llmod@divisor,w
  2603     0386  1903               	skipnz
  2604     0387  2B89               	goto	u911
  2605     0388  2B8A               	goto	u910
  2606     0389                     u911:
  2607     0389  2BC3               	goto	l1501
  2608     038A                     u910:
  2609     038A                     l1487:
  2610     038A  01FB               	clrf	___llmod@counter
  2611     038B  0AFB               	incf	___llmod@counter,f
  2612     038C  2B98               	goto	l1491
  2613     038D                     l1489:
  2614     038D  3001               	movlw	1
  2615     038E                     u925:
  2616     038E  35C9               	lslf	___llmod@divisor,f
  2617     038F  0DCA               	rlf	___llmod@divisor+1,f
  2618     0390  0DCB               	rlf	___llmod@divisor+2,f
  2619     0391  0DCC               	rlf	___llmod@divisor+3,f
  2620     0392  0B89               	decfsz	9,f
  2621     0393  2B8E               	goto	u925
  2622     0394  3001               	movlw	1
  2623     0395  00FA               	movwf	??___llmod
  2624     0396  087A               	movf	??___llmod,w
  2625     0397  07FB               	addwf	___llmod@counter,f
  2626     0398                     l1491:
  2627     0398  1FCC               	btfss	___llmod@divisor+3,7
  2628     0399  2B9B               	goto	u931
  2629     039A  2B9C               	goto	u930
  2630     039B                     u931:
  2631     039B  2B8D               	goto	l1489
  2632     039C                     u930:
  2633     039C                     l1493:
  2634     039C  084C               	movf	___llmod@divisor+3,w
  2635     039D  0250               	subwf	___llmod@dividend+3,w
  2636     039E  1D03               	skipz
  2637     039F  2BAA               	goto	u945
  2638     03A0  084B               	movf	___llmod@divisor+2,w
  2639     03A1  024F               	subwf	___llmod@dividend+2,w
  2640     03A2  1D03               	skipz
  2641     03A3  2BAA               	goto	u945
  2642     03A4  084A               	movf	___llmod@divisor+1,w
  2643     03A5  024E               	subwf	___llmod@dividend+1,w
  2644     03A6  1D03               	skipz
  2645     03A7  2BAA               	goto	u945
  2646     03A8  0849               	movf	___llmod@divisor,w
  2647     03A9  024D               	subwf	___llmod@dividend,w
  2648     03AA                     u945:
  2649     03AA  1C03               	skipc
  2650     03AB  2BAD               	goto	u941
  2651     03AC  2BAE               	goto	u940
  2652     03AD                     u941:
  2653     03AD  2BB6               	goto	l1497
  2654     03AE                     u940:
  2655     03AE                     l1495:
  2656     03AE  0849               	movf	___llmod@divisor,w
  2657     03AF  02CD               	subwf	___llmod@dividend,f
  2658     03B0  084A               	movf	___llmod@divisor+1,w
  2659     03B1  3BCE               	subwfb	___llmod@dividend+1,f
  2660     03B2  084B               	movf	___llmod@divisor+2,w
  2661     03B3  3BCF               	subwfb	___llmod@dividend+2,f
  2662     03B4  084C               	movf	___llmod@divisor+3,w
  2663     03B5  3BD0               	subwfb	___llmod@dividend+3,f
  2664     03B6                     l1497:
  2665     03B6  3001               	movlw	1
  2666     03B7                     u955:
  2667     03B7  36CC               	lsrf	___llmod@divisor+3,f
  2668     03B8  0CCB               	rrf	___llmod@divisor+2,f
  2669     03B9  0CCA               	rrf	___llmod@divisor+1,f
  2670     03BA  0CC9               	rrf	___llmod@divisor,f
  2671     03BB  0B89               	decfsz	9,f
  2672     03BC  2BB7               	goto	u955
  2673     03BD                     l1499:
  2674     03BD  3001               	movlw	1
  2675     03BE  02FB               	subwf	___llmod@counter,f
  2676     03BF  1D03               	btfss	3,2
  2677     03C0  2BC2               	goto	u961
  2678     03C1  2BC3               	goto	u960
  2679     03C2                     u961:
  2680     03C2  2B9C               	goto	l1493
  2681     03C3                     u960:
  2682     03C3                     l1501:
  2683     03C3  0850               	movf	___llmod@dividend+3,w
  2684     03C4  00CC               	movwf	?___llmod+3
  2685     03C5  084F               	movf	___llmod@dividend+2,w
  2686     03C6  00CB               	movwf	?___llmod+2
  2687     03C7  084E               	movf	___llmod@dividend+1,w
  2688     03C8  00CA               	movwf	?___llmod+1
  2689     03C9  084D               	movf	___llmod@dividend,w
  2690     03CA  00C9               	movwf	?___llmod
  2691     03CB                     l641:
  2692     03CB  0008               	return
  2693     03CC                     __end_of___llmod:
  2694                           
  2695                           	psect	text6
  2696     0326                     __ptext6:	
  2697 ;; *************** function ___lldiv *****************
  2698 ;; Defined at:
  2699 ;;		line 5 in file "D:\Microchip\xc8\pic\sources\c99\common\__lldiv.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  divisor         4    1[COMMON] unsigned long 
  2702 ;;  dividend        4    5[COMMON] unsigned long 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  quotient        4    0[BANK0 ] unsigned long 
  2705 ;;  counter         1    4[BANK0 ] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  4    1[COMMON] unsigned long 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2715 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2719 ;;Total ram usage:       14 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 2
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729     0326                     ___lldiv:	
  2730                           ;psect for function ___lldiv
  2731                           
  2732     0326                     l1461:	
  2733                           ;incstack = 0
  2734                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2735                           
  2736     0326  3000               	movlw	0
  2737     0327  0020               	movlb	0	; select bank0
  2738     0328  00C7               	movwf	___lldiv@quotient+3
  2739     0329  3000               	movlw	0
  2740     032A  00C6               	movwf	___lldiv@quotient+2
  2741     032B  3000               	movlw	0
  2742     032C  00C5               	movwf	___lldiv@quotient+1
  2743     032D  3000               	movlw	0
  2744     032E  00C4               	movwf	___lldiv@quotient
  2745     032F  0874               	movf	___lldiv@divisor+3,w
  2746     0330  0473               	iorwf	___lldiv@divisor+2,w
  2747     0331  0472               	iorwf	___lldiv@divisor+1,w
  2748     0332  0471               	iorwf	___lldiv@divisor,w
  2749     0333  1903               	skipnz
  2750     0334  2B36               	goto	u841
  2751     0335  2B37               	goto	u840
  2752     0336                     u841:
  2753     0336  2B78               	goto	l1481
  2754     0337                     u840:
  2755     0337                     l1463:
  2756     0337  01C8               	clrf	___lldiv@counter
  2757     0338  0AC8               	incf	___lldiv@counter,f
  2758     0339  2B45               	goto	l1467
  2759     033A                     l1465:
  2760     033A  3001               	movlw	1
  2761     033B                     u855:
  2762     033B  35F1               	lslf	___lldiv@divisor,f
  2763     033C  0DF2               	rlf	___lldiv@divisor+1,f
  2764     033D  0DF3               	rlf	___lldiv@divisor+2,f
  2765     033E  0DF4               	rlf	___lldiv@divisor+3,f
  2766     033F  0B89               	decfsz	9,f
  2767     0340  2B3B               	goto	u855
  2768     0341  3001               	movlw	1
  2769     0342  00F9               	movwf	??___lldiv
  2770     0343  0879               	movf	??___lldiv,w
  2771     0344  07C8               	addwf	___lldiv@counter,f
  2772     0345                     l1467:
  2773     0345  1FF4               	btfss	___lldiv@divisor+3,7
  2774     0346  2B48               	goto	u861
  2775     0347  2B49               	goto	u860
  2776     0348                     u861:
  2777     0348  2B3A               	goto	l1465
  2778     0349                     u860:
  2779     0349                     l1469:
  2780     0349  3001               	movlw	1
  2781     034A                     u875:
  2782     034A  35C4               	lslf	___lldiv@quotient,f
  2783     034B  0DC5               	rlf	___lldiv@quotient+1,f
  2784     034C  0DC6               	rlf	___lldiv@quotient+2,f
  2785     034D  0DC7               	rlf	___lldiv@quotient+3,f
  2786     034E  0B89               	decfsz	9,f
  2787     034F  2B4A               	goto	u875
  2788     0350                     l1471:
  2789     0350  0874               	movf	___lldiv@divisor+3,w
  2790     0351  0278               	subwf	___lldiv@dividend+3,w
  2791     0352  1D03               	skipz
  2792     0353  2B5E               	goto	u885
  2793     0354  0873               	movf	___lldiv@divisor+2,w
  2794     0355  0277               	subwf	___lldiv@dividend+2,w
  2795     0356  1D03               	skipz
  2796     0357  2B5E               	goto	u885
  2797     0358  0872               	movf	___lldiv@divisor+1,w
  2798     0359  0276               	subwf	___lldiv@dividend+1,w
  2799     035A  1D03               	skipz
  2800     035B  2B5E               	goto	u885
  2801     035C  0871               	movf	___lldiv@divisor,w
  2802     035D  0275               	subwf	___lldiv@dividend,w
  2803     035E                     u885:
  2804     035E  1C03               	skipc
  2805     035F  2B61               	goto	u881
  2806     0360  2B62               	goto	u880
  2807     0361                     u881:
  2808     0361  2B6B               	goto	l1477
  2809     0362                     u880:
  2810     0362                     l1473:
  2811     0362  0871               	movf	___lldiv@divisor,w
  2812     0363  02F5               	subwf	___lldiv@dividend,f
  2813     0364  0872               	movf	___lldiv@divisor+1,w
  2814     0365  3BF6               	subwfb	___lldiv@dividend+1,f
  2815     0366  0873               	movf	___lldiv@divisor+2,w
  2816     0367  3BF7               	subwfb	___lldiv@dividend+2,f
  2817     0368  0874               	movf	___lldiv@divisor+3,w
  2818     0369  3BF8               	subwfb	___lldiv@dividend+3,f
  2819     036A                     l1475:
  2820     036A  1444               	bsf	___lldiv@quotient,0
  2821     036B                     l1477:
  2822     036B  3001               	movlw	1
  2823     036C                     u895:
  2824     036C  36F4               	lsrf	___lldiv@divisor+3,f
  2825     036D  0CF3               	rrf	___lldiv@divisor+2,f
  2826     036E  0CF2               	rrf	___lldiv@divisor+1,f
  2827     036F  0CF1               	rrf	___lldiv@divisor,f
  2828     0370  0B89               	decfsz	9,f
  2829     0371  2B6C               	goto	u895
  2830     0372                     l1479:
  2831     0372  3001               	movlw	1
  2832     0373  02C8               	subwf	___lldiv@counter,f
  2833     0374  1D03               	btfss	3,2
  2834     0375  2B77               	goto	u901
  2835     0376  2B78               	goto	u900
  2836     0377                     u901:
  2837     0377  2B49               	goto	l1469
  2838     0378                     u900:
  2839     0378                     l1481:
  2840     0378  0847               	movf	___lldiv@quotient+3,w
  2841     0379  00F4               	movwf	?___lldiv+3
  2842     037A  0846               	movf	___lldiv@quotient+2,w
  2843     037B  00F3               	movwf	?___lldiv+2
  2844     037C  0845               	movf	___lldiv@quotient+1,w
  2845     037D  00F2               	movwf	?___lldiv+1
  2846     037E  0844               	movf	___lldiv@quotient,w
  2847     037F  00F1               	movwf	?___lldiv
  2848     0380                     l447:
  2849     0380  0008               	return
  2850     0381                     __end_of___lldiv:
  2851                           
  2852                           	psect	text7
  2853     0498                     __ptext7:	
  2854 ;; *************** function _USART_TransmitString *****************
  2855 ;; Defined at:
  2856 ;;		line 23 in file "tv_uart.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  out             1    wreg     PTR unsigned char 
  2859 ;;		 -> bf_tx(20), 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  out             1    3[COMMON] PTR unsigned char 
  2862 ;;		 -> bf_tx(20), 
  2863 ;;  i               1    4[COMMON] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;Total ram usage:        3 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 3
  2880 ;; This function calls:
  2881 ;;		_USART_TransmitChar
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887     0498                     _USART_TransmitString:	
  2888                           ;psect for function _USART_TransmitString
  2889                           
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in _USART_TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2893                           ;USART_TransmitString@out stored from wreg
  2894     0498  00F3               	movwf	USART_TransmitString@out
  2895     0499                     l1435:
  2896                           
  2897                           ;tv_uart.c: 24:     for (unsigned char i = 0; i < 17; i++) {
  2898     0499  01F4               	clrf	USART_TransmitString@i
  2899     049A                     l1441:
  2900                           
  2901                           ;tv_uart.c: 25:         USART_TransmitChar(out[i]);
  2902     049A  0874               	movf	USART_TransmitString@i,w
  2903     049B  0773               	addwf	USART_TransmitString@out,w
  2904     049C  00F2               	movwf	??_USART_TransmitString
  2905     049D  0872               	movf	??_USART_TransmitString,w
  2906     049E  0086               	movwf	6
  2907     049F  0187               	clrf	7
  2908     04A0  0801               	movf	1,w
  2909     04A1  3184  24D1  3184   	fcall	_USART_TransmitChar
  2910     04A4                     l1443:
  2911                           
  2912                           ;tv_uart.c: 26:     }
  2913     04A4  3001               	movlw	1
  2914     04A5  00F2               	movwf	??_USART_TransmitString
  2915     04A6  0872               	movf	??_USART_TransmitString,w
  2916     04A7  07F4               	addwf	USART_TransmitString@i,f
  2917     04A8                     l1445:
  2918     04A8  3011               	movlw	17
  2919     04A9  0274               	subwf	USART_TransmitString@i,w
  2920     04AA  1C03               	skipc
  2921     04AB  2CAD               	goto	u811
  2922     04AC  2CAE               	goto	u810
  2923     04AD                     u811:
  2924     04AD  2C9A               	goto	l1441
  2925     04AE                     u810:
  2926     04AE                     l244:
  2927     04AE  0008               	return
  2928     04AF                     __end_of_USART_TransmitString:
  2929                           
  2930                           	psect	text8
  2931     04D1                     __ptext8:	
  2932 ;; *************** function _USART_TransmitChar *****************
  2933 ;; Defined at:
  2934 ;;		line 18 in file "tv_uart.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  out             1    wreg     unsigned char 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  out             1    1[COMMON] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;Total ram usage:        1 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 2
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_USART_TransmitString
  2959 ;;		_putch
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963     04D1                     _USART_TransmitChar:	
  2964                           ;psect for function _USART_TransmitChar
  2965                           
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _USART_TransmitChar: [wreg]
  2969                           ;USART_TransmitChar@out stored from wreg
  2970     04D1  00F1               	movwf	USART_TransmitChar@out
  2971     04D2                     l1325:
  2972     04D2                     l236:	
  2973                           ;tv_uart.c: 19:     while (TXIF == 0);
  2974                           
  2975     04D2  0020               	movlb	0	; select bank0
  2976     04D3  1E11               	btfss	17,4	;volatile
  2977     04D4  2CD6               	goto	u681
  2978     04D5  2CD7               	goto	u680
  2979     04D6                     u681:
  2980     04D6  2CD2               	goto	l236
  2981     04D7                     u680:
  2982     04D7                     l1327:
  2983                           
  2984                           ;tv_uart.c: 20:     TXREG = out;
  2985     04D7  0871               	movf	USART_TransmitChar@out,w
  2986     04D8  0023               	movlb	3	; select bank3
  2987     04D9  009A               	movwf	26	;volatile
  2988     04DA                     l239:
  2989     04DA  0008               	return
  2990     04DB                     __end_of_USART_TransmitChar:
  2991                           
  2992                           	psect	text9
  2993     04AF                     __ptext9:	
  2994 ;; *************** function _USART_Init *****************
  2995 ;; Defined at:
  2996 ;;		line 5 in file "tv_uart.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024     04AF                     _USART_Init:	
  3025                           ;psect for function _USART_Init
  3026                           
  3027     04AF                     l1415:	
  3028                           ;incstack = 0
  3029                           ; Regs used in _USART_Init: [wreg]
  3030                           
  3031                           
  3032                           ;tv_uart.c: 6:     TRISC4 = 0;
  3033     04AF  0021               	movlb	1	; select bank1
  3034     04B0  120E               	bcf	14,4	;volatile
  3035                           
  3036                           ;tv_uart.c: 7:     TRISC5 = 1;
  3037     04B1  168E               	bsf	14,5	;volatile
  3038                           
  3039                           ;tv_uart.c: 8:     SPBRG = 34;
  3040     04B2  3000               	movlw	0
  3041     04B3  0023               	movlb	3	; select bank3
  3042     04B4  009C               	movwf	28	;volatile
  3043     04B5  3022               	movlw	34
  3044     04B6  009B               	movwf	27	;volatile
  3045     04B7                     l1417:
  3046                           
  3047                           ;tv_uart.c: 9:     TXSTA = 0x20;
  3048     04B7  3020               	movlw	32
  3049     04B8  009E               	movwf	30	;volatile
  3050                           
  3051                           ;tv_uart.c: 10:     RCSTA = 0x90;
  3052     04B9  3090               	movlw	144
  3053     04BA  009D               	movwf	29	;volatile
  3054     04BB                     l1419:
  3055                           
  3056                           ;tv_uart.c: 11:     BRG16 = 1;
  3057     04BB  159F               	bsf	31,3	;volatile
  3058     04BC                     l1421:
  3059                           
  3060                           ;tv_uart.c: 12:     BRGH = 1;
  3061     04BC  151E               	bsf	30,2	;volatile
  3062     04BD                     l1423:
  3063                           
  3064                           ;tv_uart.c: 13:     INTCONbits.GIE = 1;
  3065     04BD  178B               	bsf	11,7	;volatile
  3066     04BE                     l1425:
  3067                           
  3068                           ;tv_uart.c: 14:     INTCONbits.PEIE = 1;
  3069     04BE  170B               	bsf	11,6	;volatile
  3070     04BF                     l1427:
  3071                           
  3072                           ;tv_uart.c: 15:     PIE1bits.RCIE = 1;
  3073     04BF  0021               	movlb	1	; select bank1
  3074     04C0  1691               	bsf	17,5	;volatile
  3075     04C1                     l233:
  3076     04C1  0008               	return
  3077     04C2                     __end_of_USART_Init:
  3078                           
  3079                           	psect	text10
  3080     04C2                     __ptext10:	
  3081 ;; *************** function _Cmd_Aht10 *****************
  3082 ;; Defined at:
  3083 ;;		line 4 in file "tv_aht10.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 3
  3104 ;; This function calls:
  3105 ;;		_i2c_start
  3106 ;;		_i2c_stop
  3107 ;;		_i2c_write
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113     04C2                     _Cmd_Aht10:	
  3114                           ;psect for function _Cmd_Aht10
  3115                           
  3116     04C2                     l1429:	
  3117                           ;incstack = 0
  3118                           ; Regs used in _Cmd_Aht10: [wreg+status,2+status,0+pclath+cstack]
  3119                           
  3120                           
  3121                           ;tv_aht10.c: 5:     i2c_start();
  3122     04C2  3184  24E4  3184   	fcall	_i2c_start
  3123     04C5                     l1431:
  3124                           
  3125                           ;tv_aht10.c: 6:     i2c_write(0x70);
  3126     04C5  3070               	movlw	112
  3127     04C6  3184  2471  3184   	fcall	_i2c_write
  3128     04C9                     l1433:
  3129                           
  3130                           ;tv_aht10.c: 7:     i2c_write(0xac);
  3131     04C9  30AC               	movlw	172
  3132     04CA  3184  2471  3184   	fcall	_i2c_write
  3133                           
  3134                           ;tv_aht10.c: 10:     i2c_stop();
  3135     04CD  3184  24DB  3184   	fcall	_i2c_stop
  3136     04D0                     l113:
  3137     04D0  0008               	return
  3138     04D1                     __end_of_Cmd_Aht10:
  3139                           
  3140                           	psect	text11
  3141     0471                     __ptext11:	
  3142 ;; *************** function _i2c_write *****************
  3143 ;; Defined at:
  3144 ;;		line 23 in file "tv_i2c.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  DATA            1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  DATA            1    3[COMMON] unsigned char 
  3149 ;;  i               1    4[COMMON] unsigned char 
  3150 ;;  j               1    0        unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;Total ram usage:        4 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 2
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_read_temp
  3171 ;;		_Cmd_Aht10
  3172 ;;		_READ_T_H_AHT10
  3173 ;;		_SEND_TO_LCD_I2C
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177     0471                     _i2c_write:	
  3178                           ;psect for function _i2c_write
  3179                           
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  3183                           ;i2c_write@DATA stored from wreg
  3184     0471  00F3               	movwf	i2c_write@DATA
  3185     0472                     l1331:
  3186                           
  3187                           ;tv_i2c.c: 23: void i2c_write(unsigned char DATA);tv_i2c.c: 24: {;tv_i2c.c: 25:     unsi
      +                          gned char i,j;;tv_i2c.c: 26:     TRISC2=0;
  3188     0472  0021               	movlb	1	; select bank1
  3189     0473  110E               	bcf	14,2	;volatile
  3190                           
  3191                           ;tv_i2c.c: 27:     TRISC1=0;
  3192     0474  108E               	bcf	14,1	;volatile
  3193     0475                     l1333:
  3194                           
  3195                           ;tv_i2c.c: 28:     for(i=0;i<=8;i++)
  3196     0475  01F4               	clrf	i2c_write@i
  3197     0476                     l1339:
  3198                           
  3199                           ;tv_i2c.c: 29:     {;tv_i2c.c: 30:         if((DATA<<i) & 0x80) LATC2=1;
  3200     0476  0873               	movf	i2c_write@DATA,w
  3201     0477  00F1               	movwf	??_i2c_write
  3202     0478  01F2               	clrf	??_i2c_write+1
  3203     0479  0A74               	incf	i2c_write@i,w
  3204     047A  2C7D               	goto	u694
  3205     047B                     u695:
  3206     047B  35F1               	lslf	??_i2c_write,f
  3207     047C  0DF2               	rlf	??_i2c_write+1,f
  3208     047D                     u694:
  3209     047D  0B89               	decfsz	9,f
  3210     047E  2C7B               	goto	u695
  3211     047F  1FF1               	btfss	??_i2c_write,7
  3212     0480  2C82               	goto	u701
  3213     0481  2C83               	goto	u700
  3214     0482                     u701:
  3215     0482  2C86               	goto	l144
  3216     0483                     u700:
  3217     0483                     l1341:
  3218     0483  0022               	movlb	2	; select bank2
  3219     0484  150E               	bsf	14,2	;volatile
  3220     0485  2C88               	goto	l145
  3221     0486                     l144:	
  3222                           ;tv_i2c.c: 31:         else LATC2=0;
  3223                           
  3224     0486  0022               	movlb	2	; select bank2
  3225     0487  110E               	bcf	14,2	;volatile
  3226     0488                     l145:
  3227                           
  3228                           ;tv_i2c.c: 32:         LATC1=1;
  3229     0488  148E               	bsf	14,1	;volatile
  3230                           
  3231                           ;tv_i2c.c: 34:         _delay((unsigned long)((1)*(16000000/4000000.0)));
  3232     0489  3200               	nop2	;2 cycle nop
  3233     048A  3200               	nop2	;2 cycle nop
  3234                           
  3235                           ;tv_i2c.c: 35:         LATC1=0;
  3236     048B  0022               	movlb	2	; select bank2
  3237     048C  108E               	bcf	14,1	;volatile
  3238     048D                     l1343:
  3239                           
  3240                           ;tv_i2c.c: 36:     }
  3241     048D  3001               	movlw	1
  3242     048E  00F1               	movwf	??_i2c_write
  3243     048F  0871               	movf	??_i2c_write,w
  3244     0490  07F4               	addwf	i2c_write@i,f
  3245     0491                     l1345:
  3246     0491  3009               	movlw	9
  3247     0492  0274               	subwf	i2c_write@i,w
  3248     0493  1C03               	skipc
  3249     0494  2C96               	goto	u711
  3250     0495  2C97               	goto	u710
  3251     0496                     u711:
  3252     0496  2C76               	goto	l1339
  3253     0497                     u710:
  3254     0497                     l146:
  3255     0497  0008               	return
  3256     0498                     __end_of_i2c_write:
  3257                           
  3258                           	psect	text12
  3259     04DB                     __ptext12:	
  3260 ;; *************** function _i2c_stop *****************
  3261 ;; Defined at:
  3262 ;;		line 13 in file "tv_i2c.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		None
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;Total ram usage:        0 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 2
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_read_temp
  3287 ;;		_Cmd_Aht10
  3288 ;;		_READ_T_H_AHT10
  3289 ;;		_SEND_TO_LCD_I2C
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293     04DB                     _i2c_stop:	
  3294                           ;psect for function _i2c_stop
  3295                           
  3296     04DB                     l1373:	
  3297                           ;incstack = 0
  3298                           ; Regs used in _i2c_stop: []
  3299                           
  3300                           
  3301                           ;tv_i2c.c: 15:     TRISC2 = 0;
  3302     04DB  0021               	movlb	1	; select bank1
  3303     04DC  110E               	bcf	14,2	;volatile
  3304                           
  3305                           ;tv_i2c.c: 16:     TRISC1 = 0;
  3306     04DD  108E               	bcf	14,1	;volatile
  3307                           
  3308                           ;tv_i2c.c: 17:     LATC2 = 0;
  3309     04DE  0022               	movlb	2	; select bank2
  3310     04DF  110E               	bcf	14,2	;volatile
  3311                           
  3312                           ;tv_i2c.c: 18:     LATC1 = 0;
  3313     04E0  108E               	bcf	14,1	;volatile
  3314                           
  3315                           ;tv_i2c.c: 19:     LATC1 = 1;
  3316     04E1  148E               	bsf	14,1	;volatile
  3317                           
  3318                           ;tv_i2c.c: 20:     LATC2 = 1;
  3319     04E2  150E               	bsf	14,2	;volatile
  3320     04E3                     l139:
  3321     04E3  0008               	return
  3322     04E4                     __end_of_i2c_stop:
  3323                           
  3324                           	psect	text13
  3325     04E4                     __ptext13:	
  3326 ;; *************** function _i2c_start *****************
  3327 ;; Defined at:
  3328 ;;		line 3 in file "tv_i2c.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		None
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 2
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_read_temp
  3353 ;;		_Cmd_Aht10
  3354 ;;		_READ_T_H_AHT10
  3355 ;;		_SEND_TO_LCD_I2C
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359     04E4                     _i2c_start:	
  3360                           ;psect for function _i2c_start
  3361                           
  3362     04E4                     l1329:	
  3363                           ;incstack = 0
  3364                           ; Regs used in _i2c_start: []
  3365                           
  3366                           
  3367                           ;tv_i2c.c: 5:     TRISC2 = 0;
  3368     04E4  0021               	movlb	1	; select bank1
  3369     04E5  110E               	bcf	14,2	;volatile
  3370                           
  3371                           ;tv_i2c.c: 6:     TRISC1 = 0;
  3372     04E6  108E               	bcf	14,1	;volatile
  3373                           
  3374                           ;tv_i2c.c: 7:     LATC2 = 1;
  3375     04E7  0022               	movlb	2	; select bank2
  3376     04E8  150E               	bsf	14,2	;volatile
  3377                           
  3378                           ;tv_i2c.c: 8:     LATC1 = 1;
  3379     04E9  148E               	bsf	14,1	;volatile
  3380                           
  3381                           ;tv_i2c.c: 9:     LATC2 = 0;
  3382     04EA  110E               	bcf	14,2	;volatile
  3383                           
  3384                           ;tv_i2c.c: 10:     LATC1 = 0;
  3385     04EB  108E               	bcf	14,1	;volatile
  3386     04EC                     l136:
  3387     04EC  0008               	return
  3388     04ED                     __end_of_i2c_start:
  3389                           
  3390                           	psect	intentry
  3391     0004                     __pintentry:	
  3392 ;; *************** function _ngat_uart *****************
  3393 ;; Defined at:
  3394 ;;		line 107 in file "main.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;Total ram usage:        1 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 1
  3415 ;; This function calls:
  3416 ;;		_USART_ReceiveChar
  3417 ;; This function is called by:
  3418 ;;		Interrupt level 1
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422     0004                     _ngat_uart:
  3423                           
  3424                           ;incstack = 0
  3425     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3426                           
  3427                           ; Regs used in _ngat_uart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3428     0005  3180               	pagesel	$
  3429     0006                     i1l1643:
  3430                           
  3431                           ;main.c: 108:     byte_rx = USART_ReceiveChar();
  3432     0006  3184  24ED  3180   	fcall	_USART_ReceiveChar
  3433     0009  0020               	movlb	0	; select bank0
  3434     000A  00AE               	movwf	_byte_rx	;volatile
  3435     000B                     i1l1645:
  3436                           
  3437                           ;main.c: 109:     if (byte_rx == 'S') {
  3438     000B  3053               	movlw	83
  3439     000C  062E               	xorwf	_byte_rx,w	;volatile
  3440     000D  1D03               	btfss	3,2
  3441     000E  2810               	goto	u114_21
  3442     000F  2811               	goto	u114_20
  3443     0010                     u114_21:
  3444     0010  2814               	goto	i1l1651
  3445     0011                     u114_20:
  3446     0011                     i1l1647:
  3447                           
  3448                           ;main.c: 110:         ena_rx = 1;
  3449     0011  14FC               	bsf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3450     0012                     i1l1649:
  3451                           
  3452                           ;main.c: 111:         rx_index = 0;
  3453     0012  01AD               	clrf	_rx_index	;volatile
  3454                           
  3455                           ;main.c: 112:     } else if (byte_rx != 'P' && ena_rx == 1) {
  3456     0013  2843               	goto	i1l100
  3457     0014                     i1l1651:
  3458     0014  3050               	movlw	80
  3459     0015  062E               	xorwf	_byte_rx,w	;volatile
  3460     0016  1903               	btfsc	3,2
  3461     0017  2819               	goto	u115_21
  3462     0018  281A               	goto	u115_20
  3463     0019                     u115_21:
  3464     0019  2830               	goto	i1l1663
  3465     001A                     u115_20:
  3466     001A                     i1l1653:
  3467     001A  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3468     001B  281D               	goto	u116_21
  3469     001C  281E               	goto	u116_20
  3470     001D                     u116_21:
  3471     001D  2830               	goto	i1l1663
  3472     001E                     u116_20:
  3473     001E                     i1l1655:
  3474                           
  3475                           ;main.c: 113:         bf_rx[rx_index] = byte_rx;
  3476     001E  082D               	movf	_rx_index,w
  3477     001F  3E28               	addlw	(low (_bf_rx| 0))& (0+255)
  3478     0020  0086               	movwf	6
  3479     0021  0187               	clrf	7
  3480     0022  082E               	movf	_byte_rx,w	;volatile
  3481     0023  0081               	movwf	1
  3482     0024                     i1l1657:
  3483                           
  3484                           ;main.c: 114:         rx_index++;
  3485     0024  3001               	movlw	1
  3486     0025  00F0               	movwf	??_ngat_uart
  3487     0026  0870               	movf	??_ngat_uart,w
  3488     0027  07AD               	addwf	_rx_index,f	;volatile
  3489     0028                     i1l1659:
  3490                           
  3491                           ;main.c: 115:         if (rx_index > 1) ena_rx = 0;
  3492     0028  3002               	movlw	2
  3493     0029  022D               	subwf	_rx_index,w	;volatile
  3494     002A  1C03               	skipc
  3495     002B  282D               	goto	u117_21
  3496     002C  282E               	goto	u117_20
  3497     002D                     u117_21:
  3498     002D  2843               	goto	i1l100
  3499     002E                     u117_20:
  3500     002E                     i1l1661:
  3501     002E  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3502     002F  2843               	goto	i1l100
  3503     0030                     i1l1663:
  3504     0030  3050               	movlw	80
  3505     0031  062E               	xorwf	_byte_rx,w	;volatile
  3506     0032  1D03               	btfss	3,2
  3507     0033  2835               	goto	u118_21
  3508     0034  2836               	goto	u118_20
  3509     0035                     u118_21:
  3510     0035  2843               	goto	i1l100
  3511     0036                     u118_20:
  3512     0036                     i1l1665:
  3513     0036  1CFC               	btfss	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3514     0037  2839               	goto	u119_21
  3515     0038  283A               	goto	u119_20
  3516     0039                     u119_21:
  3517     0039  2843               	goto	i1l100
  3518     003A                     u119_20:
  3519     003A                     i1l1667:
  3520                           
  3521                           ;main.c: 117:         if (bf_rx[0] == '1') {
  3522     003A  3031               	movlw	49
  3523     003B  0628               	xorwf	_bf_rx,w
  3524     003C  1D03               	btfss	3,2
  3525     003D  283F               	goto	u120_21
  3526     003E  2840               	goto	u120_20
  3527     003F                     u120_21:
  3528     003F  2843               	goto	i1l97
  3529     0040                     u120_20:
  3530     0040                     i1l1669:
  3531                           
  3532                           ;main.c: 118:             ena_send = 1;
  3533     0040  147C               	bsf	_ena_send/(0+8),_ena_send& (0+7)	;volatile
  3534                           
  3535                           ;main.c: 119:             ena_rx = 0;
  3536     0041  10FC               	bcf	_ena_rx/(0+8),_ena_rx& (0+7)	;volatile
  3537     0042  2843               	goto	i1l100
  3538     0043                     i1l97:
  3539     0043                     i1l100:
  3540     0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3541     0044  0009               	retfie
  3542     0045                     __end_of_ngat_uart:
  3543                           
  3544                           	psect	text15
  3545     04ED                     __ptext15:	
  3546 ;; *************** function _USART_ReceiveChar *****************
  3547 ;; Defined at:
  3548 ;;		line 29 in file "tv_uart.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      unsigned char 
  3555 ;; Registers used:
  3556 ;;		wreg
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_ngat_uart
  3572 ;;		_USART_ReceiveString
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576     04ED                     _USART_ReceiveChar:	
  3577                           ;psect for function _USART_ReceiveChar
  3578                           
  3579     04ED                     i1l1447:	
  3580                           ;incstack = 0
  3581                           ; Regs used in _USART_ReceiveChar: [wreg]
  3582                           
  3583     04ED                     i1l247:	
  3584                           ;tv_uart.c: 34:     };
  3585                           
  3586                           
  3587                           ;tv_uart.c: 33:     while (PIR1bits.RCIF == 0) {
  3588     04ED  0020               	movlb	0	; select bank0
  3589     04EE  1E91               	btfss	17,5	;volatile
  3590     04EF  2CF1               	goto	u82_21
  3591     04F0  2CF2               	goto	u82_20
  3592     04F1                     u82_21:
  3593     04F1  2CED               	goto	i1l247
  3594     04F2                     u82_20:
  3595     04F2                     i1l1449:
  3596                           
  3597                           ;tv_uart.c: 36:     return (RCREG);
  3598     04F2  0023               	movlb	3	; select bank3
  3599     04F3  0819               	movf	25,w	;volatile
  3600     04F4                     i1l250:
  3601     04F4  0008               	return
  3602     04F5                     __end_of_USART_ReceiveChar:
  3603     007E                     btemp	set	126	;btemp
  3604     007E                     int$flags	set	126
  3605     007E                     wtemp0	set	126
  3606                           
  3607                           	psect	config
  3608                           
  3609                           ;Config register CONFIG1 @ 0x8007
  3610                           ;	Oscillator Selection
  3611                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3612                           ;	Watchdog Timer Enable
  3613                           ;	WDTE = OFF, WDT disabled
  3614                           ;	Power-up Timer Enable
  3615                           ;	PWRTE = OFF, PWRT disabled
  3616                           ;	MCLR Pin Function Select
  3617                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3618                           ;	Flash Program Memory Code Protection
  3619                           ;	CP = OFF, Program memory code protection is disabled
  3620                           ;	Data Memory Code Protection
  3621                           ;	CPD = OFF, Data memory code protection is disabled
  3622                           ;	Brown-out Reset Enable
  3623                           ;	BOREN = OFF, Brown-out Reset disabled
  3624                           ;	Clock Out Enable
  3625                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3626                           ;	Internal/External Switchover
  3627                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3628                           ;	Fail-Safe Clock Monitor Enable
  3629                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3630     8007                     	org	32775
  3631     8007  09A4               	dw	2468
  3632                           
  3633                           ;Config register CONFIG2 @ 0x8008
  3634                           ;	Flash Memory Self-Write Protection
  3635                           ;	WRT = OFF, Write protection off
  3636                           ;	PLL Enable
  3637                           ;	PLLEN = OFF, 4x PLL disabled
  3638                           ;	Stack Overflow/Underflow Reset Enable
  3639                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  3640                           ;	Brown-out Reset Voltage Selection
  3641                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3642                           ;	Low-Voltage Programming Enable
  3643                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3644     8008                     	org	32776
  3645     8008  1CFF               	dw	7423

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         36
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     26      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    USART_TransmitString@out	PTR unsigned char  size(1) Largest target is 20
		 -> bf_tx(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->___llmod
    _read_temp->_i2c_read
    _read_temp->_i2c_write
    ___lwmod->___lwdiv
    ___llmod->___lldiv
    _USART_TransmitString->_USART_TransmitChar
    _Cmd_Aht10->_i2c_write

Critical Paths under _ngat_uart in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_read_temp
    ___llmod->___lldiv

Critical Paths under _ngat_uart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ngat_uart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ngat_uart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ngat_uart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ngat_uart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ngat_uart in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ngat_uart in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ngat_uart in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ngat_uart in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ngat_uart in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ngat_uart in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ngat_uart in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ngat_uart in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5338
                                             24 BANK0      2     2      0
                          _Cmd_Aht10
                         _USART_Init
               _USART_TransmitString
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                          _read_temp
 ---------------------------------------------------------------------------------
 (1) _read_temp                                           28    24      4     364
                                              5 COMMON     4     0      4
                                              0 BANK0     24    24      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             4     4      0     136
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    1672
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1074
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8    1071
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     922
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USART_TransmitString                                 3     3      0     145
                                              2 COMMON     3     3      0
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Cmd_Aht10                                            0     0      0      90
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            5     5      0      90
                                              1 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ngat_uart                                            1     1      0       0
                                              0 COMMON     1     1      0
                  _USART_ReceiveChar
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cmd_Aht10
     _i2c_start
     _i2c_stop
     _i2c_write
   _USART_Init
   _USART_TransmitString
     _USART_TransmitChar
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _read_temp
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write

 _ngat_uart (ROOT)
   _USART_ReceiveChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 19 23:54:20 2024

                          l72 031C                            l73 0325                           l113 04D0  
                         l150 0461                           l136 04EC                           l144 0486  
                         l145 0488                           l233 04C1                           l153 046B  
                         l146 0497                           l154 046D                           l139 04E3  
                         l155 0470                           l236 04D2                           l244 04AE  
                         l149 0445                           l239 04DA                           l701 043C  
                         l447 0380                           l641 03CB                           l691 0407  
                         u700 0483                           u701 0482                           u710 0497  
                         u711 0496                           u720 044C                           u800 0313  
                         u721 044B                           u801 0312                           u810 04AE  
                         u730 0461                           u811 04AD                           u731 0460  
                         u900 0378                           u740 0468                           u901 0377  
                         u741 0467                           u910 038A                           u911 0389  
                         u680 04D7                           u840 0337                           u681 04D6  
                         u841 0336                           u930 039C                           u770 02C6  
                         u931 039B                           u860 0349                           u940 03AE  
                         u780 02D9                           u861 0348                           u941 03AD  
                         u925 038E                           u694 047D                           u790 02FC  
                         u695 047B                           u855 033B                           u791 02FB  
                         u775 02C2                           u880 0362                           u960 03C3  
                         u881 0361                           u961 03C2                           u945 03AA  
                         u785 02D5                           u970 03D4                           u875 034A  
                         u955 03B7                           u971 03D3                           u885 035E  
                         u990 03E4                           u895 036C                           u991 03E3  
                         u985 03D8                           _mp2 005E                           _mq2 002B  
                         wreg 0009                          l1401 02B5                          l1331 0472  
                        l1411 0313                          l1403 02B8                          l1341 0483  
                        l1333 0475                          l1421 04BC                          l1325 04D2  
                        l1501 03C3                          l1405 02EF                          l1343 048D  
                        l1431 04C5                          l1423 04BD                          l1415 04AF  
                        l1327 04D7                          l1511 03D7                          l1407 02FC  
                        l1329 04E4                          l1345 0491                          l1433 04C9  
                        l1425 04BE                          l1417 04B7                          l1441 049A  
                        l1521 03F7                          l1513 03DC                          l1505 03CC  
                        l1361 0453                          l1409 0305                          l1339 0476  
                        l1427 04BF                          l1419 04BB                          l1443 04A4  
                        l1435 0499                          l1523 03F8                          l1515 03E0  
                        l1507 03CE                          l1363 0457                          l1355 044C  
                        l1347 043E                          l1373 04DB                          l1429 04C2  
                        l1445 04A8                          l1461 0326                          l1525 03FD  
                        l1517 03E4                          l1509 03D4                          l1365 0463  
                        l1357 044F                          l1349 0444                          l1471 0350  
                        l1463 0337                          l1519 03F3                          l1527 0403  
                        l1367 0468                          l1359 0451                          l1391 0279  
                        l1473 0362                          l1465 033A                          l1481 0378  
                        l1369 046F                          l1393 027D                          l1385 026E  
                        l1801 0070                          l1475 036A                          l1467 0345  
                        l1491 0398                          l1395 0281                          l1387 0271  
                        l1811 0095                          l1803 0072                          l1477 036B  
                        l1469 0349                          l1493 039C                          l1485 0381  
                        l1397 0293                          l1389 0275                          l1821 00EA  
                        l1813 00B0                          l1805 0074                          l1479 0372  
                        l1495 03AE                          l1487 038A                          l1399 02A4  
                        l1831 01A2                          l1823 00F6                          l1815 00CB  
                        l1807 0076                          l1497 03B6                          l1489 038D  
                        l1761 0412                          l1841 01ED                          l1833 01CD  
                        l1825 0121                          l1817 00DA                          l1809 007A  
                        l1499 03BD                          l1771 042D                          l1763 0417  
                        l1851 0253                          l1843 01FA                          l1835 01E4  
                        l1827 014C                          l1819 00DD                          l1773 0432  
                        l1765 041B                          l1757 0408                          l1853 0262  
                        l1845 0202                          l1837 01E7                          l1829 0177  
                        l1781 005B                          l1767 041F                          l1759 040F  
                        l1775 0438                          l1855 0266                          l1847 021D  
                        l1839 01EB                          l1791 0064                          l1783 005C  
                        l1769 0429                          l1857 0267                          l1849 0238  
                        l1793 0066                          l1785 005E                          l1795 0068  
                        l1787 0060                          l1779 0058                          l1797 006B  
                        l1789 0062                          l1799 006E                          _BRGH 0CF2  
                        u1010 03F3                          u1011 03F2                          u1005 03E5  
                        u1030 0403                          u1031 0402                          u1015 03EF  
                        u1025 03F9                          u1400 0438                          u1401 0437  
                        u1410 0266                          u1411 0265                          u1350 040F  
                        u1351 040E                          u1370 041F                          u1371 041E  
                        u1427 00E3                          u1380 0429                          u1381 0428  
                        u1365 0413                          u1437 01E8                          u1447 01F3  
                        u1385 0425                          u1457 0454                          u1395 042E  
                        i1l97 0043                          _TXIF 008C                          _main 0058  
                        _temp 0020                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                          start 0045  
                  i2c_write@i 0074                   i2c_read@ACK 0072                         ?_main 0070  
                       _ADRES 009B                         _BRG16 0CFB               __end_of___lldiv 0381  
             __end_of___llmod 03CC                         _LATC1 0871                         _LATC2 0872  
             __end_of___lwdiv 0408                         i1l100 0043                         i1l250 04F4  
                       i1l247 04ED               __end_of___lwmod 043D                         _RCREG 0199  
                       _RCSTA 019D                         _SPBRG 019B                         u82_20 04F2  
                       u82_21 04F1                         _TXREG 019A                         _TXSTA 019E  
                       _bf_rx 0028                         _bf_tx 0030          _USART_TransmitString 0498  
              __pbitbssCOMMON 03E0                         status 0003                         wtemp0 007E  
                 ?_USART_Init 0070               __initialization 0047                  __end_of_main 026E  
            __end_of_i2c_read 0471              __end_of_i2c_stop 04E4                        ??_main 005C  
                i2c_read@DATA 0074                        _ADCON0 009D                        _ADCON1 009E  
       ?_USART_TransmitString 0070              ___llmod@dividend 004D                        u120_20 0040  
                      u120_21 003F                        i1l1447 04ED                        i1l1449 04F2  
                      i1l1651 0014                        i1l1643 0006                        i1l1661 002E  
                      i1l1653 001A                        i1l1645 000B                        i1l1655 001E  
                      i1l1663 0030                        i1l1647 0011                        u114_20 0011  
                      i1l1665 0036                        i1l1657 0024                        i1l1649 0012  
                      u114_21 0010                        i1l1667 003A                        i1l1659 0028  
                      i1l1669 0040                        u115_20 001A                        u115_21 0019  
                      u116_20 001E                        u116_21 001D                        u117_20 002E  
                      u117_21 002D                        u118_20 0036                        u118_21 0035  
                      u119_20 003A                        u119_21 0039                        _OSCCON 0099  
                      _TRISC1 0471                        _TRISC2 0472                        _TRISC4 0474  
                      _TRISC5 0475                     ??___lldiv 0079                     ??___llmod 007A  
                      _ena_rx 03E1                     ??___lwdiv 0075                     ??___lwmod 0079  
  __end_of_USART_TransmitChar 04DB             __end_of_Cmd_Aht10 04D1       __end_of__initialization 0054  
              __pcstackCOMMON 0070                  __pidataBANK0 04FB             __end_of_i2c_start 04ED  
           __end_of_i2c_write 0498       USART_TransmitString@out 0073        ??_USART_TransmitString 0072  
                  __pbssBANK0 0020                     ?_i2c_read 0070                     ?_i2c_stop 0070  
                  __pmaintext 0058                    __pintentry 0004                    ??_i2c_read 0071  
                  ??_i2c_stop 0071                  ??_USART_Init 0071                       ___lldiv 0326  
                     ___llmod 0381                       ___lwdiv 03CC                       ___lwmod 0408  
                     __ptext1 026E                       __ptext2 043D                       __ptext3 0408  
                     __ptext4 03CC                       __ptext5 0381                       __ptext6 0326  
                     __ptext7 0498                       __ptext8 04D1                       __ptext9 04AF  
           __end_of_ngat_uart 0045                       _byte_rx 002E             __end_of_read_temp 0326  
          __end_of_USART_Init 04C2                       clrloop0 04F6          end_of_initialization 0054  
             ___lldiv@divisor 0071               ___lldiv@counter 0048                     _PORTCbits 000E  
               i2c_write@DATA 0073                  read_temp@dt1 004C                  read_temp@dt2 0050  
                read_temp@dt3 0054                     _TRISAbits 008C                     _TRISCbits 008E  
       USART_TransmitChar@out 0071                     _Cmd_Aht10 04C2                     i2c_read@i 0073  
          _USART_TransmitChar 04D1           ?_USART_TransmitChar 0070           start_initialization 0047  
                   _i2c_start 04E4                     _i2c_write 0471          ??_USART_TransmitChar 0071  
       USART_TransmitString@i 0074                    ?_Cmd_Aht10 0070               ___llmod@divisor 0049  
             ___llmod@counter 007B             _USART_ReceiveChar 04ED            ?_USART_ReceiveChar 0070  
                 __pdataBANK0 0060           ??_USART_ReceiveChar 0070                     ___latbits 0002  
               __pcstackBANK0 0044                    ?_i2c_start 0070                    ?_i2c_write 0070  
   __end_of_USART_ReceiveChar 04F5                     __pnvBANK0 005E              ___lwdiv@dividend 0073  
                    ?___lldiv 0071                      ?___llmod 0049                      ?___lwdiv 0071  
                    ?___lwmod 0044              ___lwdiv@quotient 0076                     _ngat_uart 0004  
                   _read_temp 026E                   ??_Cmd_Aht10 0075                      _LATAbits 010C  
                    _LATCbits 010E                     clear_ram0 04F5                      _PIE1bits 0091  
                    _PIR1bits 0011                    _ADCON0bits 009D                   ??_i2c_start 0071  
                 ??_i2c_write 0071                    ?_ngat_uart 0070                    ?_read_temp 0075  
                    _i2c_read 043D                      _i2c_stop 04DB                 _LCD_BACKLIGHT 0060  
                  _ANSELAbits 018C                    _ANSELCbits 018E               ___lwdiv@divisor 0071  
             ___lwdiv@counter 0078                      __ptext10 04C2                      __ptext11 0471  
                    __ptext12 04DB                      __ptext13 04E4                      __ptext15 04ED  
                    _ena_send 03E0                      _temp_glo 0024                      int$flags 007E  
                    _rx_index 002D                    _INTCONbits 000B                   ??_ngat_uart 0070  
                 ??_read_temp 0044                      intlevel1 0000              ___lwmod@dividend 0046  
            ___lldiv@dividend 0075  __end_of_USART_TransmitString 04AF              ___lldiv@quotient 0044  
             ___lwmod@divisor 0044               ___lwmod@counter 007A                 read_temp@temp 0058  
                 _printf_mode 002F                    _USART_Init 04AF  
